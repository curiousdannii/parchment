{
  "version": 3,
  "sources": ["../../src/upstream/ifvms.js/src/common/utils.js", "../../src/upstream/ifvms.js/src/common/file.js", "../../src/upstream/ifvms.js/src/common/ast.js", "../../src/upstream/ifvms.js/src/zvm/opcodes.js", "../../src/upstream/ifvms.js/src/zvm/runtime.js", "../../src/upstream/ifvms.js/src/zvm/text.js", "../../src/upstream/ifvms.js/src/zvm/io.js", "../../src/upstream/ifvms.js/src/zvm/disassembler.js", "../../src/upstream/ifvms.js/src/zvm.js", "../../src/upstream/ifvms.js/src/zvm/dispatch.js", "../../src/common/zvm.js"],
  "sourcesContent": ["/*\n\nCommon untility functions\n=========================\n\nCopyright (c) 2016 The ifvms.js team\nBSD licenced\nhttp://github.com/curiousdannii/ifvms.js\n\n*/\n\n'use strict';\n\n// Utility to extend objects\nfunction extend()\n{\n\tvar old = arguments[0], i = 1, add, name;\n\twhile ( i < arguments.length )\n\t{\n\t\tadd = arguments[i++];\n\t\tfor ( name in add )\n\t\t{\n\t\t\told[name] = add[name];\n\t\t}\n\t}\n\treturn old;\n}\n\n// Simple classes\n// Inspired by John Resig's class implementation\n// http://ejohn.org/blog/simple-javascript-inheritance/\n\nfunction Class()\n{}\n\nClass.subClass = function( props )\n{\n\tfunction newClass()\n\t{\n\t\tif ( this.init )\n\t\t{\n\t\t\tthis.init.apply( this, arguments );\n\t\t}\n\t}\n\tnewClass.prototype = extend( Object.create( this.prototype ), props );\n\tnewClass.subClass = this.subClass;\n\tnewClass.super = newClass.prototype.super = this.prototype;\n\treturn newClass;\n};\n\n// An enhanced DataView\n// Accepts an ArrayBuffer, another view (MemoryView / DataView / TypedArray), or a length number\nfunction MemoryView( buffer, byteOffset, byteLength )\n{\n\t// Length number\n\tif ( typeof buffer === 'number' )\n\t{\n\t\tbuffer = new ArrayBuffer( buffer );\n\t}\n\n\t// MemoryView / DataView / TypedArray\n\telse if ( buffer.buffer )\n\t{\n\t\t// If unspecified, byteOffset defaults at the beginning of the given view.  Note\n\t\t// that We will adjust 'byteOffset' after using the initial value to calculate\n\t\t// the default byteLength below.\n\t\tbyteOffset |= 0;\n\n\t\t// A view may be a subset of a potentially larger array buffer.  Before extracting\n\t\t// the underlying buffer, map the given 'byteLength' and byteOffset' to the underlying\n\t\t// array buffer from which we will construct the DataView.\n\n\t\t// A specified 'byteLength' does not need to be adjusted, but if no byteLength was\n\t\t// given, we need to ensure that the resulting MemoryView does not extend past the\n\t\t// end of the typed array (see above).\n\t\tif ( typeof byteLength === 'undefined' )\n\t\t{\n\t\t\tbyteLength = buffer.byteLength - byteOffset;\n\t\t}\n\n\t\t// Map the 'byteOffset', which is currently relative to the typed array, to the same\n\t\t// location in the underlying array buffer.\n\t\tbyteOffset += buffer.byteOffset;\n\n\t\t// Finally, extract the underlying array buffer.\n\t\tbuffer = buffer.buffer;\n\t}\n\t// Else already an ArrayBuffer. No adjustments to 'byteOffset'/'byteLength' necessary.\n\t\n\treturn extend( new DataView( buffer, byteOffset, byteLength ), {\n\t\tgetUint8Array: function( start, length )\n\t\t{\n\t\t\t// Note that start/length are non-optional, so we only need to adjust the start to\n\t\t\t// the byteOffset of the view.  (See MemoryView ctor comments.)\n\t\t\tstart += this.byteOffset;\n\n\t\t\treturn new Uint8Array( this.buffer.slice( start, start + length ) );\n\t\t},\n\t\tgetUint16Array: function( start, length )\n\t\t{\n\t\t\t// Note that start/length are non-optional, so we only need to adjust the start to\n\t\t\t// the byteOffset of the view.  (See MemoryView ctor comments.)\n\t\t\tstart += this.byteOffset;\n\n\t\t\t// We cannot simply return a Uint16Array as most systems are little-endian\n\t\t\treturn Uint8toUint16Array( new Uint8Array( this.buffer, start, length * 2 ) );\n\t\t},\n\t\tsetUint8Array: function( start, data )\n\t\t{\n\t\t\tif ( data instanceof ArrayBuffer )\n\t\t\t{\n\t\t\t\tdata = new Uint8Array( data );\n\t\t\t}\n\t\t\t( new Uint8Array( this.buffer, this.byteOffset, this.byteLength ) ).set( data, start );\n\t\t},\n\t\t//setBuffer16 NOTE: if we implement this we cannot simply set a Uint16Array as most systems are little-endian\n\t\t\n\t\t// For use with IFF files\n\t\tgetFourCC: function( index )\n\t\t{\n\t\t\treturn String.fromCharCode( this.getUint8( index ), this.getUint8( index + 1 ), this.getUint8( index + 2 ), this.getUint8( index + 3 ) );\n\t\t},\n\t\tsetFourCC: function( index, text )\n\t\t{\n\t\t\tthis.setUint8( index, text.charCodeAt( 0 ) );\n\t\t\tthis.setUint8( index + 1, text.charCodeAt( 1 ) );\n\t\t\tthis.setUint8( index + 2, text.charCodeAt( 2 ) );\n\t\t\tthis.setUint8( index + 3, text.charCodeAt( 3 ) );\n\t\t},\n\t} );\n}\n\n// Utilities for 16-bit signed arithmetic\nfunction U2S16( value )\n{\n\treturn value << 16 >> 16;\n}\nfunction S2U16 ( value )\n{\n\treturn value & 0xFFFF;\n}\n\n// Utility to convert from byte arrays to word arrays\nfunction Uint8toUint16Array( array )\n{\n\tvar i = 0, l = array.length,\n\tresult = new Uint16Array( l / 2 );\n\twhile ( i < l )\n\t{\n\t\tresult[i / 2] = array[i++] << 8 | array[i++];\n\t}\n\treturn result;\n}\n\nmodule.exports = {\n\textend: extend,\n\tClass: Class,\n\tMemoryView: MemoryView,\n\tU2S16: U2S16,\n\tS2U16: S2U16,\n\tUint8toUint16Array: Uint8toUint16Array,\n};", "/*\n\nFile classes\n============\n\nCopyright (c) 2016 The ifvms.js team\nBSD licenced\nhttp://github.com/curiousdannii/ifvms.js\n\n*/\n\n'use strict';\n\nvar utils = require( './utils.js' ),\nMemoryView = utils.MemoryView,\n\n// A basic IFF file, to be extended later\n// Currently supports buffer data\nIFF = utils.Class.subClass({\n\tinit: function( data )\n\t{\n\t\tthis.type = '';\n\t\tthis.chunks = [];\n\t\t\n\t\tif ( data )\n\t\t{\n\t\t\tvar view = MemoryView( data ),\n\t\t\ti = 12, length, chunk_length;\n\t\t\t\n\t\t\t// Check that it is actually an IFF file\n\t\t\tif ( view.getFourCC( 0 ) !== 'FORM' )\n\t\t\t{\n\t\t\t\tthrow new Error( 'Not an IFF file' );\n\t\t\t}\n\n\t\t\t// Parse the file\n\t\t\tthis.type = view.getFourCC( 8 );\n\t\t\tlength = view.getUint32( 4 ) + 8;\n\n\t\t\twhile ( i < length )\n\t\t\t{\n\t\t\t\tchunk_length = view.getUint32( i + 4 );\n\n\t\t\t\tif ( chunk_length < 0 || ( chunk_length + i ) > length )\n\t\t\t\t{\n\t\t\t\t\tthrow new Error( 'IFF chunk out of range' );\n\t\t\t\t}\n\n\t\t\t\tthis.chunks.push({\n\t\t\t\t\ttype: view.getFourCC( i ),\n\t\t\t\t\toffset: i,\n\t\t\t\t\tdata: view.getUint8Array( i + 8, chunk_length ),\n\t\t\t\t});\n\n\t\t\t\ti += 8 + chunk_length;\n\t\t\t\tif ( chunk_length % 2 )\n\t\t\t\t{\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\twrite: function()\n\t{\n\t\t// Start with the IFF type\n\t\tvar buffer_len = 12, i = 0, index = 12,\n\t\tout, chunk;\n\n\t\t// First calculate the required buffer length\n\t\twhile ( i < this.chunks.length )\n\t\t{\n\t\t\t// Replace typed arrays or dataviews with their buffers\n\t\t\tif ( this.chunks[i].data.buffer )\n\t\t\t{\n\t\t\t\tthis.chunks[i].data = this.chunks[i].data.buffer;\n\t\t\t}\n\t\t\tthis.chunks[i].length = this.chunks[i].data.byteLength || this.chunks[i].data.length;\n\t\t\tbuffer_len += 8 + this.chunks[i++].length;\n\t\t\tif ( buffer_len % 2 )\n\t\t\t{\n\t\t\t\tbuffer_len++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tout = MemoryView( buffer_len );\n\t\tout.setFourCC( 0, 'FORM' );\n\t\tout.setUint32( 4, buffer_len - 8 );\n\t\tout.setFourCC( 8, this.type );\n\t\t\n\t\t// Go through the chunks and write them out\n\t\ti = 0;\n\t\twhile ( i < this.chunks.length )\n\t\t{\n\t\t\tchunk = this.chunks[i++];\n\t\t\tout.setFourCC( index, chunk.type );\n\t\t\tout.setUint32( index + 4, chunk.length );\n\t\t\tout.setUint8Array( index + 8, chunk.data );\n\t\t\tindex += 8 + chunk.length;\n\t\t\tif ( index % 2 )\n\t\t\t{\n\t\t\t\tindex++;\n\t\t\t}\n\t\t}\n\n\t\treturn out.buffer;\n\t},\n}),\n\nBlorb = IFF.subClass({\n\tinit: function( data )\n\t{\n\t\tthis.super.init.call( this, data );\n\t\tif ( data )\n\t\t{\n\t\t\tif ( this.type !== 'IFRS' )\n\t\t\t{\n\t\t\t\tthrow new Error( 'Not a Blorb file' );\n\t\t\t}\n\t\t\t\n\t\t\t// Process the RIdx chunk to find the main exec chunk\n\t\t\tif ( this.chunks[0].type !== 'RIdx' )\n\t\t\t{\n\t\t\t\tthrow new Error( 'Malformed Blorb: chunk 1 is not RIdx' );\n\t\t\t}\n\t\t\tvar view = MemoryView( this.chunks[0].data ),\n\t\t\ti = 4;\n\t\t\twhile ( i < this.chunks[0].data.length )\n\t\t\t{\n\t\t\t\tif ( view.getFourCC( i ) === 'Exec' && view.getUint32( i + 4 ) === 0 )\n\t\t\t\t{\n\t\t\t\t\tthis.exec = this.chunks.filter( function( chunk )\n\t\t\t\t\t{\n\t\t\t\t\t\treturn chunk.offset === view.getUint32( i + 8 );\n\t\t\t\t\t})[0];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\ti += 12;\n\t\t\t}\n\t\t}\n\t},\n}),\n\nQuetzal = IFF.subClass({\n\t// Parse a Quetzal savefile, or make a blank one\n\tinit: function( data )\n\t{\n\t\tthis.super.init.call( this, data );\n\t\tif ( data )\n\t\t{\n\t\t\t// Check this is a Quetzal savefile\n\t\t\tif ( this.type !== 'IFZS' )\n\t\t\t{\n\t\t\t\tthrow new Error( 'Not a Quetzal savefile' );\n\t\t\t}\n\n\t\t\t// Go through the chunks and extract the useful ones\n\t\t\tvar i = 0,\n\t\t\ttype, chunk_data, view;\n\t\t\t\n\t\t\twhile ( i < this.chunks.length )\n\t\t\t{\n\t\t\t\ttype = this.chunks[i].type;\n\t\t\t\tchunk_data = this.chunks[i++].data;\n\n\t\t\t\t// Memory and stack chunks\n\t\t\t\tif ( type === 'CMem' || type === 'UMem' )\n\t\t\t\t{\n\t\t\t\t\tthis.memory = chunk_data;\n\t\t\t\t\tthis.compressed = ( type === 'CMem' );\n\t\t\t\t}\n\t\t\t\telse if ( type === 'Stks' )\n\t\t\t\t{\n\t\t\t\t\tthis.stacks = chunk_data;\n\t\t\t\t}\n\n\t\t\t\t// Story file data\n\t\t\t\telse if ( type === 'IFhd' )\n\t\t\t\t{\n\t\t\t\t\tview = MemoryView( chunk_data.buffer );\n\t\t\t\t\tthis.release = view.getUint16( 0 );\n\t\t\t\t\tthis.serial = view.getUint8Array( 2, 6 );\n\t\t\t\t\t// The checksum isn't used, but if we throw it away we can't round-trip\n\t\t\t\t\tthis.checksum = view.getUint16( 8 );\n\t\t\t\t\t// The pc is only a Uint24, but there's no function for that, so grab an extra byte and then discard it\n\t\t\t\t\tthis.pc = view.getUint32( 9 ) & 0xFFFFFF;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Write out a savefile\n\twrite: function()\n\t{\n\t\t// Reset the IFF type\n\t\tthis.type = 'IFZS';\n\n\t\t// Format the IFhd chunk correctly\n\t\tvar ifhd = MemoryView( 13 );\n\t\tifhd.setUint16( 0, this.release );\n\t\tifhd.setUint8Array( 2, this.serial );\n\t\tifhd.setUint32( 9, this.pc );\n\t\tifhd.setUint16( 8, this.checksum );\n\n\t\t// Add the chunks\n\t\tthis.chunks = [\n\t\t\t{ type: 'IFhd', data: ifhd },\n\t\t\t{ type: ( this.compressed ? 'CMem' : 'UMem' ), data: this.memory },\n\t\t\t{ type: 'Stks', data: this.stacks },\n\t\t];\n\n\t\t// Return the byte array\n\t\treturn this.super.write.call( this );\n\t},\n});\n\n// Inspect a file and identify its format and version number\nfunction identify( buffer )\n{\n\tvar view = MemoryView( buffer ),\n\tblorb,\n\tformat,\n\tversion;\n\t\n\t// Blorb\n\tif ( view.getFourCC( 0 ) === 'FORM' && view.getFourCC( 8 ) === 'IFRS' )\n\t{\n\t\tblorb = new Blorb( buffer );\n\t\tif ( blorb.exec )\n\t\t{\n\t\t\tformat = blorb.exec.type;\n\t\t\tbuffer = blorb.exec.data;\n\t\t\tif ( format === 'GLUL' )\n\t\t\t{\n\t\t\t\tview = MemoryView( buffer );\n\t\t\t\tversion = view.getUint32( 4 );\n\t\t\t}\n\t\t\tif ( format === 'ZCOD' )\n\t\t\t{\n\t\t\t\tversion = buffer[0];\n\t\t\t}\n\t\t}\n\t}\n\t// Glulx\n\telse if ( view.getFourCC( 0 ) === 'Glul' )\n\t{\n\t\tformat = 'GLUL';\n\t\tversion = view.getUint32( 4 );\n\t}\n\t// Z-Code\n\telse\n\t{\n\t\tversion = view.getUint8( 0 );\n\t\tif ( version > 0 && version < 9 )\n\t\t{\n\t\t\tformat = 'ZCOD';\n\t\t}\n\t}\n\t\n\tif ( format && version )\n\t{\n\t\treturn {\n\t\t\tformat: format,\n\t\t\tversion: version,\n\t\t\tdata: buffer,\n\t\t};\n\t}\n}\n\nmodule.exports = {\n\tIFF: IFF,\n\tBlorb: Blorb,\n\tQuetzal: Quetzal,\n\tidentify: identify,\n};\n", "/*\n\nAbstract syntax trees for IF VMs\n================================\n\nCopyright (c) 2017 The ifvms.js team\nBSD licenced\nhttp://github.com/curiousdannii/ifvms.js\n\n*/\n\n'use strict';\n\n/*\n\nAll AST nodes must use these functions, even constants\n(An exception is made for branch addresses and text literals which remain as primitives)\ntoString() functions are used to generate JIT code\n\nAside from Variable is currently generic and could be used for Glulx too\n\nTODO:\n\tUse strict mode for new Function()?\n\tWhen we can run through a whole game, test whether using common_func is faster (if its slower then not worth the file size saving)\n\tCan we eliminate the Operand class?\n\tSubclass Operand/Variable from Number?\n\tReplace calls to args() with arguments.join()?\n\n*/\n\nvar utils = require( '../common/utils.js' ),\nClass = utils.Class,\nU2S = utils.U2S16,\n//S2U = utils.S2U16;\n\n// Generic/constant operand\n// Value is a constant\nOperand = Class.subClass({\n\tinit: function( engine, value )\n\t{\n\t\tthis.e = engine;\n\t\tthis.v = value;\n\t},\n\ttoString: function()\n\t{\n\t\treturn this.v;\n\t},\n\n\t// Convert an Operand into a signed operand\n\tU2S: function()\n\t{\n\t\treturn U2S( this.v );\n\t},\n}),\n\n// Variable operand\n// Value is the variable number\n// TODO: unrolling is needed -> retain immediate returns if optimisations are disabled\nVariable = Operand.subClass({\n\t// Get a value\n\ttoString: function()\n\t{\n\t\tvar variable = this.v;\n\n\t\t// Indirect\n\t\tif ( this.indirect )\n\t\t{\n\t\t\treturn 'e.indirect(' + variable + ')';\n\t\t}\n\n\t\t// Stack\n\t\tif ( variable === 0 )\n\t\t{\n\t\t\t// If we've been passed a value we're setting a variable\n\t\t\treturn 's[--e.sp]';\n\t\t}\n\t\t// Locals\n\t\tif ( --variable < 15 )\n\t\t{\n\t\t\treturn 'l[' + variable + ']';\n\t\t}\n\t\t// Globals\n\t\treturn 'e.m.getUint16(' + ( this.e.globals + ( variable - 15 ) * 2 ) + ')';\n\t},\n\n\t// Store a value\n\tstore: function( value )\n\t{\n\t\tvar variable = this.v;\n\n\t\t// Indirect variable\n\t\tif ( this.indirect )\n\t\t{\n\t\t\treturn 'e.indirect(' + variable + ',' + value + ')';\n\t\t}\n\n\t\t// BrancherStorers need the value\n\t\tif ( this.returnval )\n\t\t{\n\t\t\treturn 'e.variable(' + variable + ',' + value + ')';\n\t\t}\n\n\t\t// Stack\n\t\tif ( variable === 0 )\n\t\t{\n\t\t\t// If we've been passed a value we're setting a variable\n\t\t\treturn 't=' + value + ';s[e.sp++]=t';\n\t\t}\n\t\t// Locals\n\t\tif ( --variable < 15 )\n\t\t{\n\t\t\treturn 'l[' + variable + ']=' + value;\n\t\t}\n\t\t// Globals\n\t\treturn 'e.ram.setUint16(' + ( this.e.globals + ( variable - 15 ) * 2 ) + ',' + value + ')';\n\t},\n\n\t// Convert an Operand into a signed operand\n\tU2S: function()\n\t{\n\t\treturn 'e.U2S(' + this + ')';\n\t},\n}),\n\n// Generic opcode\n// .func() must be set, which returns what .write() will actually return; it is passed the operands as its arguments\nOpcode = Class.subClass({\n\tinit: function( engine, context, code, pc, next, operands )\n\t{\n\t\tthis.e = engine;\n\t\tthis.context = context;\n\t\tthis.code = code;\n\t\tthis.pc = pc;\n\t\tthis.labels = [ this.pc + '/' + this.code ];\n\t\tthis.next = next;\n\t\tthis.operands = operands;\n\n\t\t// Post-init function (so that they don't all have to call _super)\n\t\tif ( this.post )\n\t\t{\n\t\t\tthis.post();\n\t\t}\n\t},\n\n\t// Write out the opcode, passing .operands to .func(), with a JS comment of the pc/opcode\n\ttoString: function()\n\t{\n\t\treturn this.label() + ( this.func ? this.func.apply( this, this.operands ) : '' );\n\t},\n\n\t// Return a string of the operands separated by commas\n\targs: function( joiner )\n\t{\n\t\treturn this.operands.join( joiner );\n\t},\n\n\t// Generate a comment of the pc and code, possibly for more than one opcode\n\tlabel: function()\n\t{\n\t\treturn '/* ' + this.labels.join() + ' */ ';\n\t},\n}),\n\n// Stopping opcodes\nStopper = Opcode.subClass({\n\tstopper: 1,\n}),\n\n// Pausing opcodes (ie, set the pc at the end of the context)\nPauser = Stopper.subClass({\n\tpost: function()\n\t{\n\t\tthis.origfunc = this.func;\n\t\tthis.func = this.newfunc;\n\t},\n\n\tnewfunc: function()\n\t{\n\t\treturn 'e.stop=1;e.pc=' + this.next + ';' + this.origfunc.apply( this, arguments );\n\t},\n}),\n\nPauserStorer = Pauser.subClass({\n\tstorer: 1,\n\n\tpost: function()\n\t{\n\t\tthis.storer = this.operands.pop();\n\t\tthis.origfunc = this.func;\n\t\tthis.func = this.newfunc;\n\t},\n}),\n\n// Join multiple branchers together with varying logic conditions\nBrancherLogic = Class.subClass({\n\tinit: function( ops, code )\n\t{\n\t\tthis.ops = ops || [];\n\t\tthis.code = code || '||';\n\t},\n\n\ttoString: function()\n\t{\n\t\tvar i = 0,\n\t\tops = [],\n\t\top;\n\t\twhile ( i < this.ops.length )\n\t\t{\n\t\t\top = this.ops[i++];\n\t\t\t// Accept either Opcodes or further BrancherLogics\n\t\t\tops.push(\n\t\t\t\top.func ?\n\t\t\t\t\t( op.iftrue ? '' : '!(' ) + op.func.apply( op, op.operands ) + ( op.iftrue ? '' : ')' ) :\n\t\t\t\t\top\n\t\t\t);\n\t\t}\n\t\treturn ( this.invert ? '(!(' : '(' ) + ops.join( this.code ) + ( this.invert ? '))' : ')' );\n\t},\n}),\n\n// Branching opcodes\nBrancher = Opcode.subClass({\n\t// Flag for the disassembler\n\tbrancher: 1,\n\n\tkeyword: 'if',\n\n\t// Process the branch result now\n\tpost: function()\n\t{\n\t\tvar result,\n\t\tprev,\n\n\t\t// Calculate the offset\n\t\tbrancher = this.operands.pop(),\n\t\toffset = brancher[1];\n\t\tthis.iftrue = brancher[0];\n\n\t\t// Process the offset\n\t\tif ( offset === 0 || offset === 1 )\n\t\t{\n\t\t\tresult = 'e.ret(' + offset + ')';\n\t\t}\n\t\telse\n\t\t{\n\t\t\toffset += this.next - 2;\n\n\t\t\t// Add this target to this context's list\n\t\t\tthis.context.targets.push( offset );\n\t\t\tresult = 'e.pc=' + offset;\n\t\t}\n\n\t\tthis.result = result + ';return';\n\t\tthis.offset = offset;\n\t\tthis.cond = new BrancherLogic( [this] );\n\n\t\t// TODO: re-enable\n\t\t/*if ( this.e.options.debug )\n\t\t{\n\t\t\t// Stop if we must\n\t\t\tif ( debugflags.noidioms )\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t}*/\n\n\t\t// Compare with previous statement\n\t\tif ( this.context.ops.length )\n\t\t{\n\t\t\tprev = this.context.ops.pop();\n\t\t\t// As long as no other opcodes have an offset property we can skip the instanceof check\n\t\t\tif ( /* prev instanceof Brancher && */ prev.offset === offset )\n\t\t\t{\n\t\t\t\t// Goes to same offset so reuse the Brancher arrays\n\t\t\t\tthis.cond.ops.unshift( prev.cond );\n\t\t\t\tthis.labels = prev.labels;\n\t\t\t\tthis.labels.push( this.pc + '/' + this.code );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.context.ops.push( prev );\n\t\t\t}\n\t\t}\n\t},\n\n\t// Write out the brancher\n\ttoString: function()\n\t{\n\t\tvar result = this.result;\n\n\t\t// Account for Contexts\n\t\tif ( result instanceof Context )\n\t\t{\n\t\t\t// Update the context to be a child of this context\n\t\t\tif ( this.e.options.debug )\n\t\t\t{\n\t\t\t\tresult.context = this.context;\n\t\t\t}\n\n\t\t\tresult = result + ( result.stopper ? '; return' : '' );\n\n\t\t\t// Extra line breaks for multi-op results\n\t\t\tif ( this.result.ops.length > 1 )\n\t\t\t{\n\t\t\t\tresult = '\\n' + result + '\\n';\n\t\t\t\tif ( this.e.options.debug )\n\t\t\t\t{\n\t\t\t\t\tresult += this.context.spacer;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Print out a label for all included branches and the branch itself\n\t\treturn this.label() + this.keyword + this.cond + ' {' + result + '}';\n\t},\n}),\n\n// Brancher + Storer\nBrancherStorer = Brancher.subClass({\n\tstorer: 1,\n\n\t// Set aside the storer operand\n\tpost: function()\n\t{\n\t\tBrancherStorer.super.post.call( this );\n\t\tthis.storer = this.operands.pop();\n\t\tthis.storer.returnval = 1;\n\n\t\t// Replace the func\n\t\tthis.origfunc = this.func;\n\t\tthis.func = this.newfunc;\n\t},\n\n\tnewfunc: function()\n\t{\n\t\treturn this.storer.store( this.origfunc.apply( this, arguments ) );\n\t},\n}),\n\n// Storing opcodes\nStorer = Opcode.subClass({\n\t// Flag for the disassembler\n\tstorer: 1,\n\n\t// Set aside the storer operand\n\tpost: function()\n\t{\n\t\tthis.storer = this.operands.pop();\n\t},\n\n\t// Write out the opcode, passing it to the storer (if there still is one)\n\ttoString: function()\n\t{\n\t\tvar data = Storer.super.toString.call( this );\n\n\t\t// If we still have a storer operand, use it\n\t\t// Otherwise (if it's been removed due to optimisations) just return func()\n\t\treturn this.storer ? this.storer.store( data ) : data;\n\t},\n}),\n\n// Routine calling opcodes\nCaller = Stopper.subClass({\n\t// Fake a result variable\n\tresult: { v: -1 },\n\n\t// Write out the opcode\n\ttoString: function()\n\t{\n\t\t// TODO: Debug: include label if possible\n\t\treturn this.label() + 'e.call(' + this.operands.shift() + ',' + this.result.v + ',' + this.next + ',[' + this.args() + '])';\n\t},\n}),\n\n// Routine calling opcodes, storing the result\nCallerStorer = Caller.subClass({\n\t// Flag for the disassembler\n\tstorer: 1,\n\n\tpost: function()\n\t{\n\t\t// We can't let the storer be optimised away here\n\t\tthis.result = this.operands.pop();\n\t},\n}),\n\n// A generic context (a routine, loop body etc)\nContext = Class.subClass({\n\tinit: function( engine, pc )\n\t{\n\t\tthis.e = engine;\n\t\tthis.pc = pc;\n\t\tthis.pre = [];\n\t\tthis.ops = [];\n\t\tthis.post = [];\n\t\tthis.targets = []; // Branch targets\n\t\tif ( engine.options.debug )\n\t\t{\n\t\t\tthis.spacer = '';\n\t\t}\n\t},\n\n\ttoString: function()\n\t{\n\t\tif ( this.e.options.debug )\n\t\t{\n\t\t\t// Indent the spacer further if needed\n\t\t\tif ( this.context )\n\t\t\t{\n\t\t\t\tthis.spacer = this.context.spacer + '  ';\n\t\t\t}\n\t\t\t// DEBUG: Pretty print!\n\t\t\treturn this.pre.join( '' ) + ( this.ops.length > 1 ? this.spacer : '' ) + this.ops.join( ';\\n' + this.spacer ) + this.post.join( '' );\n\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Return the code\n\t\t\treturn this.pre.join( '' ) + this.ops.join( ';' ) + this.post.join( '' );\n\t\t}\n\t},\n}),\n\n// A routine body\nRoutineContext = Context.subClass({\n\ttoString: function()\n\t{\n\t\t// TODO: Debug: If we have routine names, find this one's name\n\n\t\t// Add in some extra vars and return\n\t\tthis.pre.unshift( 'var l=e.l,s=e.s,t=0;\\n' );\n\t\treturn RoutineContext.super.toString.call( this );\n\t},\n});\n\n// Opcode builder\n// Easily build a new opcode from a class\nfunction opcode_builder( Class, func, flags )\n{\n\tflags = flags || {};\n\tif ( func )\n\t{\n\t\t/*if ( func.pop )\n\t\t{\n\t\t\tflags.str = func;\n\t\t\tflags.func = common_func;\n\t\t}\n\t\telse\n\t\t{*/\n\t\tflags.func = func;\n\t\t//}\n\t}\n\treturn Class.subClass( flags );\n}\n\nmodule.exports = {\n\tOperand: Operand,\n\tVariable: Variable,\n\tOpcode: Opcode,\n\tStopper: Stopper,\n\tPauser: Pauser,\n\tPauserStorer: PauserStorer,\n\tBrancherLogic: BrancherLogic,\n\tBrancher: Brancher,\n\tBrancherStorer: BrancherStorer,\n\tStorer: Storer,\n\tCaller: Caller,\n\tCallerStorer: CallerStorer,\n\tContext: Context,\n\tRoutineContext: RoutineContext,\n\topcode_builder: opcode_builder,\n};\n", "/*\n\nZ-Machine opcodes\n=================\n\nCopyright (c) 2017 The ifvms.js team\nMIT licenced\nhttps://github.com/curiousdannii/ifvms.js\n\n*/\n\n'use strict';\n\n/*\n\nTODO:\n\tAbstract out the signed conversions such that they can be eliminated if possible\n\tdon't access memory directly\n\n*/\n\nvar AST = require( '../common/ast.js' ),\nVariable = AST.Variable,\nOpcode = AST.Opcode,\nStopper = AST.Stopper,\nPauser = AST.Pauser,\nPauserStorer = AST.PauserStorer,\nBrancher = AST.Brancher,\nBrancherStorer = AST.BrancherStorer,\nStorer = AST.Storer,\nCaller = AST.Caller,\nCallerStorer = AST.CallerStorer,\nopcode_builder = AST.opcode_builder,\n\n// Common functions, variables and opcodes\nsimple_func = function( a ) { return '' + a; },\nstack_var = new Variable( this.e, 0 ),\nalwaysbranch = opcode_builder( Brancher, function() { return 1; } ),\nnot = opcode_builder( Storer, function( a ) { return 'e.S2U(~' + a + ')'; } ),\n\n// Indirect storer opcodes - rather non-generic I'm afraid\n// Not used for inc/dec\n// @load (variable) -> (result)\n// @pull (variable)\n// @store (variable) value\nIndirect = Storer.subClass({\n\tstorer: 0,\n\n\tpost: function()\n\t{\n\t\tvar operands = this.operands,\n\t\top0 = operands[0],\n\t\top0isVar = op0 instanceof Variable;\n\n\t\t// Replace the indirect operand with a Variable, and set .indirect if needed\n\t\toperands[0] = new Variable( this.e, op0isVar ? op0 : op0.v );\n\t\tif ( op0isVar || op0.v === 0 )\n\t\t{\n\t\t\toperands[0].indirect = 1;\n\t\t}\n\n\t\t// Get the storer\n\t\tthis.storer = this.code === 142 ? operands.pop() : operands.shift();\n\n\t\t// @pull needs an added stack. If for some reason it was compiled with two operands this will break!\n\t\tif ( operands.length === 0 )\n\t\t{\n\t\t\toperands.push( stack_var );\n\t\t}\n\t},\n\n\tfunc: simple_func,\n}),\n\nIncdec = Opcode.subClass({\n\tfunc: function( variable )\n\t{\n\t\tvar varnum = variable.v - 1,\n\t\toperator = this.code % 2 ? 1 : -1;\n\n\t\t// Fallback to the runtime function if our variable is a variable operand itself\n\t\t// Or, if it's a global\n\t\tif ( variable instanceof Variable || varnum > 14 )\n\t\t{\n\t\t\treturn 'e.incdec(' + variable + ',' + operator + ')';\n\t\t}\n\n\t\treturn ( varnum < 0 ? 'e.s[e.sp-1]' : 'e.l[' + varnum + ']' ) + ( operator === 1 ? '++' : '--' );\n\t},\n}),\n\n// Version 3 @save/restore branch instead of store\nV3SaveRestore = Stopper.subClass({\n\tbrancher: 1,\n\n\ttoString: function()\n\t{\n\t\treturn 'e.stop=1;e.' + ( this.code === 181 ? 'save' : 'restore' ) + '(' + ( this.pc + 1 ) + ')';\n\t},\n}),\n\nV45Restore = opcode_builder( PauserStorer, function() { return 'e.restore(' + ( this.next - 1 ) + ')'; } ),\nV45Save = opcode_builder( PauserStorer, function() { return 'e.save(' + ( this.next - 1 ) + ')'; } );\n\n/*eslint brace-style: \"off\" */\n/*eslint indent: \"off\" */\n\nmodule.exports = function( version )\n{\n\nreturn {\n\n/* je */ 1: opcode_builder( Brancher, function() { return arguments.length === 2 ? this.args( '===' ) : 'e.jeq(' + this.args() + ')'; } ),\n/* jl */ 2: opcode_builder( Brancher, function( a, b ) { return a.U2S() + '<' + b.U2S(); } ),\n/* jg */ 3: opcode_builder( Brancher, function( a, b ) { return a.U2S() + '>' + b.U2S(); } ),\n// Too many U2S/S2U for these...\n/* dec_chk */ 4: opcode_builder( Brancher, function( variable, value ) { return 'e.U2S(e.incdec(' + variable + ',-1))<' + value.U2S(); } ),\n/* inc_chk */ 5: opcode_builder( Brancher, function( variable, value ) { return 'e.U2S(e.incdec(' + variable + ',1))>' + value.U2S(); } ),\n/* jin */ 6: opcode_builder( Brancher, function() { return 'e.jin(' + this.args() + ')'; } ),\n/* test */ 7: opcode_builder( Brancher, function() { return 'e.test(' + this.args() + ')'; } ),\n/* or */ 8: opcode_builder( Storer, function() { return this.args( '|' ); } ),\n/* and */ 9: opcode_builder( Storer, function() { return this.args( '&' ); } ),\n/* test_attr */ 10: opcode_builder( Brancher, function() { return 'e.test_attr(' + this.args() + ')'; } ),\n/* set_attr */ 11: opcode_builder( Opcode, function() { return 'e.set_attr(' + this.args() + ')'; } ),\n/* clear_attr */ 12: opcode_builder( Opcode, function() { return 'e.clear_attr(' + this.args() + ')'; } ),\n/* store */ 13: Indirect,\n/* insert_obj */ 14: opcode_builder( Opcode, function() { return 'e.insert_obj(' + this.args() + ')'; } ),\n/* loadw */ 15: opcode_builder( Storer, function( array, index ) { return 'e.m.getUint16(e.S2U(' + array + '+2*' + index.U2S() + '))'; } ),\n/* loadb */ 16: opcode_builder( Storer, function( array, index ) { return 'e.m.getUint8(e.S2U(' + array + '+' + index.U2S() + '))'; } ),\n/* get_prop */ 17: opcode_builder( Storer, function() { return 'e.get_prop(' + this.args() + ')'; } ),\n/* get_prop_addr */ 18: opcode_builder( Storer, function() { return 'e.find_prop(' + this.args() + ')'; } ),\n/* get_next_prop */ 19: opcode_builder( Storer, function() { return 'e.find_prop(' + this.args( ',0,' ) + ')'; } ),\n/* add */ 20: opcode_builder( Storer, function() { return 'e.S2U(' + this.args( '+' ) + ')'; } ),\n/* sub */ 21: opcode_builder( Storer, function() { return 'e.S2U(' + this.args( '-' ) + ')'; } ),\n/* mul */ 22: opcode_builder( Storer, function() { return 'e.S2U(' + this.args( '*' ) + ')'; } ),\n/* div */ 23: opcode_builder( Storer, function( a, b ) { return 'e.S2U(parseInt(' + a.U2S() + '/' + b.U2S() + '))'; } ),\n/* mod */ 24: opcode_builder( Storer, function( a, b ) { return 'e.S2U(' + a.U2S() + '%' + b.U2S() + ')'; } ),\n/* call_2s */ 25: CallerStorer,\n/* call_2n */ 26: Caller,\n/* set_colour */ 27: opcode_builder( Opcode, function() { return 'e.set_colour(' + this.args() + ')'; } ),\n/* throw */ 28: opcode_builder( Stopper, function( value, cookie ) { return 'while(e.frames.length+1>' + cookie + '){e.frameptr=e.frames.pop()}return ' + value; } ),\n/* jz */ 128: opcode_builder( Brancher, function( a ) { return a + '===0'; } ),\n/* get_sibling */ 129: opcode_builder( BrancherStorer, function( obj ) { return 'e.get_sibling(' + obj + ')'; } ),\n/* get_child */ 130: opcode_builder( BrancherStorer, function( obj ) { return 'e.get_child(' + obj + ')'; } ),\n/* get_parent */ 131: opcode_builder( Storer, function( obj ) { return 'e.get_parent(' + obj + ')'; } ),\n/* get_prop_length */ 132: opcode_builder( Storer, function( a ) { return 'e.get_prop_len(' + a + ')'; } ),\n/* inc */ 133: Incdec,\n/* dec */ 134: Incdec,\n/* print_addr */ 135: opcode_builder( Opcode, function( addr ) { return 'e.print(2,' + addr + ')'; } ),\n/* call_1s */ 136: CallerStorer,\n/* remove_obj */ 137: opcode_builder( Opcode, function( obj ) { return 'e.remove_obj(' + obj + ')'; } ),\n/* print_obj */ 138: opcode_builder( Opcode, function( obj ) { return 'e.print(3,' + obj + ')'; } ),\n/* ret */ 139: opcode_builder( Stopper, function( a ) { return 'return ' + a; } ),\n/* jump */ 140: opcode_builder( Stopper, function( a ) { return 'e.pc=' + a.U2S() + '+' + ( this.next - 2 ); } ),\n/* print_paddr */ 141: opcode_builder( Opcode, function( addr ) { return 'e.print(2,' + addr + '*' + this.e.addr_multipler + ')'; } ),\n/* load */ 142: Indirect.subClass( { storer: 1 } ),\n143: version < 5 ?\n\t/* not (v3/4) */ not :\n\t/* call_1n (v5/8) */ Caller,\n/* rtrue */ 176: opcode_builder( Stopper, function() { return 'return 1'; } ),\n/* rfalse */ 177: opcode_builder( Stopper, function() { return 'return 0'; } ),\n// Reconsider a generalised class for @print/@print_ret?\n/* print */ 178: opcode_builder( Opcode, function( text ) { return 'e.print(2,' + text + ')'; }, { printer: 1 } ),\n/* print_ret */ 179: opcode_builder( Stopper, function( text ) { return 'e.print(2,' + text + ');e.print(1,13);return 1'; }, { printer: 1 } ),\n/* nop */ 180: Opcode,\n/* save (v3/4) */ 181: version < 4 ?\n\tV3SaveRestore :\n\tV45Save,\n/* restore(v3/4) */ 182: version < 4 ?\n\tV3SaveRestore :\n\tV45Restore,\n/* restart */ 183: opcode_builder( Stopper, function() { return 'e.restart()'; } ),\n/* ret_popped */ 184: opcode_builder( Stopper, function( a ) { return 'return ' + a; }, { post: function() { this.operands.push( stack_var ); } } ),\n185: version < 5 ?\n\t/* pop (v3/4) */ opcode_builder( Opcode, function() { return 's[--e.sp]'; } ) :\n\t/* catch (v5/8) */ opcode_builder( Storer, function() { return 'e.frames.length+1'; } ),\n/* quit */ 186: opcode_builder( Pauser, function() { return 'e.quit=1;e.Glk.glk_exit()'; } ),\n/* new_line */ 187: opcode_builder( Opcode, function() { return 'e.print(1,13)'; } ),\n188: version < 4 ?\n\t/* show_status (v3) */ opcode_builder( Stopper, function() { return 'e.pc=' + this.next + ';e.v3_status()'; } ) :\n\t/* act as a nop in later versions */ Opcode,\n/* verify */ 189: alwaysbranch, // Actually check??\n/* piracy */ 191: alwaysbranch,\n/* call_vs */ 224: CallerStorer,\n/* storew */ 225: opcode_builder( Opcode, function( array, index, value ) { return 'e.ram.setUint16(e.S2U(' + array + '+2*' + index.U2S() + '),' + value + ')'; } ),\n/* storeb */ 226: opcode_builder( Opcode, function( array, index, value ) { return 'e.ram.setUint8(e.S2U(' + array + '+' + index.U2S() + '),' + value + ')'; } ),\n/* put_prop */ 227: opcode_builder( Opcode, function() { return 'e.put_prop(' + this.args() + ')'; } ),\n/* read */ 228: version < 5 ?\n\topcode_builder( Pauser, function() { return 'e.read(0,' + this.args() + ')'; } ) :\n\topcode_builder( PauserStorer, function() { return 'e.read(' + this.storer.v + ',' + this.args() + ')'; } ),\n/* print_char */ 229: opcode_builder( Opcode, function( a ) { return 'e.print(4,' + a + ')'; } ),\n/* print_num */ 230: opcode_builder( Opcode, function( a ) { return 'e.print(0,' + a.U2S() + ')'; } ),\n/* random */ 231: opcode_builder( Storer, function( a ) { return 'e.random(' + a.U2S() + ')'; } ),\n/* push */ 232: opcode_builder( Storer, simple_func, { post: function() { this.storer = stack_var; }, storer: 0 } ),\n/* pull */ 233: Indirect,\n/* split_window */ 234: opcode_builder( Opcode, function( lines ) { return 'e.split_window(' + lines + ')'; } ),\n/* set_window */ 235: opcode_builder( Opcode, function( wind ) { return 'e.set_window(' + wind + ')'; } ),\n/* call_vs2 */ 236: CallerStorer,\n/* erase_window */ 237: opcode_builder( Opcode, function( win ) { return 'e.erase_window(' + win.U2S() + ')'; } ),\n/* erase_line */ 238: opcode_builder( Opcode, function( a ) { return 'e.erase_line(' + a + ')'; } ),\n/* set_cursor */ 239: opcode_builder( Opcode, function( row, col ) { return 'e.set_cursor(' + row + '-1,' + col + '-1)'; } ),\n/* get_cursor */ 240: opcode_builder( Opcode, function( addr ) { return 'e.get_cursor(' + addr + ')'; } ),\n/* set_text_style */ 241: opcode_builder( Opcode, function( stylebyte ) { return 'e.set_style(' + stylebyte + ')'; } ),\n/* buffer_mode */ 242: Opcode, // We don't support non-buffered output\n/* output_stream */ 243: opcode_builder( Stopper, function() { return 'e.pc=' + this.next + ';e.output_stream(' + this.args() + ')'; } ),\n/* input_stream */ 244: opcode_builder( Pauser, function() { return 'e.input_stream(' + this.args() + ')'; } ),\n/* sound_effect */ 245: Opcode, // We don't support sounds\n/* read_char */ 246: opcode_builder( PauserStorer, function() { return 'e.read_char(' + this.storer.v + ',' + ( this.args() || '1' ) + ')'; } ),\n/* scan_table */ 247: opcode_builder( BrancherStorer, function() { return 'e.scan_table(' + this.args() + ')'; } ),\n/* not (v5/8) */ 248: not,\n/* call_vn */ 249: Caller,\n/* call_vn2 */ 250: Caller,\n/* tokenise */ 251: opcode_builder( Opcode, function() { return 'e.tokenise(' + this.args() + ')'; } ),\n/* encode_text */ 252: opcode_builder( Opcode, function() { return 'e.encode_text(' + this.args() + ')'; } ),\n/* copy_table */ 253: opcode_builder( Opcode, function() { return 'e.copy_table(' + this.args() + ')'; } ),\n/* print_table */ 254: opcode_builder( Opcode, function() { return 'e.print_table(' + this.args() + ')'; } ),\n/* check_arg_count */ 255: opcode_builder( Brancher, function( arg ) { return 'e.stack.getUint8(e.frameptr+5)&(1<<(' + arg + '-1))'; } ),\n/* save */ 1000: V45Save,\n/* restore */ 1001: V45Restore,\n/* log_shift */ 1002: opcode_builder( Storer, function( a, b ) { return 'e.S2U(e.log_shift(' + a + ',' + b.U2S() + '))'; } ),\n/* art_shift */ 1003: opcode_builder( Storer, function( a, b ) { return 'e.S2U(e.art_shift(' + a.U2S() + ',' + b.U2S() + '))'; } ),\n/* set_font */ 1004: opcode_builder( Storer, function( font ) { return 'e.set_font(' + font + ')'; } ),\n/* save_undo */ 1009: opcode_builder( Storer, function() { return 'e.save_undo(' + this.next + ',' + this.storer.v + ')'; } ),\n// As the standard says calling this without a save point is illegal, we don't need to actually store anything (but it must still be disassembled)\n/* restore_undo */ 1010: opcode_builder( Opcode, function() { return 'if(e.restore_undo())return'; }, { storer: 1 } ),\n/* print_unicode */ 1011: opcode_builder( Opcode, function( a ) { return 'e.print(1,' + a + ')'; } ),\n// Assume we can print and read all unicode characters rather than actually testing\n/* check_unicode */ 1012: opcode_builder( Storer, function() { return 3; } ),\n/* set_true_colour */ 1013: opcode_builder( Opcode, function() { return 'e.set_true_colour(' + this.args() + ')'; } ),\n/* sound_data */ 1014: Opcode.subClass( { brancher: 1 } ), // We don't support sounds (but disassemble the branch address)\n/* gestalt */ 1030: opcode_builder( Storer, function() { return 'e.gestalt(' + this.args() + ')'; } ),\n/* parchment */ //1031: opcode_builder( Storer, function() { return 'e.op_parchment(' + this.args() + ')'; } ),\n\n};\n\n};\n", "/*\n\nZ-Machine runtime functions\n===========================\n\nCopyright (c) 2020 The ifvms.js team\nMIT licenced\nhttps://github.com/curiousdannii/ifvms.js\n\n*/\n\n'use strict';\n\n/*\n\nTODO:\n\tSave/restore: table, name, prompt support\n\n*/\n\nconst file = require( '../common/file.js' )\nconst utils = require( '../common/utils.js' )\nconst extend = utils.extend\nconst U2S = utils.U2S16\nconst S2U = utils.S2U16\n\n// A clone function which ignores the properties we don't want to serialise\nfunction clone( obj )\n{\n\tconst recurse = obj => typeof obj === 'object' ? clone( obj ) : obj\n\tconst newobj = {}\n\n\tif ( Array.isArray( obj ) )\n\t{\n\t\treturn obj.map( recurse )\n\t}\n\n\tfor ( let prop in obj )\n\t{\n\t\tif ( prop !== 'buffer' && prop !== 'str' )\n\t\t{\n\t\t\tnewobj[prop] = recurse( obj[prop] )\n\t\t}\n\t}\n\treturn newobj\n}\n\n// Test whether we are running on a littleEndian system\nconst littleEndian = (function()\n{\n\tvar testUint8Array = new Uint8Array( 2 ),\n\ttestUint16Array = new Uint16Array( testUint8Array.buffer );\n\ttestUint16Array[0] = 1;\n\treturn testUint8Array[0] === 1;\n})()\n\nfunction fix_stack_endianness( view, start, end, auto )\n{\n\tif ( littleEndian && !auto )\n\t{\n\t\twhile ( start < end )\n\t\t{\n\t\t\tview.setUint16( start, view.getUint16( start, 1 ) );\n\t\t\tstart += 2;\n\t\t}\n\t}\n}\n\nmodule.exports = {\n\n\tart_shift: function( number, places )\n\t{\n\t\treturn places > 0 ? number << places : number >> -places;\n\t},\n\n\t// Call a routine\n\tcall: function( addr, storer, next, args )\n\t{\n\t\t// 6.4.3: Calls to 0 instead just store 0\n\t\tif ( addr === 0 )\n\t\t{\n\t\t\tif ( storer >= 0 )\n\t\t\t{\n\t\t\t\tthis.variable( storer, 0 );\n\t\t\t}\n\t\t\treturn this.pc = next;\n\t\t}\n\n\t\t// Get the number of locals and advance the pc\n\t\tthis.pc = addr * this.addr_multipler;\n\t\tvar locals_count = this.m.getUint8( this.pc++ ),\n\n\t\tstack = this.stack,\n\t\ti = 0,\n\n\t\t// Write the current stack use\n\t\tframeptr = this.frameptr;\n\t\tstack.setUint16( frameptr + 6, this.sp );\n\t\tthis.frames.push( frameptr );\n\n\t\t// Create a new frame\n\t\tframeptr = this.frameptr = this.s.byteOffset + this.sp * 2;\n\t\t// Return address\n\t\tstack.setUint32( frameptr, next << 8 );\n\t\t// Flags\n\t\tstack.setUint8( frameptr + 3, ( storer >= 0 ? 0 : 0x10 ) | locals_count );\n\t\t// Storer\n\t\tstack.setUint8( frameptr + 4, storer >= 0 ? storer : 0 );\n\t\t// Supplied arguments\n\t\tstack.setUint8( frameptr + 5, ( 1 << args.length ) - 1 );\n\n\t\t// Create the locals and stack\n\t\tthis.make_stacks();\n\t\tthis.sp = 0;\n\t\twhile ( i < locals_count )\n\t\t{\n\t\t\tthis.l[i] = i < args.length ? args[i] : ( this.version < 5 ? this.m.getUint16( this.pc + i * 2 ) : 0 );\n\t\t\ti++;\n\t\t}\n\t\tif ( this.version < 5 )\n\t\t{\n\t\t\tthis.pc += locals_count * 2;\n\t\t}\n\t},\n\n\tclear_attr: function( object, attribute )\n\t{\n\t\tvar addr = this.objects + ( this.version3 ? 9 : 14 ) * object + ( attribute / 8 ) | 0;\n\t\tthis.ram.setUint8( addr, this.m.getUint8( addr ) & ~( 0x80 >> attribute % 8 ) );\n\t},\n\n\tcopy_table: function( first, second, size )\n\t{\n\t\tsize = U2S( size );\n\t\tvar ram = this.ram,\n\t\ti = 0,\n\t\tallowcorrupt = size < 0;\n\t\tsize = Math.abs( size );\n\n\t\t// Simple case, zeroes\n\t\tif ( second === 0 )\n\t\t{\n\t\t\twhile ( i < size )\n\t\t\t{\n\t\t\t\tram.setUint8( first + i++, 0 );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif ( allowcorrupt )\n\t\t{\n\t\t\twhile ( i < size )\n\t\t\t{\n\t\t\t\tram.setUint8( second + i, this.m.getUint8( first + i++ ) );\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tram.setUint8Array( second, this.m.getUint8Array( first, size ) );\n\t\t}\n\t},\n\n\tdo_autorestore: function( snapshot )\n\t{\n\t\tconst Glk = this.Glk\n\n\t\t// Restore Glk\n\t\tGlk.restore_allstate( snapshot.glk )\n\n\t\t// Get references to our Glk objects\n\t\tthis.io = snapshot.io\n\t\tconst RockBox = new Glk.RefBox()\n\t\tlet obj\n\t\twhile ( obj = Glk.glk_window_iterate( obj, RockBox ) )\n\t\t{\n\t\t\tif ( RockBox.value === 201 )\n\t\t\t{\n\t\t\t\tthis.mainwin = obj\n\t\t\t\tif ( obj.linebuf )\n\t\t\t\t{\n\t\t\t\t\tsnapshot.read_data.buffer = obj.linebuf\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( RockBox.value === 202 )\n\t\t\t{\n\t\t\t\tthis.statuswin = obj\n\t\t\t}\n\t\t\tif ( RockBox.value === 203 )\n\t\t\t{\n\t\t\t\tthis.upperwin = obj\n\t\t\t}\n\t\t}\n\t\tobj = null\n\t\twhile ( obj = Glk.glk_stream_iterate( obj, RockBox ) )\n\t\t{\n\t\t\tif ( RockBox.value === 210 )\n\t\t\t{\n\t\t\t\tthis.io.streams[2].str = obj\n\t\t\t}\n\t\t\tif ( RockBox.value === 211 )\n\t\t\t{\n\t\t\t\tthis.io.streams[4].str = obj\n\t\t\t}\n\t\t}\n\n\t\t// Restart and restore the RAM and stacks\n\t\tthis.restart(1)\n\t\tthis.restore_file(this.options.Dialog.streaming ? new Uint8Array(snapshot.ram) : Uint8Array.from(snapshot.ram), 1)\n\n\t\t// Set remaining data from the snapshot\n\t\tthis.read_data = snapshot.read_data\n\t\tthis.xorshift_seed = snapshot.xorshift_seed\n\t},\n\n\tdo_autosave: function( save )\n\t{\n\t\tif ( !this.options.Dialog )\n\t\t{\n\t\t\tthrow new Error( 'A reference to Dialog is required' )\n\t\t}\n\n\t\tlet snapshot = null\n\t\tif ( ( save || 0 ) >= 0 )\n\t\t{\n\t\t\tconst ram = this.save_file(this.pc, 1)\n\t\t\tsnapshot = {\n\t\t\t\tglk: this.Glk.save_allstate(),\n\t\t\t\tio: clone( this.io ),\n\t\t\t\tram: this.options.Dialog.streaming ? ram : Array.from(new Uint8Array(ram)),\n\t\t\t\tread_data: clone( this.read_data ),\n\t\t\t\txorshift_seed: this.xorshift_seed,\n\t\t\t}\n\t\t}\n\n\t\tthis.options.Dialog.autosave_write( this.signature, snapshot )\n\t},\n\n\tencode_text: function( zscii, length, from, target )\n\t{\n\t\tthis.ram.setUint8Array( target, this.encode( this.m.getUint8Array( zscii + from, length ) ) );\n\t},\n\n\t// Access the extension table\n\textension_table: function( word, value )\n\t{\n\t\tvar addr = this.extension;\n\t\tif ( !addr || word > this.extension_count )\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t\taddr += 2 * word;\n\t\tif ( value === undefined )\n\t\t{\n\t\t\treturn this.m.getUint16( addr );\n\t\t}\n\t\tthis.ram.setUint16( addr, value );\n\t},\n\n\t// Find the address of a property, or given the previous property, the number of the next\n\tfind_prop: function( object, property, prev )\n\t{\n\t\tvar memory = this.m,\n\t\tversion3 = this.version3,\n\n\t\tthis_property_byte, this_property,\n\t\tlast_property = 0,\n\n\t\t// Get this property table\n\t\tproperties = memory.getUint16( this.objects + ( version3 ? 9 : 14 ) * object + ( version3 ? 7 : 12 ) );\n\n\t\t// Skip over the object's short name\n\t\tproperties += memory.getUint8( properties ) * 2 + 1;\n\n\t\t// Run through the properties\n\t\twhile ( 1 )\n\t\t{\n\t\t\tthis_property_byte = memory.getUint8( properties );\n\t\t\tthis_property = this_property_byte & ( version3 ? 0x1F : 0x3F );\n\n\t\t\t// Found the previous property, so return this one's number\n\t\t\tif ( last_property === prev )\n\t\t\t{\n\t\t\t\treturn this_property;\n\t\t\t}\n\t\t\t// Found the property! Return its address\n\t\t\tif ( this_property === property )\n\t\t\t{\n\t\t\t\t// Must include the offset\n\t\t\t\treturn properties + ( !version3 && this_property_byte & 0x80 ? 2 : 1 );\n\t\t\t}\n\t\t\t// Gone past the property\n\t\t\tif ( this_property < property )\n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\t// Go to next property\n\t\t\tlast_property = this_property;\n\n\t\t\t// Calculate the size of this property and skip to the next\n\t\t\tif ( version3 )\n\t\t\t{\n\t\t\t\tproperties += ( this_property_byte >> 5 ) + 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif ( this_property_byte & 0x80 )\n\t\t\t\t{\n\t\t\t\t\tthis_property = memory.getUint8( properties + 1 ) & 0x3F;\n\t\t\t\t\tproperties += this_property ? this_property + 2 : 66;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tproperties += this_property_byte & 0x40 ? 3 : 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// 1.2 spec @gestalt\n\tgestalt: function( id /*, arg*/ )\n\t{\n\t\tswitch ( id )\n\t\t{\n\t\t\tcase 1:\n\t\t\t\treturn 0x0102;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// Get the first child of an object\n\tget_child: function( obj )\n\t{\n\t\tif ( this.version3 )\n\t\t{\n\t\t\treturn this.m.getUint8( this.objects + 9 * obj + 6 );\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.m.getUint16( this.objects + 14 * obj + 10 );\n\t\t}\n\t},\n\n\tget_sibling: function( obj )\n\t{\n\t\tif ( this.version3 )\n\t\t{\n\t\t\treturn this.m.getUint8( this.objects + 9 * obj + 5 );\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.m.getUint16( this.objects + 14 * obj + 8 );\n\t\t}\n\t},\n\n\tget_parent: function( obj )\n\t{\n\t\tif ( this.version3 )\n\t\t{\n\t\t\treturn this.m.getUint8( this.objects + 9 * obj + 4 );\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.m.getUint16( this.objects + 14 * obj + 6 );\n\t\t}\n\t},\n\n\tget_prop: function( object, property )\n\t{\n\t\tvar memory = this.m,\n\n\t\t// Try to find the property\n\t\taddr = this.find_prop( object, property ),\n\t\tlen;\n\n\t\t// If we have the property\n\t\tif ( addr )\n\t\t{\n\t\t\tlen = memory.getUint8( addr - 1 );\n\t\t\t// Assume we're being called for a valid short property\n\t\t\treturn memory[ ( this.version3 ? len >> 5 : len & 0x40 ) ? 'getUint16' : 'getUint8' ]( addr );\n\t\t}\n\n\t\t// Use the default properties table\n\t\t// Remember that properties are 1-indexed\n\t\treturn memory.getUint16( this.properties + 2 * ( property - 1 ) );\n\t},\n\n\t// Get the length of a property\n\t// This opcode expects the address of the property data, not a property block\n\tget_prop_len: function( addr )\n\t{\n\t\t// Spec 1.1\n\t\tif ( addr === 0 )\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar value = this.m.getUint8( addr - 1 );\n\n\t\t// Version 3\n\t\tif ( this.version3 )\n\t\t{\n\t\t\treturn ( value >> 5 ) + 1;\n\t\t}\n\n\t\t// Two size/number bytes\n\t\tif ( value & 0x80 )\n\t\t{\n\t\t\tvalue &= 0x3F;\n\t\t\treturn value === 0 ? 64 : value;\n\t\t}\n\t\t// One byte size/number\n\t\treturn value & 0x40 ? 2 : 1;\n\t},\n\n\t// Quick hack for @inc/@dec/@inc_chk/@dec_chk\n\tincdec: function( varnum, change )\n\t{\n\t\tif ( varnum === 0 )\n\t\t{\n\t\t\tthis.s[this.sp - 1] += change;\n\t\t\treturn this.s[this.sp - 1];\n\t\t}\n\t\tif ( --varnum < 15 )\n\t\t{\n\t\t\tthis.l[varnum] += change;\n\t\t\treturn this.l[varnum];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar offset = this.globals + ( varnum - 15 ) * 2;\n\t\t\tthis.ram.setUint16( offset, this.m.getUint16( offset ) + change );\n\t\t\treturn this.ram.getUint16( offset );\n\t\t}\n\t},\n\n\t// Indirect variables\n\tindirect: function( variable, value )\n\t{\n\t\tif ( variable === 0 )\n\t\t{\n\t\t\tif ( arguments.length > 1 )\n\t\t\t{\n\t\t\t\treturn this.s[this.sp - 1] = value;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.s[this.sp - 1];\n\t\t\t}\n\t\t}\n\t\treturn this.variable( variable, value );\n\t},\n\n\tinsert_obj: function( obj, dest )\n\t{\n\t\t// First remove the obj from wherever it was\n\t\tthis.remove_obj( obj );\n\t\t// Now add it to the destination\n\t\tthis.set_family( obj, dest, dest, obj, obj, this.get_child( dest ) );\n\t},\n\n\t// @jeq\n\tjeq: function()\n\t{\n\t\tvar i = 1;\n\n\t\t// Account for many arguments\n\t\twhile ( i < arguments.length )\n\t\t{\n\t\t\tif ( arguments[i++] === arguments[0] )\n\t\t\t{\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t},\n\n\tjin: function( child, parent )\n\t{\n\t\treturn this.get_parent( child ) === parent;\n\t},\n\n\tlog: function( message )\n\t{\n\t\tif ( this.options.GlkOte )\n\t\t{\n\t\t\tthis.options.GlkOte.log( message );\n\t\t}\n\t},\n\n\tlog_shift: function( number, places )\n\t{\n\t\treturn places > 0 ? number << places : number >>> -places;\n\t},\n\n\tmake_stacks: function()\n\t{\n\t\tvar locals_count = this.stack.getUint8( this.frameptr + 3 ) & 0x0F;\n\t\tthis.l = new Uint16Array( this.stack.buffer, this.frameptr + 8, locals_count );\n\t\tthis.s = new Uint16Array( this.stack.buffer, this.frameptr + 8 + locals_count * 2 );\n\t},\n\n\tput_prop: function( object, property, value )\n\t{\n\t\t// Try to find the property\n\t\tvar addr = this.find_prop( object, property ),\n\t\tlen;\n\n\t\tif ( addr )\n\t\t{\n\t\t\tlen = this.m.getUint8( addr - 1 );\n\n\t\t\t// Assume we're being called for a valid short property\n\t\t\tthis.ram[ ( this.version3 ? len >> 5 : len & 0x40 ) ? 'setUint16' : 'setUint8' ]( addr, value );\n\t\t}\n\t},\n\n\trandom: function( range )\n\t{\n\t\tvar seed = this.xorshift_seed;\n\n\t\t// Switch to the Xorshift RNG (or switch off if range == 0)\n\t\tif ( range < 1 )\n\t\t{\n\t\t\tthis.xorshift_seed = range;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Pure randomness\n\t\tif ( seed === 0 )\n\t\t{\n\t\t\treturn 1 + ( Math.random() * range ) | 0;\n\t\t}\n\n\t\t// Based on the discussions in this forum topic, we will not implement the sequential mode recommended in the standard\n\t\t// http://www.intfiction.org/forum/viewtopic.php?f=38&t=16023\n\n\t\t// Instead implement a 32 bit Xorshift generator\n\t\tseed ^= ( seed << 13 );\n\t\tseed ^= ( seed >> 17 );\n\t\tthis.xorshift_seed = ( seed ^= ( seed << 5 ) );\n\t\treturn 1 + ( ( seed & 0x7FFF ) % range );\n\t},\n\n\tremove_obj: function( obj )\n\t{\n\t\tvar parent = this.get_parent( obj ),\n\t\tolder_sibling,\n\t\tyounger_sibling,\n\t\ttemp_younger;\n\n\t\t// No parent, do nothing\n\t\tif ( parent === 0 )\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tolder_sibling = this.get_child( parent );\n\t\tyounger_sibling = this.get_sibling( obj );\n\n\t\t// obj is first child\n\t\tif ( older_sibling === obj )\n\t\t{\n\t\t\tthis.set_family( obj, 0, parent, younger_sibling );\n\t\t}\n\t\t// obj isn't first child, so fix the older sibling\n\t\telse\n\t\t{\n\t\t\t// Go through the tree until we find the older sibling\n\t\t\twhile ( 1 )\n\t\t\t{\n\t\t\t\ttemp_younger = this.get_sibling( older_sibling );\n\t\t\t\tif ( temp_younger === obj )\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tolder_sibling = temp_younger;\n\t\t\t}\n\t\t\tthis.set_family( obj, 0, 0, 0, older_sibling, younger_sibling );\n\t\t}\n\t},\n\n\t// (Re)start the VM\n\trestart: function(autorestoring)\n\t{\n\t\tvar ram = this.ram,\n\t\tversion = ram.getUint8( 0x00 ),\n\t\tversion3 = version === 3,\n\t\taddr_multipler = version3 ? 2 : ( version === 8 ? 8 : 4 ),\n\t\tflags2 = ram.getUint8( 0x11 ),\n\t\tproperty_defaults = ram.getUint16( 0x0A ),\n\t\textension = ( version > 4 ) ? ram.getUint16( 0x36 ) : 0,\n\t\tstack = utils.MemoryView( this.options.stack_len );\n\n\t\t// Reset the RAM, but preserve flags 2\n\t\tram.setUint8Array( 0, this.origram );\n\t\tram.setUint8( 0x11, flags2 );\n\n\t\textend( this, {\n\n\t\t\t// Locals and stacks of various kinds\n\t\t\tstack: stack,\n\t\t\tframeptr: 0,\n\t\t\tframes: [],\n\t\t\ts: new Uint16Array( stack.buffer, 8 ),\n\t\t\tsp: 0,\n\t\t\tl: [],\n\t\t\tundo: [],\n\t\t\tundo_len: 0,\n\t\t\t\n\t\t\tglk_blocking_call: null,\n\n\t\t\t// Get some header variables\n\t\t\tversion: version,\n\t\t\tversion3: version3,\n\t\t\tpc: ram.getUint16( 0x06 ),\n\t\t\tproperties: property_defaults,\n\t\t\tobjects: property_defaults + ( version3 ? 53 : 112 ), // 62-9 or 126-14 - if we take this now then we won't need to always decrement the object number\n\t\t\tglobals: ram.getUint16( 0x0C ),\n\t\t\t// staticmem: set in prepare()\n\t\t\teof: ( ram.getUint16( 0x1A ) || 65536 ) * addr_multipler,\n\t\t\textension: extension,\n\t\t\textension_count: extension ? ram.getUint16( extension ) : 0,\n\n\t\t\t// Routine and string multiplier\n\t\t\taddr_multipler: addr_multipler,\n\n\t\t\t// Opcodes for this version of the Z-Machine\n\t\t\topcodes: require( './opcodes.js' )( version ),\n\n\t\t});\n\n\t\tthis.init_text();\n\t\tif (!autorestoring)\n\t\t{\n\t\t\tthis.init_io()\n\t\t}\n\n\t\t// Update the header\n\t\tthis.update_header();\n\t},\n\n\t// Request a restore\n\trestore: function( pc )\n\t{\n\t\tthis.pc = pc;\n\t\tthis.fileref_create_by_prompt({\n\t\t\tfunc: 'restore',\n\t\t\tmode: 0x02,\n\t\t\tusage: 0x01,\n\t\t});\n\t},\n\n\trestore_file: function( data, autorestoring )\n\t{\n\t\tvar ram = this.ram,\n\t\tquetzal = new file.Quetzal( data ),\n\t\tqmem = quetzal.memory,\n\t\tstack = this.stack,\n\t\tflags2 = ram.getUint8( 0x11 ),\n\t\ttemp,\n\t\ti = 0, j = 0;\n\t\t\n\t\t// Check this is a savefile for this story\n\t\tif ( ram.getUint16( 0x02 ) !== quetzal.release || ram.getUint16( 0x1C ) !== quetzal.checksum )\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t\twhile ( i < 6 )\n\t\t{\n\t\t\tif ( ram.getUint8( 0x12 + i ) !== quetzal.serial[i++] )\n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\ti = 0;\n\n\t\t// Memory chunk\n\t\t// Reset the RAM\n\t\tram.setUint8Array( 0, this.origram );\n\t\tif ( quetzal.compressed )\n\t\t{\n\t\t\twhile ( i < qmem.length )\n\t\t\t{\n\t\t\t\ttemp = qmem[i++];\n\t\t\t\t// Same memory\n\t\t\t\tif ( temp === 0 )\n\t\t\t\t{\n\t\t\t\t\tj += 1 + qmem[i++];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tram.setUint8( j, temp ^ this.origram[j++] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tram.setUint8Array( 0, qmem );\n\t\t}\n\t\t// Preserve flags 2\n\t\tram.setUint8( 0x11, flags2 );\n\n\t\t// Stacks\n\t\tstack.setUint8Array( 0, quetzal.stacks );\n\t\tthis.frames = [];\n\t\ti = 0;\n\t\twhile ( i < quetzal.stacks.byteLength )\n\t\t{\n\t\t\tthis.frameptr = i;\n\t\t\tthis.frames.push( i );\n\t\t\t// Swap the bytes of the locals and stacks\n\t\t\tfix_stack_endianness( stack, j = i + 8, j += ( stack.getUint8( i + 3 ) & 0x0F ) * 2, autorestoring )\n\t\t\tfix_stack_endianness( stack, j, j += stack.getUint16( i + 6 ) * 2, autorestoring )\n\t\t\ti = j;\n\t\t}\n\t\tthis.frames.pop();\n\t\tthis.sp = stack.getUint16( this.frameptr + 6 );\n\t\tthis.make_stacks();\n\n\t\tthis.pc = quetzal.pc;\n\t\tthis.update_header();\n\n\t\t// Collapse the upper window (8.6.1.3)\n\t\tif ( this.version3 )\n\t\t{\n\t\t\tthis.split_window( 0 );\n\t\t}\n\n\t\treturn 2;\n\t},\n\n\trestore_undo: function()\n\t{\n\t\tif ( this.undo.length === 0 )\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar state = this.undo.pop();\n\t\tthis.frameptr = state.frameptr;\n\t\tthis.pc = state.pc;\n\t\tthis.undo_len -= ( state.ram.byteLength + state.stack.byteLength );\n\n\t\t// Replace the ram, preserving flags 2\n\t\tstate.ram[0x11] = this.m.getUint8( 0x11 );\n\t\tthis.ram.setUint8Array( 0, state.ram );\n\n\t\t// Fix up the stack\n\t\tthis.frames = state.frames;\n\t\tthis.sp = state.sp;\n\t\tthis.stack.setUint8Array( 0, state.stack );\n\t\tthis.make_stacks();\n\n\t\tthis.variable( state.var, 2 );\n\t\treturn 1;\n\t},\n\n\t// Return from a routine\n\tret: function( result )\n\t{\n\t\tvar stack = this.stack,\n\n\t\t// Get the storer and return pc from this frame\n\t\tframeptr = this.frameptr,\n\t\tstorer = stack.getUint8( frameptr + 3 ) & 0x10 ? -1 : stack.getUint8( frameptr + 4 );\n\t\tthis.pc = stack.getUint32( frameptr ) >> 8;\n\n\t\t// Recreate the locals and stacks from the previous frame\n\t\tframeptr = this.frameptr = this.frames.pop();\n\t\tthis.make_stacks();\n\t\tthis.sp = stack.getUint16( frameptr + 6 );\n\n\t\t// Store the result if there is one\n\t\tif ( storer >= 0 )\n\t\t{\n\t\t\tthis.variable( storer, result || 0 );\n\t\t}\n\t},\n\n\t// pc is the address of the storer operand (or branch in v3)\n\tsave: function( pc )\n\t{\n\t\tthis.pc = pc;\n\t\tthis.fileref_create_by_prompt({\n\t\t\tfunc: 'save',\n\t\t\tmode: 0x01,\n\t\t\tusage: 0x01,\n\t\t});\n\t},\n\t\n\tsave_file: function( pc, autosaving )\n\t{\n\t\tvar memory = this.m,\n\t\tquetzal = new file.Quetzal(),\n\t\tstack = utils.MemoryView( this.stack.buffer.slice() ),\n\t\tzeroes = 0,\n\t\ti, j,\n\t\tframeptr = this.frameptr,\n\t\tabyte;\n\n\t\t// IFhd chunk\n\t\tquetzal.release = memory.getUint16( 0x02 );\n\t\tquetzal.serial = memory.getUint8Array( 0x12, 6 );\n\t\tquetzal.checksum = memory.getUint16( 0x1C );\n\t\tquetzal.pc = pc;\n\n\t\t// Memory chunk\n\t\tif ( autosaving )\n\t\t{\n\t\t\tquetzal.memory = this.m.getUint8Array( 0, this.staticmem )\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst compressed_mem = []\n\t\t\tquetzal.compressed = 1;\n\t\t\tfor ( i = 0; i < this.staticmem; i++ )\n\t\t\t{\n\t\t\t\tabyte = memory.getUint8( i ) ^ this.origram[i];\n\t\t\t\tif ( abyte === 0 )\n\t\t\t\t{\n\t\t\t\t\tif ( ++zeroes === 256 )\n\t\t\t\t\t{\n\t\t\t\t\t\tcompressed_mem.push( 0, 255 );\n\t\t\t\t\t\tzeroes = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif ( zeroes )\n\t\t\t\t\t{\n\t\t\t\t\t\tcompressed_mem.push( 0, zeroes - 1 );\n\t\t\t\t\t\tzeroes = 0;\n\t\t\t\t\t}\n\t\t\t\t\tcompressed_mem.push( abyte );\n\t\t\t\t}\n\t\t\t}\n\t\t\tquetzal.memory = compressed_mem;\n\t\t}\n\n\t\t// Stacks\n\t\t// Set the current sp\n\t\tstack.setUint16( frameptr + 6, this.sp );\n\n\t\t// Swap the bytes of the locals and stacks\n\t\tif ( littleEndian && !autosaving )\n\t\t{\n\t\t\tconst frames = this.frames.slice()\n\t\t\tframes.push( frameptr )\n\t\t\tfor ( i = 0; i < frames.length; i++ )\n\t\t\t{\n\t\t\t\tframeptr = frames[i];\n\t\t\t\tfix_stack_endianness( stack, j = frameptr + 8, j += ( stack.getUint8( frameptr + 3 ) & 0x0F ) * 2 );\n\t\t\t\tfix_stack_endianness( stack, j, j += stack.getUint16( frameptr + 6 ) * 2 );\n\t\t\t}\n\t\t}\n\t\tquetzal.stacks = stack.getUint8Array( 0, this.frameptr + 8 + ( stack.getUint8( frameptr + 3 ) & 0x0F ) * 2 + this.sp * 2 );\n\n\t\treturn quetzal.write();\n\t},\n\t\n\tsave_restore_handler: function( str )\n\t{\n\t\tvar memory = this.m,\n\t\tGlk = this.Glk,\n\t\tresult = 0,\n\t\tbuffer = [],\n\t\ttemp, iftrue, offset;\n\t\t\n\t\tif ( str )\n\t\t{\n\t\t\t// Save\n\t\t\tif ( this.fileref_data.func === 'save' )\n\t\t\t{\n\t\t\t\tGlk.glk_put_buffer_stream( str, new Uint8Array( this.save_file( this.pc ) ) );\n\t\t\t\tresult = 1;\n\t\t\t}\n\t\t\t// Restore\n\t\t\telse\n\t\t\t{\n\t\t\t\tbuffer = new Uint8Array( 128 * 1024 );\n\t\t\t\tGlk.glk_get_buffer_stream( str, buffer );\n\t\t\t\tresult = this.restore_file( buffer.buffer );\n\t\t\t}\n\t\t\tGlk.glk_stream_close( str );\n\t\t}\n\t\t\n\t\t// Store the result / branch in z3\n\t\tif ( this.version3 )\n\t\t{\n\t\t\t// Calculate the branch\n\t\t\ttemp = memory.getUint8( this.pc++ );\n\t\t\tiftrue = temp & 0x80;\n\t\t\toffset = temp & 0x40 ?\n\t\t\t\t// single byte address\n\t\t\t\ttemp & 0x3F :\n\t\t\t\t// word address, but first get the second byte of it\n\t\t\t\t( temp << 8 | memory.getUint8( this.pc++ ) ) << 18 >> 18;\n\n\t\t\tif ( !result === !iftrue )\n\t\t\t{\n\t\t\t\tif ( offset === 0 || offset === 1 )\n\t\t\t\t{\n\t\t\t\t\tthis.ret( offset );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.pc += offset - 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.variable( memory.getUint8( this.pc++ ), result );\n\t\t}\n\t},\n\n\tsave_undo: function( pc, variable )\n\t{\n\t\t// Drop an old undo state if we've reached the limit, but always save at least one state\n\t\tvar state\n\t\tif ( this.undo_len > this.options.undo_len )\n\t\t{\n\t\t\tstate = this.undo.shift()\n\t\t\tthis.undo_len -= ( state.ram.byteLength + state.stack.byteLength )\n\t\t}\n\t\tstate = {\n\t\t\tframeptr: this.frameptr,\n\t\t\tframes: this.frames.slice(),\n\t\t\tpc: pc,\n\t\t\tram: this.m.getUint8Array( 0, this.staticmem ),\n\t\t\tsp: this.sp,\n\t\t\tstack: this.stack.getUint8Array( 0, this.s.byteOffset + this.sp * 2 ),\n\t\t\tvar: variable,\n\t\t}\n\t\tthis.undo_len += ( state.ram.byteLength + state.stack.byteLength )\n\t\tthis.undo.push( state )\n\t\treturn 1\n\t},\n\n\tscan_table: function( key, addr, length, form )\n\t{\n\t\tform = form || 0x82;\n\t\tvar memoryfunc = form & 0x80 ? 'getUint16' : 'getUint8';\n\t\tform &= 0x7F;\n\t\tlength = addr + length * form;\n\n\t\twhile ( addr < length )\n\t\t{\n\t\t\tif ( this.m[memoryfunc]( addr ) === key )\n\t\t\t{\n\t\t\t\treturn addr;\n\t\t\t}\n\t\t\taddr += form;\n\t\t}\n\t\treturn 0;\n\t},\n\n\tset_attr: function( object, attribute )\n\t{\n\t\tvar addr = this.objects + ( this.version3 ? 9 : 14 ) * object + ( attribute / 8 ) | 0;\n\t\tthis.ram.setUint8( addr, this.m.getUint8( addr ) | 0x80 >> attribute % 8 );\n\t},\n\n\tset_family: function( obj, newparent, parent, child, bigsis, lilsis )\n\t{\n\t\tvar ram = this.ram,\n\t\tobjects = this.objects;\n\n\t\tif ( this.version3 )\n\t\t{\n\t\t\t// Set the new parent of the obj\n\t\t\tram.setUint8( objects + 9 * obj + 4, newparent );\n\t\t\t// Update the parent's first child if needed\n\t\t\tif ( parent )\n\t\t\t{\n\t\t\t\tram.setUint8( objects + 9 * parent + 6, child );\n\t\t\t}\n\t\t\t// Update the little sister of a big sister\n\t\t\tif ( bigsis )\n\t\t\t{\n\t\t\t\tram.setUint8( objects + 9 * bigsis + 5, lilsis );\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Set the new parent of the obj\n\t\t\tram.setUint16( objects + 14 * obj + 6, newparent );\n\t\t\t// Update the parent's first child if needed\n\t\t\tif ( parent )\n\t\t\t{\n\t\t\t\tram.setUint16( objects + 14 * parent + 10, child );\n\t\t\t}\n\t\t\t// Update the little sister of a big sister\n\t\t\tif ( bigsis )\n\t\t\t{\n\t\t\t\tram.setUint16( objects + 14 * bigsis + 8, lilsis );\n\t\t\t}\n\t\t}\n\t},\n\n\ttest: function( bitmap, flag )\n\t{\n\t\treturn ( bitmap & flag ) === flag;\n\t},\n\n\ttest_attr: function( object, attribute )\n\t{\n\t\treturn ( this.m.getUint8( this.objects + ( this.version3 ? 9 : 14 ) * object + ( attribute / 8 ) | 0 ) << attribute % 8 ) & 0x80;\n\t},\n\n\t// Read or write a variable\n\tvariable: function( variable, value )\n\t{\n\t\tvar havevalue = value !== undefined,\n\t\toffset;\n\t\tif ( variable === 0 )\n\t\t{\n\t\t\tif ( havevalue )\n\t\t\t{\n\t\t\t\tthis.s[this.sp++] = value;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.s[--this.sp];\n\t\t\t}\n\t\t}\n\t\telse if ( --variable < 15 )\n\t\t{\n\t\t\tif ( havevalue )\n\t\t\t{\n\t\t\t\tthis.l[variable] = value;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.l[variable];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\toffset = this.globals + ( variable - 15 ) * 2;\n\t\t\tif ( havevalue )\n\t\t\t{\n\t\t\t\tthis.ram.setUint16( offset, value );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.m.getUint16( offset );\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t},\n\n\t// Utilities for signed arithmetic\n\tU2S: U2S,\n\tS2U: S2U,\n\n};\n", "/*\n\nZ-Machine text functions\n========================\n\nCopyright (c) 2017 The ifvms.js team\nMIT licenced\nhttps://github.com/curiousdannii/ifvms.js\n\n*/\n\n/*\n\nTODO:\n\tConsider quote suggestions from 1.1 spec\n\n*/\n\nmodule.exports = {\n\n\tinit_text: function()\n\t{\n\t\tvar self = this,\n\t\tmemory = this.m,\n\n\t\talphabet_addr = ( this.version > 4 ) && memory.getUint16( 0x34 ),\n\t\tunicode_addr = this.extension_table( 3 ),\n\t\tunicode_len = unicode_addr && memory.getUint8( unicode_addr++ );\n\n\t\tthis.abbr_addr = memory.getUint16( 0x18 );\n\n\t\t// Generate alphabets\n\t\tfunction make_alphabet( data )\n\t\t{\n\t\t\tvar alphabets = [[], [], []],\n\t\t\ti = 0;\n\t\t\twhile ( i < 78 )\n\t\t\t{\n\t\t\t\talphabets[( i / 26 ) | 0][i % 26] = data[ i++ ];\n\t\t\t}\n\t\t\t// A2->7 is always a newline\n\t\t\talphabets[2][1] = 13;\n\t\t\tself.alphabets = alphabets;\n\t\t}\n\n\t\t// Make the unicode tables\n\t\tfunction make_unicode( data )\n\t\t{\n\t\t\tvar table = { 13: '\\r' }, // New line conversion\n\t\t\treverse = { 13: 13 },\n\t\t\ti = 0;\n\t\t\twhile ( i < data.length )\n\t\t\t{\n\t\t\t\ttable[155 + i] = String.fromCharCode( data[i] );\n\t\t\t\treverse[data[i]] = 155 + i++;\n\t\t\t}\n\t\t\ti = 32;\n\t\t\twhile ( i < 127 )\n\t\t\t{\n\t\t\t\ttable[i] = String.fromCharCode( i );\n\t\t\t\treverse[i] = i++;\n\t\t\t}\n\t\t\tself.unicode_table = table;\n\t\t\tself.reverse_unicode_table = reverse;\n\t\t}\n\n\t\t// Check for custom alphabets\n\t\tmake_alphabet( alphabet_addr ? memory.getUint8Array( alphabet_addr, 78 )\n\t\t\t// Or use the standard alphabet\n\t\t\t: this.text_to_zscii( 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ \\r0123456789.,!?_#\\'\"/\\\\-:()', 1 ) );\n\n\t\t// Check for a custom unicode table\n\t\tmake_unicode( unicode_addr ? memory.getUint16Array( unicode_addr, unicode_len )\n\t\t\t// Or use the default\n\t\t\t: this.text_to_zscii( unescape( '%E4%F6%FC%C4%D6%DC%DF%BB%AB%EB%EF%FF%CB%CF%E1%E9%ED%F3%FA%FD%C1%C9%CD%D3%DA%DD%E0%E8%EC%F2%F9%C0%C8%CC%D2%D9%E2%EA%EE%F4%FB%C2%CA%CE%D4%DB%E5%C5%F8%D8%E3%F1%F5%C3%D1%D5%E6%C6%E7%C7%FE%F0%DE%D0%A3%u0153%u0152%A1%BF' ), 1 ) );\n\n\t\t// Parse the standard dictionary\n\t\tthis.dictionaries = {};\n\t\tthis.dict = memory.getUint16( 0x08 );\n\t\tthis.parse_dict( this.dict );\n\n\t\t// Optimise our own functions\n\t\t/*if ( DEBUG )\n\t\t{\n\t\t\tif ( !debugflags.nooptimise )\n\t\t\toptimise_obj( this, 'TEXT' );\n\t\t}*/\n\t},\n\n\t// Decode Z-chars into ZSCII and then Unicode\n\tdecode: function( addr, length )\n\t{\n\t\tvar memory = this.m,\n\n\t\tstart_addr = addr,\n\t\ttemp,\n\t\tbuffer = [],\n\t\ti = 0,\n\t\tzchar,\n\t\talphabet = 0,\n\t\tresult = [],\n\t\tresulttexts = [],\n\t\tusesabbr,\n\t\tunicodecount = 0;\n\n\t\t// Check if this one's been cached already\n\t\tif ( this.jit[addr] )\n\t\t{\n\t\t\treturn this.jit[addr];\n\t\t}\n\n\t\t// If we've been given a length, then use it as the finaladdr,\n\t\t// Otherwise don't go past the end of the file\n\t\tlength = length ? length + addr : this.eof;\n\n\t\t// Go through until we've reached the end of the text or a stop bit\n\t\twhile ( addr < length )\n\t\t{\n\t\t\ttemp = memory.getUint16( addr );\n\t\t\taddr += 2;\n\n\t\t\tbuffer.push( temp >> 10 & 0x1F, temp >> 5 & 0x1F, temp & 0x1F );\n\n\t\t\t// Stop bit\n\t\t\tif ( temp & 0x8000 )\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Process the Z-chars\n\t\twhile ( i < buffer.length )\n\t\t{\n\t\t\tzchar = buffer[i++];\n\n\t\t\t// Special chars\n\t\t\t// Space\n\t\t\tif ( zchar === 0 )\n\t\t\t{\n\t\t\t\tresult.push( 32 );\n\t\t\t}\n\t\t\t// Abbreviations\n\t\t\telse if ( zchar < 4 )\n\t\t\t{\n\t\t\t\tusesabbr = 1;\n\t\t\t\tresult.push( -1 );\n\t\t\t\tresulttexts.push( '\\uE000+this.abbr(' + ( 32 * ( zchar - 1 ) + buffer[i++] ) + ')+\\uE000' );\n\t\t\t}\n\t\t\t// Shift characters\n\t\t\telse if ( zchar < 6 )\n\t\t\t{\n\t\t\t\talphabet = zchar;\n\t\t\t}\n\t\t\t// Check for a 10 bit ZSCII character\n\t\t\telse if ( alphabet === 2 && zchar === 6 )\n\t\t\t{\n\t\t\t\t// Check we have enough Z-chars left.\n\t\t\t\tif ( i + 1 < buffer.length )\n\t\t\t\t{\n\t\t\t\t\tresult.push( buffer[i++] << 5 | buffer[i++] )\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Regular characters\n\t\t\telse if ( zchar < 0x20 )\n\t\t\t{\n\t\t\t\tresult.push( this.alphabets[alphabet][ zchar - 6 ] );\n\t\t\t}\n\n\t\t\t// Reset the alphabet\n\t\t\talphabet = alphabet < 4 ? 0 : alphabet - 3;\n\n\t\t\t// Add to the index if we've had raw unicode\n\t\t\tif ( ( i % 3 ) === 0 )\n\t\t\t{\n\t\t\t\ti += unicodecount;\n\t\t\t\tunicodecount = 0;\n\t\t\t}\n\t\t}\n\n\t\tresult = this.zscii_to_text( result, resulttexts );\n\t\t// Abbreviations must be extracted at run time, so return a function instead\n\t\tif ( usesabbr )\n\t\t{\n\t\t\tresult = {\n\t\t\t\ttoString: ( Function( 'return\"' + result.replace( /\\\\/g, '\\\\\\\\' ).replace( /\"/g, '\\\\\"' ).replace( /\\r/g, '\\\\r' ).replace( /\\uE000/g, '\"' ) + '\"' ) ).bind( this ),\n\t\t\t};\n\t\t}\n\t\t// Cache and return\n\t\tif ( start_addr >= this.staticmem )\n\t\t{\n\t\t\tthis.jit[start_addr] = result;\n\t\t}\n\t\treturn result;\n\t},\n\n\t// Encode ZSCII into Z-chars\n\tencode: function( zscii )\n\t{\n\t\tvar alphabets = this.alphabets,\n\t\tzchars = [],\n\t\tword_len = this.version3 ? 6 : 9,\n\t\ti = 0,\n\t\tachar,\n\t\ttemp,\n\t\tresult = [];\n\n\t\t// Encode the Z-chars\n\t\twhile ( zchars.length < word_len )\n\t\t{\n\t\t\tachar = zscii[i++];\n\t\t\t// Space\n\t\t\tif ( achar === 32 )\n\t\t\t{\n\t\t\t\tzchars.push( 0 );\n\t\t\t}\n\t\t\t// Alphabets\n\t\t\telse if ( ( temp = alphabets[0].indexOf( achar ) ) >= 0 )\n\t\t\t{\n\t\t\t\tzchars.push( temp + 6 );\n\t\t\t}\n\t\t\telse if ( ( temp = alphabets[1].indexOf( achar ) ) >= 0 )\n\t\t\t{\n\t\t\t\tzchars.push( 4, temp + 6 );\n\t\t\t}\n\t\t\telse if ( ( temp = alphabets[2].indexOf( achar ) ) >= 0 )\n\t\t\t{\n\t\t\t\tzchars.push( 5, temp + 6 );\n\t\t\t}\n\t\t\t// Pad character\n\t\t\telse if ( achar === undefined )\n\t\t\t{\n\t\t\t\tzchars.push( 5 );\n\t\t\t}\n\t\t\t// 10-bit ZSCII\n\t\t\telse\n\t\t\t{\n\t\t\t\tzchars.push( 5, 6, achar >> 5, achar & 0x1F )\n\t\t\t}\n\t\t}\n\t\tzchars.length = word_len;\n\n\t\t// Encode to bytes\n\t\ti = 0;\n\t\twhile ( i < word_len )\n\t\t{\n\t\t\tresult.push( zchars[i++] << 2 | zchars[i] >> 3, ( zchars[i++] & 0x07 ) << 5 | zchars[i++] );\n\t\t}\n\t\tresult[ result.length - 2 ] |= 0x80;\n\t\treturn result;\n\t},\n\n\t// In these two functions zscii means an array of ZSCII codes and text means a regular Javascript unicode string\n\tzscii_to_text: function( zscii, texts )\n\t{\n\t\tvar i = 0, l = zscii.length,\n\t\tcharr,\n\t\tj = 0,\n\t\tresult = '';\n\n\t\twhile ( i < l )\n\t\t{\n\t\t\tcharr = zscii[i++];\n\t\t\t// Text substitution from abbreviations or 1.1 unicode\n\t\t\tif ( charr === -1 )\n\t\t\t{\n\t\t\t\tresult += texts[j++];\n\t\t\t}\n\t\t\t// Regular characters\n\t\t\tif ( ( charr = this.unicode_table[charr] ) )\n\t\t\t{\n\t\t\t\tresult += charr;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t},\n\n\t// If the second argument is set then don't use the unicode table\n\ttext_to_zscii: function( text, notable )\n\t{\n\t\tvar array = [], i = 0, l = text.length, charr;\n\t\twhile ( i < l )\n\t\t{\n\t\t\tcharr = text.charCodeAt( i++ );\n\t\t\t// Check the unicode table\n\t\t\tif ( !notable )\n\t\t\t{\n\t\t\t\tcharr = this.reverse_unicode_table[charr] || 63;\n\t\t\t}\n\t\t\tarray.push( charr );\n\t\t}\n\t\treturn array;\n\t},\n\n\t// Parse and cache a dictionary\n\tparse_dict: function( addr )\n\t{\n\t\tvar memory = this.m,\n\n\t\taddr_start = addr,\n\t\tdict = {},\n\t\tentry_len,\n\t\tendaddr,\n\n\t\t// Get the word separators\n\t\tseperators_len = memory.getUint8( addr++ );\n\n\t\t// Support: IE, Safari, Firefox<38, Chrome<45, Opera<32, Node<4\n\t\t// These browsers don't support Uint8Array.indexOf() so convert to a normal array\n\t\tdict.separators = Array.prototype.slice.call( memory.getUint8Array( addr, seperators_len ) );\n\n\t\taddr += seperators_len;\n\n\t\t// Go through the dictionary and cache its entries\n\t\tentry_len = memory.getUint8( addr++ );\n\t\tendaddr = addr + 2 + entry_len * memory.getUint16( addr );\n\t\taddr += 2;\n\t\twhile ( addr < endaddr )\n\t\t{\n\t\t\tdict[ Array.prototype.toString.call( memory.getUint8Array( addr, this.version3 ? 4 : 6 ) ) ] = addr;\n\t\t\taddr += entry_len;\n\t\t}\n\t\tthis.dictionaries[addr_start] = dict;\n\n\t\treturn dict;\n\t},\n\n\t// Print an abbreviation\n\tabbr: function( abbrnum )\n\t{\n\t\treturn this.decode( this.m.getUint16( this.abbr_addr + 2 * abbrnum ) * 2 );\n\t},\n\n\t// Tokenise a text\n\ttokenise: function( bufaddr, parseaddr, dictionary, flag )\n\t{\n\t\t// Use the default dictionary if one wasn't provided\n\t\tdictionary = dictionary || this.dict;\n\n\t\t// Parse the dictionary if needed\n\t\tdictionary = this.dictionaries[dictionary] || this.parse_dict( dictionary );\n\n\t\tvar memory = this.m,\n\t\tram = this.ram,\n\t\tbufferlength = 1e3,\n\t\ti = 1,\n\t\tletter,\n\t\tseparators = dictionary.separators,\n\t\tword,\n\t\twords = [],\n\t\tmax_words,\n\t\tdictword,\n\t\twordcount = 0;\n\n\t\t// In versions 5 and 8 we can get the actual buffer length\n\t\tif ( this.version > 4 )\n\t\t{\n\t\t\tbufferlength = memory.getUint8( bufaddr + i++ ) + 2;\n\t\t}\n\n\t\t// Find the words, separated by the separators, but as well as the separators themselves\n\t\twhile ( i < bufferlength )\n\t\t{\n\t\t\tletter = memory.getUint8( bufaddr + i );\n\t\t\tif ( letter === 0 )\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if ( letter === 32 || separators.indexOf( letter ) >= 0 )\n\t\t\t{\n\t\t\t\tif ( letter !== 32 )\n\t\t\t\t{\n\t\t\t\t\twords.push( [ [letter], i ] );\n\t\t\t\t}\n\t\t\t\tword = null;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif ( !word )\n\t\t\t\t{\n\t\t\t\t\twords.push( [ [], i ] );\n\t\t\t\t\tword = words[ words.length - 1 ][0];\n\t\t\t\t}\n\t\t\t\tword.push( letter );\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\t\t// Go through the text until we either have reached the max number of words, or we're out of words\n\t\tmax_words = Math.min( words.length, memory.getUint8( parseaddr ) );\n\t\twhile ( wordcount < max_words )\n\t\t{\n\t\t\tdictword = dictionary['' + this.encode( words[wordcount][0] )];\n\n\t\t\t// If the flag is set then don't overwrite words which weren't found\n\t\t\tif ( !flag || dictword )\n\t\t\t{\n\t\t\t\t// Fill out the buffer\n\t\t\t\tram.setUint16( parseaddr + 2 + wordcount * 4, dictword || 0 );\n\t\t\t\tram.setUint8( parseaddr + 4 + wordcount * 4, words[wordcount][0].length );\n\t\t\t\tram.setUint8( parseaddr + 5 + wordcount * 4, words[wordcount][1] );\n\t\t\t}\n\t\t\twordcount++;\n\t\t}\n\n\t\t// Update the number of found words\n\t\tram.setUint8( parseaddr + 1, wordcount );\n\t},\n\n};\n", "/*\n\nZ-Machine IO\n============\n\nCopyright (c) 2020 The ifvms.js team\nMIT licenced\nhttps://github.com/curiousdannii/ifvms.js\n\n*/\n\n'use strict';\n\n/*\n\nTODO:\n\n - pre-existing line input\n - timed input\n - mouse input\n - write colours into header\n\n*/\n\nconst utils = require('../common/utils.js')\nconst U2S = utils.U2S16\n//S2U = utils.S2U16\n\n// Glulx key codes accepted by the Z-Machine\nconst ZSCII_keyCodes = (function()\n{\n\tvar codes = {\n\t\t0xfffffff9: 8, // delete/backspace\n\t\t0xfffffffa: 13, // enter\n\t\t0xfffffff8: 27, // escape\n\t\t0xfffffffc: 129, // up\n\t\t0xfffffffb: 130, // down\n\t\t0xfffffffe: 131, // left\n\t\t0xfffffffd: 132, // right\n\t\t0xfffffff3: 146, // End / key pad 1\n\t\t0xfffffff5: 148, // PgDn / key pad 3\n\t\t0xfffffff4: 152, // Home / key pad 7\n\t\t0xfffffff6: 154, // PgUp / key pad 9\n\t},\n\ti = 0;\n\twhile ( i < 12 )\n\t{\n\t\tcodes[ 0xffffffef - i ] = 133 + i++; // function keys\n\t}\n\treturn codes;\n})()\n\n// Style mappings\n// The index bits are (lowest to highest): mono, italic, bold\nconst style_mappings = [0, 2, 1, 10, 4, 9, 5, 6]\n\n// Convert a 15 bit colour to RGB\nfunction convert_true_colour(colour)\n{\n\tconst from5to8 = [0, 8, 16, 25, 33, 41, 49, 58, 66, 74, 82, 90, 99, 107, 115, 123, 132,\n\t\t140, 148, 156, 165, 173, 181, 189, 197, 206, 214, 222, 230, 239, 247, 255]\n\n\t// Stretch the five bits per colour out to 8 bits\n\treturn (from5to8[colour & 0x1F] << 16) | (from5to8[(colour & 0x03E0) >> 5] << 8) | (from5to8[(colour & 0x7C00) >> 10])\n}\n\n// The standard 15 bit colour values\nconst zcolours = [\n\t0xFFFE, // Current\n\t0xFFFF, // Default\n\t0x0000, // Black\n\t0x001D, // Red\n\t0x0340, // Green\n\t0x03BD, // Yellow\n\t0x59A0, // Blue\n\t0x7C1F, // Magenta\n\t0x77A0, // Cyan\n\t0x7FFF, // White\n\t0x5AD6, // Light grey\n\t0x4631, // Medium grey\n\t0x2D6B,\t // Dark grey\n]\n\nmodule.exports = {\n\n\tinit_io: function()\n\t{\n\t\tthis.io = {\n\t\t\treverse: 0,\n\t\t\tbold: 0,\n\t\t\titalic: 0,\n\t\t\tbg: -1,\n\t\t\tfg: -1,\n\t\t\t\n\t\t\t// A variable for whether we are outputing in a monospaced font. If non-zero then we are\n\t\t\t// Bit 0 is for @set_style, bit 1 for the header, and bit 2 for @set_font\n\t\t\tmono: this.m.getUint8( 0x11 ) & 0x02,\n\n\t\t\t// A variable for checking whether the transcript bit has been changed\n\t\t\ttranscript: this.m.getUint8( 0x11 ) & 0x01,\n\n\t\t\t// Index 0 is input stream 1, the output streams follow\n\t\t\tstreams: [ 0, 1, {}, [], {} ],\n\n\t\t\tcurrentwin: 0,\n\t\t\t\n\t\t\t// Use Zarf's algorithm for the upper window\n\t\t\t// http://eblong.com/zarf/glk/quote-box.html\n\t\t\t// Implemented in fix_upper_window() and split_window()\n\t\t\theight: 0, // What the VM thinks the height is\n\t\t\tglkheight: 0, // Actual height of the Glk window\n\t\t\tmaxheight: 0, // Height including quote boxes etc\n\t\t\tseenheight: 0, // Last height the player saw\n\t\t\twidth: 0,\n\t\t\trow: 0,\n\t\t\tcol: 0,\n\t\t};\n\n\t\t//this.process_colours();\n\n\t\t// Construct the windows if they do not already exist\n\t\tthis.open_windows()\n\t},\n\n\terase_line: function( value )\n\t{\n\t\tif ( value === 1 )\n\t\t{\n\t\t\tvar io = this.io,\n\t\t\trow = io.row,\n\t\t\tcol = io.col;\n\t\t\tthis._print( Array( io.width - io.col + 1 ).join( ' ' ) );\n\t\t\tthis.set_cursor( row, col );\n\t\t}\n\t},\n\n\terase_window: function(window)\n\t{\n\t\tif (window < 1)\n\t\t{\n\t\t\tthis.Glk.glk_window_clear(this.mainwin)\n\t\t\tif (this.io.bg >= 0)\n\t\t\t{\n\t\t\t\tthis.Glk.glk_stylehint_set(3, 0, 8, this.io.bg)\n\t\t\t}\n\t\t\telse if (this.io.bg === -1)\n\t\t\t{\n\t\t\t\tthis.Glk.glk_stylehint_clear(3, 0, 8)\n\t\t\t}\n\t\t}\n\t\tif (window !== 0)\n\t\t{\n\t\t\tif (window === -1)\n\t\t\t{\n\t\t\t\tthis.split_window(0)\n\t\t\t}\n\t\t\tif (this.upperwin)\n\t\t\t{\n\t\t\t\tthis.Glk.glk_window_clear(this.upperwin)\n\t\t\t\tthis.set_cursor(0, 0)\n\t\t\t}\n\t\t}\n\t},\n\n\tfileref_create_by_prompt: function( data )\n\t{\n\t\tif ( typeof data.run === 'undefined' )\n\t\t{\n\t\t\tdata.run = 1;\n\t\t}\n\t\tthis.fileref_data = data;\n\t\tthis.glk_blocking_call = 'fileref_create_by_prompt';\n\t\tthis.Glk.glk_fileref_create_by_prompt( data.usage, data.mode, data.rock || 0 );\n\t},\n\n\t// Fix the upper window height before an input event\n\tfix_upper_window: function()\n\t{\n\t\tvar Glk = this.Glk,\n\t\tio = this.io;\n\n\t\t// If we have seen the entire window, shrink it to what it should be\n\t\tif (io.seenheight >= io.maxheight)\n\t\t{\n\t\t\tio.maxheight = io.height;\n\t\t}\n\t\tif ( this.upperwin )\n\t\t{\n\t\t\tif ( io.maxheight === 0 )\n\t\t\t{\n\t\t\t\tGlk.glk_window_close( this.upperwin );\n\t\t\t\tthis.upperwin = null;\n\t\t\t}\n\t\t\telse if (io.maxheight !== io.glkheight)\n\t\t\t{\n\t\t\t\tGlk.glk_window_set_arrangement( Glk.glk_window_get_parent( this.upperwin ), 0x12, io.maxheight, null );\n\t\t\t}\n\t\t\tio.glkheight = io.maxheight\n\t\t}\n\t\tio.seenheight = io.maxheight;\n\t\tio.maxheight = io.height;\n\t},\n\n\tformat: function()\n\t{\n\t\tthis.Glk.glk_set_style(style_mappings[!!this.io.mono | this.io.italic | this.io.bold])\n\t\tif (this.Glk.glk_gestalt(0x1100, 0))\n\t\t{\n\t\t\tthis.Glk.garglk_set_reversevideo(this.io.reverse)\n\t\t}\n\t},\n\n\tget_cursor: function( array )\n\t{\n\t\tthis.ram.setUint16( array, this.io.row + 1 );\n\t\tthis.ram.setUint16( array + 2, this.io.col + 1 );\n\t},\n\n\t// Handle char input\n\thandle_char_input: function( charcode )\n\t{\n\t\tvar stream4 = this.io.streams[4],\n\t\tcode = ZSCII_keyCodes[ charcode ] || this.reverse_unicode_table[ charcode ] || 63;\n\t\tthis.variable( this.read_data.storer, code );\n\n\t\t// Echo to the commands log\n\t\tif ( stream4.mode === 1 )\n\t\t{\n\t\t\tstream4.cache += code;\n\t\t}\n\t\tif ( stream4.mode === 2 )\n\t\t{\n\t\t\tthis.Glk.glk_put_char_stream_uni( stream4.str, code );\n\t\t}\n\t},\n\n\t// Handle the result of glk_fileref_create_by_prompt()\n\thandle_create_fileref: function( fref )\n\t{\n\t\tvar Glk = this.Glk,\n\t\tdata = this.fileref_data,\n\t\tstr;\n\n\t\tif ( fref )\n\t\t{\n\t\t\tif ( data.unicode )\n\t\t\t{\n\t\t\t\tstr = Glk.glk_stream_open_file_uni( fref, data.mode, data.rock || 0 );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstr = Glk.glk_stream_open_file( fref, data.mode, data.rock || 0 );\n\t\t\t}\n\t\t\tGlk.glk_fileref_destroy( fref );\n\t\t}\n\t\tif ( data.func === 'restore' || data.func === 'save' )\n\t\t{\n\t\t\tthis.save_restore_handler( str );\n\t\t}\n\t\tif ( data.func === 'input_stream' )\n\t\t{\n\t\t\tthis.io.streams[0] = str;\n\t\t}\n\t\tif ( data.func === 'output_stream' )\n\t\t{\n\t\t\tthis.output_stream_handler( str );\n\t\t}\n\n\t\t// Signal to resume() to call run() if required\n\t\treturn data.run;\n\t},\n\n\t// Handle line input\n\thandle_line_input: function( len, terminator )\n\t{\n\t\tvar ram = this.ram,\n\t\toptions = this.read_data,\n\t\tstreams = this.io.streams,\n\t\t\n\t\t// Cut the response to len, convert to a lower case string, and then to a ZSCII array\n\t\tcommand = String.fromCharCode.apply( null, options.buffer.slice( 0, len ) ) + '\\n',\n\t\tresponse = this.text_to_zscii( command.slice( 0, -1 ).toLowerCase() );\n\t\t\n\t\t// 7.1.1.1: The response must be echoed, Glk will handle this\n\t\t\n\t\t// But we do have to echo to the transcripts\n\t\tif ( streams[2].mode === 1 )\n\t\t{\n\t\t\tstreams[2].cache += command;\n\t\t}\n\t\tif ( streams[2].mode === 2 )\n\t\t{\n\t\t\tthis.Glk.glk_put_jstring_stream( streams[2].str, command );\n\t\t}\n\t\t\n\t\tif ( streams[4].mode === 1 )\n\t\t{\n\t\t\tstreams[4].cache += command;\n\t\t}\n\t\tif ( streams[4].mode === 2 )\n\t\t{\n\t\t\tthis.Glk.glk_put_jstring_stream( streams[4].str, command );\n\t\t}\n\n\t\t// Store the response\n\t\tif ( this.version < 5 )\n\t\t{\n\t\t\t// Append zero terminator\n\t\t\tresponse.push( 0 );\n\n\t\t\t// Store the response in the buffer\n\t\t\tram.setUint8Array( options.bufaddr + 1, response );\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Store the response length\n\t\t\tram.setUint8( options.bufaddr + 1, len );\n\n\t\t\t// Store the response in the buffer\n\t\t\tram.setUint8Array( options.bufaddr + 2, response );\n\n\t\t\t// Store the terminator\n\t\t\tthis.variable( options.storer, isNaN( terminator ) ? 13 : terminator );\n\t\t}\n\n\t\tif ( options.parseaddr )\n\t\t{\n\t\t\t// Tokenise the response\n\t\t\tthis.tokenise( options.bufaddr, options.parseaddr );\n\t\t}\n\t},\n\n\tinput_stream: function( stream )\n\t{\n\t\tvar io = this.io;\n\t\tif ( stream && !io.streams[0] )\n\t\t{\n\t\t\tthis.fileref_create_by_prompt({\n\t\t\t\tfunc: 'input_stream',\n\t\t\t\tmode: 0x02,\n\t\t\t\trock: 212,\n\t\t\t\tunicode: 1,\n\t\t\t\tusage: 0x103,\n\t\t\t});\n\t\t}\n\t\tif ( !stream && io.streams[0] )\n\t\t{\n\t\t\tthis.Glk.glk_stream_close( io.streams[0] );\n\t\t\tio.streams[0] = 0;\n\t\t}\n\t},\n\n\t// Open windows\n\topen_windows: function()\n\t{\n\t\tconst Glk = this.Glk\n\n\t\tif (!this.mainwin)\n\t\t{\n\t\t\t// We will borrow the general approach of Bocfel to implement the Z-Machine's formatting model in Glk\n\t\t\t// https://github.com/garglk/garglk/blob/master/terps/bocfel/screen.c\n\n\t\t\t// Reset some Glk stylehints just in case\n\t\t\tconst styles_to_reset = [1, 2, 4, 5, 6, 9, 10]\n\t\t\tfor (let i = 0; i < 7; i++)\n\t\t\t{\n\t\t\t\t// Reset the size, weight, and obliqueness\n\t\t\t\tGlk.glk_stylehint_set(0, styles_to_reset[i], 3, 0)\n\t\t\t\tGlk.glk_stylehint_set(0, styles_to_reset[i], 4, 0)\n\t\t\t\tGlk.glk_stylehint_set(0, styles_to_reset[i], 5, 0)\n\t\t\t\t// And force proportional font\n\t\t\t\tGlk.glk_stylehint_set(0, styles_to_reset[i], 6, 1)\n\t\t\t}\n\n\t\t\t// Now set the style hints we will use\n\n\t\t\t// Bold will use subheader\n\t\t\tGlk.glk_stylehint_set(0, 4, 4, 1)\n\t\t\t// Italic will use emphasised\n\t\t\tGlk.glk_stylehint_set(0, 1, 5, 1)\n\t\t\t// Bold+italic will use alert\n\t\t\tGlk.glk_stylehint_set(0, 5, 4, 1)\n\t\t\tGlk.glk_stylehint_set(0, 5, 5, 1)\n\t\t\t// Fixed will use preformated\n\t\t\tGlk.glk_stylehint_set(0, 2, 6, 0)\n\t\t\t// Bold+fixed will use user1\n\t\t\tGlk.glk_stylehint_set(0, 9, 4, 1)\n\t\t\tGlk.glk_stylehint_set(0, 9, 6, 0)\n\t\t\t// Italic+fixed will use user2\n\t\t\tGlk.glk_stylehint_set(0, 10, 5, 1)\n\t\t\tGlk.glk_stylehint_set(0, 10, 6, 0)\n\t\t\t// Bold+italic+fixed will use note\n\t\t\tGlk.glk_stylehint_set(0, 6, 4, 1)\n\t\t\tGlk.glk_stylehint_set(0, 6, 5, 1)\n\t\t\tGlk.glk_stylehint_set(0, 6, 6, 0)\n\n\t\t\tthis.mainwin = Glk.glk_window_open(0, 0, 0, 3, 201)\n\t\t\tGlk.glk_set_window(this.mainwin)\n\t\t\tif (this.version3)\n\t\t\t{\n\t\t\t\tthis.statuswin = Glk.glk_window_open(this.mainwin, 0x12, 1, 4, 202)\n\t\t\t\tif (this.statuswin && this.Glk.glk_gestalt(0x1100, 0))\n\t\t\t\t{\n\t\t\t\t\tGlk.garglk_set_reversevideo_stream(Glk.glk_window_get_stream(this.statuswin), 1)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Clean up after restarting\n\t\t\tGlk.glk_stylehint_clear(0, 0, 8)\n\t\t\tif (this.Glk.glk_gestalt(0x1100, 0))\n\t\t\t{\n\t\t\t\tGlk.garglk_set_zcolors_stream(this.mainwin.str, this.io.fg, this.io.bg)\n\t\t\t}\n\t\t\tGlk.glk_window_clear(this.mainwin)\n\t\t\tif (this.upperwin)\n\t\t\t{\n\t\t\t\tGlk.glk_window_close(this.upperwin)\n\t\t\t\tthis.upperwin = null\n\t\t\t}\n\t\t}\n\t},\n\n\t// Manage output streams\n\toutput_stream: function( stream, addr, called_from_print )\n\t{\n\t\tvar ram = this.ram,\n\t\tstreams = this.io.streams,\n\t\tdata, text;\n\t\tstream = U2S( stream );\n\n\t\t// The screen\n\t\tif ( stream === 1 )\n\t\t{\n\t\t\tstreams[1] = 1;\n\t\t}\n\t\tif ( stream === -1 )\n\t\t{\n\t\t\tstreams[1] = 0;\n\t\t}\n\n\t\t// Transcript\n\t\tif ( stream === 2 && !streams[2].mode )\n\t\t{\n\t\t\tthis.fileref_create_by_prompt({\n\t\t\t\tfunc: 'output_stream',\n\t\t\t\tmode: 0x05,\n\t\t\t\trock: 210,\n\t\t\t\trun: !called_from_print,\n\t\t\t\tstr: 2,\n\t\t\t\tunicode: 1,\n\t\t\t\tusage: 0x102,\n\t\t\t});\n\t\t\tstreams[2].cache = '';\n\t\t\tstreams[2].mode = 1;\n\t\t\tif ( !called_from_print )\n\t\t\t{\n\t\t\t\tthis.stop = 1;\n\t\t\t}\n\t\t}\n\t\tif ( stream === -2 )\n\t\t{\n\t\t\tram.setUint8( 0x11, ( ram.getUint8( 0x11 ) & 0xFE ) );\n\t\t\tif ( streams[2].mode === 2 )\n\t\t\t{\n\t\t\t\tthis.Glk.glk_stream_close( streams[2].str );\n\t\t\t}\n\t\t\tstreams[2].mode = this.io.transcript = 0;\n\t\t}\n\n\t\t// Memory\n\t\tif ( stream === 3 )\n\t\t{\n\t\t\tstreams[3].unshift( [ addr, '' ] );\n\t\t}\n\t\tif ( stream === -3 )\n\t\t{\n\t\t\tdata = streams[3].shift();\n\t\t\ttext = this.text_to_zscii( data[1] );\n\t\t\tram.setUint16( data[0], text.length );\n\t\t\tram.setUint8Array( data[0] + 2, text );\n\t\t}\n\n\t\t// Command list\n\t\tif ( stream === 4 && !streams[4].mode )\n\t\t{\n\t\t\tthis.fileref_create_by_prompt({\n\t\t\t\tfunc: 'output_stream',\n\t\t\t\tmode: 0x05,\n\t\t\t\trock: 211,\n\t\t\t\tstr: 4,\n\t\t\t\tunicode: 1,\n\t\t\t\tusage: 0x103,\n\t\t\t});\n\t\t\tstreams[4].cache = '';\n\t\t\tstreams[4].mode = 1;\n\t\t\tthis.stop = 1;\n\t\t}\n\t\tif ( stream === -4 )\n\t\t{\n\t\t\tif ( streams[4].mode === 2 )\n\t\t\t{\n\t\t\t\tthis.Glk.glk_stream_close( streams[4].str );\n\t\t\t}\n\t\t\tstreams[4].mode = 0;\n\t\t}\n\t},\n\t\n\toutput_stream_handler: function( str )\n\t{\n\t\tvar ram = this.ram,\n\t\tstreams = this.io.streams,\n\t\tdata = this.fileref_data;\n\n\t\tif ( data.str === 2 )\n\t\t{\n\t\t\tram.setUint8( 0x11, ( ram.getUint8( 0x11 ) & 0xFE ) | ( str ? 1 : 0 ) );\n\t\t\tif ( str )\n\t\t\t{\n\t\t\t\tstreams[2].mode = 2;\n\t\t\t\tstreams[2].str = str;\n\t\t\t\tthis.io.transcript = 1;\n\t\t\t\tif ( streams[2].cache )\n\t\t\t\t{\n\t\t\t\t\tthis.Glk.glk_put_jstring_stream( streams[2].str, streams[2].cache );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstreams[2].mode = this.io.transcript = 0;\n\t\t\t}\n\t\t}\n\n\t\tif ( data.str === 4 )\n\t\t{\n\t\t\tif ( str )\n\t\t\t{\n\t\t\t\tstreams[4].mode = 2;\n\t\t\t\tstreams[4].str = str;\n\t\t\t\tif ( streams[4].cache )\n\t\t\t\t{\n\t\t\t\t\tthis.Glk.glk_put_jstring_stream( streams[4].str, streams[4].cache );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstreams[4].mode = 0;\n\t\t\t}\n\t\t}\n\t},\n\n\t// Print text!\n\t_print: function( text )\n\t{\n\t\tvar Glk = this.Glk,\n\t\tio = this.io,\n\t\ti = 0;\n\t\t\n\t\t// Stream 3 gets the text first\n\t\tif ( io.streams[3].length )\n\t\t{\n\t\t\tio.streams[3][0][1] += text;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Convert CR into LF\n\t\t\ttext = text.replace( /\\r/g, '\\n' );\n\t\t\t\n\t\t\t// Check the transcript bit\n\t\t\t// Because it might need to prompt for a file name, we return here, and will print again in the handler\n\t\t\tif ( ( this.m.getUint8( 0x11 ) & 0x01 ) !== io.transcript )\n\t\t\t{\n\t\t\t\tthis.output_stream( io.transcript ? -2 : 2, 0, 1 );\n\t\t\t}\n\t\t\t\n\t\t\t// Check if the monospace font bit has changed\n\t\t\t// Unfortunately, even now Inform changes this bit for the font statement, even though the 1.1 standard depreciated it :(\n\t\t\tif ( ( this.m.getUint8( 0x11 ) & 0x02 ) !== ( io.mono & 0x02 ) )\n\t\t\t{\n\t\t\t\tio.mono ^= 0x02;\n\t\t\t\tthis.format();\n\t\t\t}\n\t\t\t\n\t\t\t// For the upper window we print each character individually so that we can track the cursor position\n\t\t\tif ( io.currentwin && this.upperwin )\n\t\t\t{\n\t\t\t\t// Don't automatically increase the size of the window\n\t\t\t\t// If we confirm that games do need this then we can implement it later\n\t\t\t\twhile ( i < text.length && io.row < io.height )\n\t\t\t\t{\n\t\t\t\t\tGlk.glk_put_jstring( text[i++] );\n\t\t\t\t\tio.col++;\n\t\t\t\t\tif ( io.col === io.width )\n\t\t\t\t\t{\n\t\t\t\t\t\tio.col = 0;\n\t\t\t\t\t\tio.row++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( !io.currentwin )\n\t\t\t{\n\t\t\t\tif ( io.streams[1] )\n\t\t\t\t{\n\t\t\t\t\tGlk.glk_put_jstring( text );\n\t\t\t\t}\n\t\t\t\t// Transcript\n\t\t\t\tif ( io.streams[2].mode === 1 )\n\t\t\t\t{\n\t\t\t\t\tio.streams[2].cache += text;\n\t\t\t\t}\n\t\t\t\tif ( io.streams[2].mode === 2 )\n\t\t\t\t{\n\t\t\t\t\tGlk.glk_put_jstring_stream( io.streams[2].str, text );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Print many things\n\tprint: function( type, val )\n\t{\n\t\tvar proptable, result;\n\t\t\n\t\t// Number\n\t\tif ( type === 0 )\n\t\t{\n\t\t\tresult = val;\n\t\t}\n\t\t// Unicode\n\t\tif ( type === 1 )\n\t\t{\n\t\t\tresult = String.fromCharCode( val );\n\t\t}\n\t\t// Text from address\n\t\tif ( type === 2 )\n\t\t{\n\t\t\tresult = this.jit[ val ] || this.decode( val );\n\t\t}\n\t\t// Object\n\t\tif ( type === 3 )\n\t\t{\n\t\t\tproptable = this.m.getUint16( this.objects + ( this.version3 ? 9 : 14 ) * val + ( this.version3 ? 7 : 12 ) );\n\t\t\tresult = this.decode( proptable + 1, this.m.getUint8( proptable ) * 2 );\n\t\t}\n\t\t// ZSCII\n\t\tif ( type === 4 )\n\t\t{\n\t\t\tif ( !this.unicode_table[ val ] )\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = this.unicode_table[ val ];\n\t\t}\n\t\tthis._print( '' + result );\n\t},\n\n\tprint_table: function( zscii, width, height, skip )\n\t{\n\t\theight = height || 1;\n\t\tskip = skip || 0;\n\t\tvar i = 0;\n\t\twhile ( i++ < height )\n\t\t{\n\t\t\tthis._print( this.zscii_to_text( this.m.getUint8Array( zscii, width ) ) + ( i < height ? '\\r' : '' ) );\n\t\t\tzscii += width + skip;\n\t\t}\n\t},\n\n\t// Process CSS default colours\n\t/*process_colours: function()\n\t{\n\t\t// Convert RGB to a Z-Machine true colour\n\t\t// RGB is a css colour code. rgb(), #000000 and #000 formats are supported.\n\t\tfunction convert_RGB( code )\n\t\t{\n\t\t\tvar round = Math.round,\n\t\t\tdata = /(\\d+),\\s*(\\d+),\\s*(\\d+)|#(\\w{1,2})(\\w{1,2})(\\w{1,2})/.exec( code ),\n\t\t\tresult;\n\n\t\t\t// Nice rgb() code\n\t\t\tif ( data[1] )\n\t\t\t{\n\t\t\t\tresult =  [ data[1], data[2], data[3] ];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Messy CSS colour code\n\t\t\t\tresult = [ parseInt( data[4], 16 ), parseInt( data[5], 16 ), parseInt( data[6], 16 ) ];\n\t\t\t\t// Stretch out compact #000 codes to their full size\n\t\t\t\tif ( code.length === 4 )\n\t\t\t\t{\n\t\t\t\t\tresult = [ result[0] << 4 | result[0], result[1] << 4 | result[1], result[2] << 4 | result[2] ];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Convert to a 15bit colour\n\t\t\treturn round( result[2] / 8.226 ) << 10 | round( result[1] / 8.226 ) << 5 | round( result[0] / 8.226 );\n\t\t}\n\n\t\t// Standard colours\n\t\tvar colours = [\n\t\t\t0xFFFE, // Current\n\t\t\t0xFFFF, // Default\n\t\t\t0x0000, // Black\n\t\t\t0x001D, // Red\n\t\t\t0x0340, // Green\n\t\t\t0x03BD, // Yellow\n\t\t\t0x59A0, // Blue\n\t\t\t0x7C1F, // Magenta\n\t\t\t0x77A0, // Cyan\n\t\t\t0x7FFF, // White\n\t\t\t0x5AD6, // Light grey\n\t\t\t0x4631, // Medium grey\n\t\t\t0x2D6B,\t // Dark grey\n\t\t],\n\n\t\t// Start with CSS colours provided by the runner\n\t\tfg_css = this.options.fgcolour,\n\t\tbg_css = this.options.bgcolour,\n\t\t// Convert to true colour for storing in the header\n\t\tfg_true = fg_css ? convert_RGB( fg_css ) : 0xFFFF,\n\t\tbg_true = bg_css ? convert_RGB( bg_css ) : 0xFFFF,\n\t\t// Search the list of standard colours\n\t\tfg = colours.indexOf( fg_true ),\n\t\tbg = colours.indexOf( bg_true );\n\t\t// ZVMUI must have colours for reversing text, even if we don't write them to the header\n\t\t// So use the given colours or assume black on white\n\t\tif ( fg < 2 )\n\t\t{\n\t\t\tfg = fg_css || 2;\n\t\t}\n\t\tif ( bg < 2 )\n\t\t{\n\t\t\tbg = bg_css || 9;\n\t\t}\n\n\t\tutils.extend( this.options, {\n\t\t\tfg: fg,\n\t\t\tbg: bg,\n\t\t\tfg_true: fg_true,\n\t\t\tbg_true: bg_true,\n\t\t});\n\t},*/\n\n\t// Request line input\n\tread: function( storer, text, parse, time, routine )\n\t{\n\t\tvar len = this.m.getUint8( text ),\n\t\tinitiallen = 0,\n\t\tbuffer,\n\t\tinput_stream1_len;\n\n\t\tif ( this.version3 )\n\t\t{\n\t\t\tthis.v3_status();\n\t\t}\n\t\t// The spec is badly phrased; the buffer capacity includes the zero terminator\n\t\t// See https://github.com/DFillmore/Z-Machine-Standard/issues/76\n\t\tif (this.version < 5)\n\t\t{\n\t\t\tlen--\n\t\t}\n\t\t//else\n\t\t//{\n\t\t//initiallen = this.m.getUint8( text + 1 );\n\t\t//}\n\n\t\tbuffer = Array( len );\n\t\tbuffer.fill( 0 )\n\t\tthis.read_data = {\n\t\t\tbuffer: buffer,\n\t\t\tbufaddr: text, // text-buffer\n\t\t\tparseaddr: parse, // parse-buffer\n\t\t\troutine: routine,\n\t\t\tstorer: storer,\n\t\t\ttime: time,\n\t\t};\n\t\t\n\t\t// Input stream 1\n\t\tif ( this.io.streams[0] )\n\t\t{\n\t\t\tinput_stream1_len = this.Glk.glk_get_line_stream_uni( this.io.streams[0], buffer );\n\n\t\t\t// Check for a newline character\n\t\t\tif ( buffer[input_stream1_len - 1] === 0x0A )\n\t\t\t{\n\t\t\t\tinput_stream1_len--;\n\t\t\t}\n\t\t\tif ( input_stream1_len )\n\t\t\t{\n\t\t\t\tthis._print( String.fromCharCode.apply( null, buffer.slice( 0, input_stream1_len ) ) + '\\n' );\n\t\t\t\tthis.handle_line_input( input_stream1_len );\n\t\t\t\treturn this.stop = 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.input_stream( 0 );\n\t\t\t}\n\t\t}\n\n\t\t// TODO: pre-existing input\n\t\tthis.Glk.glk_request_line_event_uni( this.io.currentwin ? this.upperwin : this.mainwin, buffer, initiallen );\n\t\tthis.fix_upper_window();\n\t},\n\n\t// Request character input\n\tread_char: function( storer, one, time, routine )\n\t{\n\t\t// Input stream 1\n\t\tif ( this.io.streams[0] )\n\t\t{\n\t\t\tvar code = this.Glk.glk_get_char_stream_uni( this.io.streams[0] );\n\t\t\t// Check for EOF\n\t\t\tif ( code === -1 )\n\t\t\t{\n\t\t\t\tthis.input_stream( 0 );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.variable( storer, code );\n\t\t\t\treturn this.stop = 0;\n\t\t\t}\n\t\t}\n\n\t\tthis.read_data = {\n\t\t\troutine: routine,\n\t\t\tstorer: storer,\n\t\t\ttime: time,\n\t\t};\n\t\tthis.Glk.glk_request_char_event_uni( this.io.currentwin ? this.upperwin : this.mainwin );\n\t\tthis.fix_upper_window();\n\t},\n\n\tset_colour: function(foreground, background)\n\t{\n\t\tthis.set_true_colour(zcolours[foreground], zcolours[background])\n\t},\n\n\t// Note that row and col must be decremented in JIT code\n\tset_cursor: function( row, col )\n\t{\n\t\tvar io = this.io;\n\n\t\t// 8.7.2.3: do nothing if the lower window is selected\n\t\tif ( !io.currentwin )\n\t\t{\n\t\t\treturn\n\t\t}\n\n\t\tif ( row >= io.height )\n\t\t{\n\t\t\t// Moving the cursor to a row forces the upper window\n\t\t\t// to open enough for that line to exist\n\t\t\tthis.split_window( row + 1 );\n\t\t}\n\t\tif ( this.upperwin && row >= 0 && col >= 0 && col < io.width )\n\t\t{\n\t\t\tthis.Glk.glk_window_move_cursor( this.upperwin, col, row );\n\t\t\tio.row = row;\n\t\t\tio.col = col;\n\t\t}\n\t},\n\n\tset_font: function( font )\n\t{\n\t\tvar returnval = this.io.mono & 0x04 ? 4 : 1;\n\t\tif ( font === 0 )\n\t\t{\n\t\t\treturn returnval;\n\t\t}\n\t\t// We only support fonts 1 and 4\n\t\tif ( font !== 1 && font !== 4 )\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t\tif ( font !== returnval )\n\t\t{\n\t\t\tthis.io.mono ^= 0x04;\n\t\t\tthis.format();\n\t\t}\n\t\treturn returnval;\n\t},\n\n\t// Set styles\n\tset_style: function( stylebyte )\n\t{\n\t\tvar io = this.io;\n\n\t\t// Setting the style to Roman will clear the others\n\t\tif ( stylebyte === 0 )\n\t\t{\n\t\t\tio.reverse = io.bold = io.italic = 0;\n\t\t\tio.mono &= 0xFE;\n\t\t}\n\t\tif ( stylebyte & 0x01 )\n\t\t{\n\t\t\tio.reverse = 1;\n\t\t}\n\t\tif ( stylebyte & 0x02 )\n\t\t{\n\t\t\tio.bold = 0x04;\n\t\t}\n\t\tif ( stylebyte & 0x04 )\n\t\t{\n\t\t\tio.italic = 0x02;\n\t\t}\n\t\tif ( stylebyte & 0x08 )\n\t\t{\n\t\t\tio.mono |= 0x01;\n\t\t}\n\t\tthis.format();\n\t},\n\n\t// Set true colours\n\tset_true_colour: function(foreground, background)\n\t{\n\t\tconst Glk = this.Glk\n\t\tif (Glk.glk_gestalt(0x1100, 0))\n\t\t{\n\t\t\tlet fg, bg\n\t\t\tif (foreground === 0xFFFE)\n\t\t\t{\n\t\t\t\tfg = -2\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (foreground === 0xFFFF)\n\t\t\t\t{\n\t\t\t\t\tfg = -1\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfg = convert_true_colour(foreground)\n\t\t\t\t}\n\t\t\t\tthis.io.fg = fg\n\t\t\t}\n\n\t\t\tif (background === 0xFFFE)\n\t\t\t{\n\t\t\t\tbg = -2\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (background === 0xFFFF)\n\t\t\t\t{\n\t\t\t\t\tbg = -1\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbg = convert_true_colour(background)\n\t\t\t\t}\n\t\t\t\tthis.io.bg = bg\n\t\t\t}\n\n\t\t\t// Set the colours for each open window\n\t\t\tGlk.garglk_set_zcolors_stream(this.mainwin.str, fg, bg)\n\t\t\tif (this.upperwin)\n\t\t\t{\n\t\t\t\tGlk.garglk_set_zcolors_stream(this.upperwin.str, fg, bg)\n\t\t\t}\n\t\t}\n\t},\n\n\tset_window: function( window )\n\t{\n\t\tthis.io.currentwin = window;\n\t\t\n\t\t// Focusing the upper window resets the cursor to the top left;\n\t\t// it also opens the upper window if it's not open\n\t\tif ( window )\n\t\t{\n\t\t\tthis.set_cursor( 0, 0 );\n\t\t}\n\n\t\tthis.Glk.glk_set_window( this.upperwin && window ? this.upperwin : this.mainwin );\n\t\tthis.format();\n\t},\n\n\tsplit_window: function( lines )\n\t{\n\t\tvar Glk = this.Glk,\n\t\tio = this.io,\n\t\trow = io.row, col = io.col,\n\t\toldheight = io.height,\n\t\tstr;\n\t\tio.height = lines;\n\n\t\t// Erase existing lines if we are expanding into existing rows\n\t\tif ( this.upperwin && lines > oldheight )\n\t\t{\n\t\t\tstr = Glk.glk_window_get_stream( this.upperwin );\n\t\t\twhile ( oldheight < lines )\n\t\t\t{\n\t\t\t\tGlk.glk_window_move_cursor( this.upperwin, 0, oldheight++ );\n\t\t\t\tGlk.glk_put_jstring_stream( str, Array( io.width + 1 ).join( ' ' ) );\n\t\t\t}\n\t\t\tGlk.glk_window_move_cursor( this.upperwin, col, row );\n\t\t}\n\n\t\t// Don't decrease the height of the window yet, only increase\n\t\tif ( lines > io.maxheight )\n\t\t{\n\t\t\tio.maxheight = lines;\n\n\t\t\t// Set the height of the window\n\t\t\t// Create the window if it doesn't exist\n\t\t\tif ( !this.upperwin )\n\t\t\t{\n\t\t\t\tif (this.io.bg >= 0)\n\t\t\t\t{\n\t\t\t\t\tGlk.glk_stylehint_set(4, 0, 8, this.io.bg)\n\t\t\t\t}\n\t\t\t\tthis.upperwin = Glk.glk_window_open( this.mainwin, 0x12, io.maxheight, 4, 203 );\n\t\t\t\tif (this.Glk.glk_gestalt(0x1100, 0))\n\t\t\t\t{\n\t\t\t\t\tGlk.garglk_set_zcolors_stream(this.upperwin.str, this.io.fg, this.io.bg)\n\t\t\t\t}\n\t\t\t\tGlk.glk_stylehint_clear(4, 0, 8)\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tGlk.glk_window_set_arrangement( Glk.glk_window_get_parent( this.upperwin ), 0x12, io.maxheight, null );\n\t\t\t}\n\t\t\tio.glkheight = io.maxheight\n\t\t}\n\n\t\tif ( lines )\n\t\t{\n\t\t\t// Reset the cursor if it is now outside the window\n\t\t\tif ( io.row >= lines )\n\t\t\t{\n\t\t\t\tthis.set_cursor( 0, 0 );\n\t\t\t}\n\t\t\t// 8.6.1.1.2: In version three the upper window is always cleared\n\t\t\tif ( this.version3 )\n\t\t\t{\n\t\t\t\tGlk.glk_window_clear( this.upperwin );\n\t\t\t}\n\t\t}\n\t},\n\n\t// Update the header after restarting or restoring\n\tupdate_header: function()\n\t{\n\t\tvar ram = this.ram;\n\n\t\t// Reset the Xorshift seed\n\t\tthis.xorshift_seed = 0;\n\n\t\t// Update the screen size variables - in version 3 does not actually set the header variables\n\t\tthis.update_screen_size()\n\n\t\t// For version 3 we only set Flags 1\n\t\tif ( this.version3 )\n\t\t{\n\t\t\treturn ram.setUint8( 0x01,\n\t\t\t\t( ram.getUint8( 0x01 ) & 0x8F ) // Keep all except bits 4-6\n\t\t\t\t| ( this.statuswin ? 0x20 : 0x10 ) // If status win is available then set 0x20 for the upper win also being available, otherwise 0x10 for the status win itself\n\t\t\t\t| 0x40 // Variable pitch font is default - Or can we tell from options if the font is fixed pitch?\n\t\t\t);\n\t\t}\n\t\t\n\t\t// Flags 1\n\t\tram.setUint8( 0x01,\n\t\t\t(this.Glk.glk_gestalt(0x1100, 0) ? 1 : 0) // Check if colour is supported\n\t\t\t| (ram.getUint8(0x01) & 0x02) // Preserve bit 1: Even though this is not specified for versions 4-5/8, it is used by Inform. See https://intfiction.org/t/online-if-game-hosting-at-borogove-io/52617/14\n\t\t\t| 0x1C // Bold, italic and mono are supported\n\t\t\t| 0x00 // Timed input not supported yet\n\t\t);\n\t\t\n\t\t// Flags 2: Clear bits 3, 5, 7: no character graphics, mouse or sound effects\n\t\t// This is really a word, but we only care about the lower byte\n\t\tram.setUint8( 0x11, ram.getUint8( 0x11 ) & 0x57 );\n\t\t\n\t\t// Font height/width in \"units\"\n\t\tif ( this.version > 4 )\n\t\t{\n\t\t\tram.setUint16( 0x26, 0x0101 )\n\t\t}\n\t\t\n\t\t// Colours\n\t\t//ram.setUint8( 0x2C, isNaN( this.options.bg ) ? 1 : this.options.bg );\n\t\t//ram.setUint8( 0x2D, isNaN( this.options.fg ) ? 1 : this.options.fg );\n\t\t//this.extension_table( 5, this.options.fg_true );\n\t\t//this.extension_table( 6, this.options.bg_true );\n\t\t\n\t\t// Z Machine Spec revision\n\t\tram.setUint16( 0x32, 0x0102 );\n\t\t\n\t\t// Clear flags three, we don't support any of that stuff\n\t\tthis.extension_table( 4, 0 );\n\t},\n\n\tupdate_screen_size: function()\n\t{\n\t\tconst Glk = this.Glk\n\t\tconst height_box = new Glk.RefBox()\n\t\tconst width_box = new Glk.RefBox()\n\t\tconst tempwin = Glk.glk_window_open( this.mainwin, 0x12, 0, 4, 0 )\n\t\tlet height = 0\n\t\tlet width = 0\n\n\t\t// The main window is proportional, so its width may not be accurate\n\t\t// If the upper or status window is present, use its width, or else try to make a temp window\n\t\t// The height is the total of all windows\n\n\t\tGlk.glk_window_get_size( this.mainwin, width_box, height_box )\n\t\theight = height_box.get_value()\n\n\t\tif ( this.upperwin )\n\t\t{\n\t\t\tGlk.glk_window_get_size( this.upperwin, width_box, height_box )\n\t\t\theight += height_box.get_value()\n\t\t}\n\t\tif ( this.statuswin )\n\t\t{\n\t\t\tGlk.glk_window_get_size( this.statuswin, width_box, height_box )\n\t\t\theight += height_box.get_value()\n\t\t}\n\t\tif ( tempwin )\n\t\t{\n\t\t\tGlk.glk_window_get_size( tempwin, width_box, 0 )\n\t\t\tGlk.glk_window_close( tempwin )\n\t\t}\n\n\t\t// Use whichever width was available\n\t\twidth = width_box.get_value()\n\n\t\t// Cap the dimensions\n\t\t// Height is capped to 254 as 255 means infinite, which breaks some games\n\t\theight = Math.min( height, 254 )\n\t\twidth = this.io.width = Math.min( width, 255 )\n\n\t\t// Update the header\n\t\tif ( this.version > 3 )\n\t\t{\n\t\t\tthis.ram.setUint8( 0x20, height )\n\t\t\tthis.ram.setUint8( 0x21, width )\n\t\t}\n\t\tif ( this.version > 4 )\n\t\t{\n\t\t\tthis.ram.setUint16( 0x22, width )\n\t\t\tthis.ram.setUint16( 0x24, height )\n\t\t}\n\n\t\t// Fix the cursor if it is outside the window\n\t\tif ( this.io.col >= width )\n\t\t{\n\t\t\tthis.io.col = width - 1\n\t\t}\n\t},\n\t\n\t// Output the version 3 status line\n\tv3_status: function()\n\t{\n\t\tif ( !this.statuswin )\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar Glk = this.Glk,\n\t\tstr = Glk.glk_window_get_stream( this.statuswin ),\n\t\tmemory = this.m,\n\t\twidth = this.io.width,\n\t\thours_score = memory.getUint16( this.globals + 2 ),\n\t\tmins_turns = memory.getUint16( this.globals + 4 ),\n\t\tproptable = memory.getUint16( this.objects + 9 * memory.getUint16( this.globals ) + 7 ),\n\t\tshortname = '' + this.decode( proptable + 1, memory.getUint8( proptable ) * 2 ),\n\t\trhs;\n\n\t\t// Handle the turns/score or time\n\t\tif ( memory.getUint8( 0x01 ) & 0x02 )\n\t\t{\n\t\t\trhs = 'Time: ' + ( hours_score % 12 === 0 ? 12 : hours_score % 12 ) + ':' + ( mins_turns < 10 ? '0' : '' ) + mins_turns + ' ' + ( hours_score > 11 ? 'PM' : 'AM' );\n\t\t}\n\t\telse\n\t\t{\n\t\t\trhs = 'Score: ' + hours_score + '  Turns: ' + mins_turns;\n\t\t}\n\n\t\t// Print a blank line in reverse\n\t\tGlk.glk_window_move_cursor( this.statuswin, 0, 0 );\n\t\tGlk.glk_put_jstring_stream( str, Array( width + 1 ).join( ' ' ) );\n\n\t\t// Trim the shortname if necessary\n\t\tGlk.glk_window_move_cursor( this.statuswin, 0, 0 );\n\t\tGlk.glk_put_jstring_stream( str, ' ' + shortname.slice( 0, width - rhs.length - 4 ) );\n\n\t\t// Print the right hand side\n\t\tGlk.glk_window_move_cursor( this.statuswin, width - rhs.length - 1, 0 );\n\t\tGlk.glk_put_jstring_stream( str, rhs );\n\t},\n\n};\n", "/*\n\nZ-Machine disassembler - disassembles zcode into an AST\n=======================================================\n\nCopyright (c) 2011 The ifvms.js team\nBSD licenced\nhttp://github.com/curiousdannii/ifvms.js\n\n*/\n\n/*\n\nNote:\n\tNothing is done to check whether an instruction actually has a valid number of operands. Extras will usually be ignored while missing operands may throw errors at either the code building stage or when the JIT code is called.\n\nTODO:\n\tIf we diassessemble part of what we already have before, can we just copy/slice the context?\n\n*/\n\nvar AST = require( '../common/ast.js' );\n\nmodule.exports.disassemble = function()\n{\n\tvar pc, offset, // Set in the loop below\n\tmemory = this.m,\n\topcodes = this.opcodes,\n\ttemp,\n\tcode,\n\topcode_class,\n\toperands_type, // The types of the operands, or -1 for var instructions\n\toperands,\n\n\t// Create the context for this code fragment\n\tcontext = new AST.RoutineContext( this, this.pc );\n\n\t// Utility function to unpack the variable form operand types byte\n\tfunction get_var_operand_types( operands_byte, operands_type )\n\t{\n\t\tfor ( var i = 0; i < 4; i++ )\n\t\t{\n\t\t\toperands_type.push( (operands_byte & 0xC0) >> 6 );\n\t\t\toperands_byte <<= 2;\n\t\t}\n\t}\n\n\t// Set the context's root context to be itself, and add it to the list of subcontexts\n\t//context.root = context;\n\t//context.contexts[0] = context;\n\n\t// Run through until we can no more\n\twhile ( 1 )\n\t{\n\t\t// This instruction\n\t\toffset = pc = this.pc;\n\t\tcode = memory.getUint8( pc++ );\n\n\t\t// Extended instructions\n\t\tif ( code === 190 )\n\t\t{\n\t\t\toperands_type = -1;\n\t\t\tcode = memory.getUint8( pc++ ) + 1000;\n\t\t}\n\n\t\telse if ( code & 0x80 )\n\t\t{\n\t\t\t// Variable form instructions\n\t\t\tif ( code & 0x40 )\n\t\t\t{\n\t\t\t\toperands_type = -1;\n\t\t\t\t// 2OP instruction with VAR parameters\n\t\t\t\tif ( !(code & 0x20) )\n\t\t\t\t{\n\t\t\t\t\tcode &= 0x1F;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Short form instructions\n\t\t\telse\n\t\t\t{\n\t\t\t\toperands_type = [ (code & 0x30) >> 4 ];\n\t\t\t\t// Clear the operand type if 1OP, keep for 0OPs\n\t\t\t\tif ( operands_type[0] < 3 )\n\t\t\t\t{\n\t\t\t\t\tcode &= 0xCF;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Long form instructions\n\t\telse\n\t\t{\n\t\t\toperands_type = [ code & 0x40 ? 2 : 1, code & 0x20 ? 2 : 1 ];\n\t\t\tcode &= 0x1F;\n\t\t}\n\n\t\t// Check for missing opcodes\n\t\tif ( !opcodes[code] )\n\t\t{\n\t\t\tthis.log( '' + context );\n\t\t\tthis.stop = 1;\n\t\t\tthrow new Error( 'Unknown opcode #' + code + ' at pc=' + offset );\n\t\t}\n\n\t\t// Variable for quicker access to the opcode flags\n\t\topcode_class = opcodes[code].prototype;\n\n\t\t// Variable form operand types\n\t\tif ( operands_type === -1 )\n\t\t{\n\t\t\toperands_type = [];\n\t\t\tget_var_operand_types( memory.getUint8(pc++), operands_type );\n\n\t\t\t// VAR_LONG opcodes have two operand type bytes\n\t\t\tif ( code === 236 || code === 250 )\n\t\t\t{\n\t\t\t\tget_var_operand_types( memory.getUint8(pc++), operands_type );\n\t\t\t}\n\t\t}\n\n\t\t// Load the operands\n\t\toperands = [];\n\t\ttemp = 0;\n\t\twhile ( temp < operands_type.length )\n\t\t{\n\t\t\t// Large constant\n\t\t\tif ( operands_type[temp] === 0 )\n\t\t\t{\n\t\t\t\toperands.push( new AST.Operand( this, memory.getUint16(pc) ) );\n\t\t\t\tpc += 2;\n\t\t\t}\n\n\t\t\t// Small constant\n\t\t\tif ( operands_type[temp] === 1 )\n\t\t\t{\n\t\t\t\toperands.push( new AST.Operand( this, memory.getUint8(pc++) ) );\n\t\t\t}\n\n\t\t\t// Variable operand\n\t\t\tif ( operands_type[temp++] === 2 )\n\t\t\t{\n\t\t\t\toperands.push( new AST.Variable( this, memory.getUint8(pc++) ) );\n\t\t\t}\n\t\t}\n\n\t\t// Check for a store variable\n\t\tif ( opcode_class.storer )\n\t\t{\n\t\t\toperands.push( new AST.Variable( this, memory.getUint8(pc++) ) );\n\t\t}\n\n\t\t// Check for a branch address\n\t\t// If we don't calculate the offset now we won't be able to tell the difference between 0x40 and 0x0040\n\t\tif ( opcode_class.brancher )\n\t\t{\n\t\t\ttemp = memory.getUint8( pc++ );\n\t\t\toperands.push( [\n\t\t\t\ttemp & 0x80, // iftrue\n\t\t\t\ttemp & 0x40 ?\n\t\t\t\t\t// single byte address\n\t\t\t\t\ttemp & 0x3F :\n\t\t\t\t\t// word address, but first get the second byte of it\n\t\t\t\t\t( temp << 8 | memory.getUint8( pc++ ) ) << 18 >> 18,\n\t\t\t] );\n\t\t}\n\n\t\t// Check for a text literal\n\t\tif ( opcode_class.printer )\n\t\t{\n\t\t\t// Just use the address as an operand, the text will be decoded at run time\n\t\t\toperands.push( pc );\n\n\t\t\t// Continue until we reach the stop bit\n\t\t\t// (or the end of the file, which will stop memory access errors, even though it must be a malformed storyfile)\n\t\t\twhile ( pc < this.eof )\n\t\t\t{\n\t\t\t\ttemp = memory.getUint8( pc );\n\t\t\t\tpc += 2;\n\n\t\t\t\t// Stop bit\n\t\t\t\tif ( temp & 0x80 )\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update the engine's pc\n\t\tthis.pc = pc;\n\n\t\t// Create the instruction\n\t\tcontext.ops.push( new opcodes[code]( this, context, code, offset, pc, operands ) );\n\n\t\t// Check for the end of a large if block\n\t\ttemp = 0;\n\t\t/*if ( context.targets.indexOf( pc ) >= 0 )\n\t\t{\n\t\t\tif ( DEBUG )\n\t\t\t{\n\t\t\t\t// Skip if we must\n\t\t\t\tif ( !debugflags.noidioms )\n\t\t\t\t{\n\t\t\t\t\ttemp = idiom_if_block( context, pc );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttemp = idiom_if_block( context, pc );\n\t\t\t}\n\t\t}*/\n\n\t\t// We can't go any further if we have a final stopper :(\n\t\tif ( opcode_class.stopper && !temp )\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn context;\n};\n", "/*\n\nZVM - the ifvms.js Z-Machine (versions 3-5, 8)\n==============================================\n\nCopyright (c) 2017 The ifvms.js team\nMIT licenced\nhttps://github.com/curiousdannii/ifvms.js\n\n*/\n\n/*\n\nThis file is the public API of ZVM, which is based on the API of Quixe:\nhttps://github.com/erkyrath/quixe/wiki/Quixe-Without-GlkOte#quixes-api\n\nZVM willfully ignores the standard in these ways:\n\tNon-buffered output is not supported\n\tSaving tables is not supported (yet?)\n\tNo interpreter number or version is set\n\nAny other non-standard behaviour should be considered a bug\n\n*/\n\n'use strict';\n\nvar utils = require( './common/utils.js' ),\nfile = require( './common/file.js' ),\n\ndefault_options = {\n\tstack_len: 100 * 1000,\n\tundo_len: 1000 * 1000,\n},\n\napi = {\n\n\tinit: function()\n\t{\n\t\t// Create this here so that it won't be cleared on restart\n\t\tthis.jit = {};\n\t\t\n\t\t// The Quixe API expects the start function to be named init\n\t\tthis.init = this.start;\n\t},\n\n\tprepare: function( storydata, options )\n\t{\n\t\t// If we are not given a glk option then we cannot continue\n\t\tif ( !options.Glk )\n\t\t{\n\t\t\tthrow new Error( 'A reference to Glk is required' );\n\t\t}\n\t\tthis.Glk = options.Glk;\n\t\tthis.data = storydata;\n\t\tthis.options = utils.extend( {}, default_options, options );\n\t},\n\n\tstart: function()\n\t{\n\t\tvar Glk = this.Glk,\n\t\tdata;\n\t\ttry\n\t\t{\n\t\t\t// Identify the format and version number of the data file we were given\n\t\t\tdata = file.identify( this.data );\n\t\t\tdelete this.data;\n\t\t\tif ( !data || data.format !== 'ZCOD' )\n\t\t\t{\n\t\t\t\tthrow new Error( 'This is not a Z-Code file' );\n\t\t\t}\n\t\t\tif ( [ 3, 4, 5, 8 ].indexOf( data.version ) < 0 )\n\t\t\t{\n\t\t\t\tthrow new Error( 'Unsupported Z-Machine version: ' + data.version );\n\t\t\t}\n\t\t\t\n\t\t\t// Load the storyfile we are given into our MemoryView (an enhanced DataView)\n\t\t\tthis.m = utils.MemoryView( data.data );\n\t\t\t\n\t\t\t// Make a seperate MemoryView for the ram, and store the original ram\n\t\t\tthis.staticmem = this.m.getUint16( 0x0E );\n\t\t\tthis.ram = utils.MemoryView( this.m, 0, this.staticmem );\n\t\t\tthis.origram = this.m.getUint8Array( 0, this.staticmem );\n\n\t\t\t// Cache the game signature\n\t\t\tlet signature = ''\n\t\t\tlet i = 0\n\t\t\twhile ( i < 0x1E )\n\t\t\t{\n\t\t\t\tsignature += ( this.origram[i] < 0x10 ? '0' : '' ) + this.origram[i++].toString( 16 )\n\t\t\t}\n\t\t\tthis.signature = signature\n\n\t\t\t// Handle loading and clearing autosaves\n\t\t\tlet autorestored\n\t\t\tconst Dialog = this.options.Dialog\n\t\t\tif ( Dialog )\n\t\t\t{\n\t\t\t\tif ( this.options.clear_vm_autosave )\n\t\t\t\t{\n\t\t\t\t\tDialog.autosave_write( signature, null )\n\t\t\t\t}\n\t\t\t\telse if ( this.options.do_vm_autosave )\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tconst snapshot = Dialog.autosave_read( signature )\n\t\t\t\t\t\tif ( snapshot )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.do_autorestore( snapshot )\n\t\t\t\t\t\t\tautorestored = 1\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (ex)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.log('Autorestore failed, deleting it: ' + ex)\n\t\t\t\t\t\tDialog.autosave_write( signature, null )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Initiate the engine, run, and wait for our first Glk event\n\t\t\tif ( !autorestored )\n\t\t\t{\n\t\t\t\tthis.restart();\n\t\t\t\tthis.run();\n\t\t\t}\n\t\t\tif ( !this.quit )\n\t\t\t{\n\t\t\t\tthis.glk_event = new Glk.RefStruct();\n\t\t\t\tif ( !this.glk_blocking_call )\n\t\t\t\t{\n\t\t\t\t\tGlk.glk_select( this.glk_event );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.glk_event.push_field( this.glk_blocking_call );\n\t\t\t\t}\n\t\t\t}\n\t\t\tGlk.update()\n\t\t}\n\t\tcatch ( e )\n\t\t{\n\t\t\tGlk.fatal_error( e );\n\t\t\tconsole.log( e );\n\t\t}\n\t},\n\n\tresume: function( resumearg )\n\t{\n\t\tvar Glk = this.Glk,\n\t\tglk_event = this.glk_event,\n\t\tevent_type,\n\t\trun;\n\t\t\n\t\ttry\n\t\t{\n\t\t\tevent_type = glk_event.get_field( 0 );\n\t\t\t\n\t\t\t// Process the event\n\t\t\tif ( event_type === 2 )\n\t\t\t{\n\t\t\t\tthis.handle_char_input( glk_event.get_field( 2 ) );\n\t\t\t\trun = 1;\n\t\t\t}\n\t\t\tif ( event_type === 3 )\n\t\t\t{\n\t\t\t\tthis.handle_line_input( glk_event.get_field( 2 ), glk_event.get_field( 3 ) );\n\t\t\t\trun = 1;\n\t\t\t}\n\n\t\t\t// Arrange events\n\t\t\tif ( event_type === 5 )\n\t\t\t{\n\t\t\t\tthis.update_screen_size()\n\t\t\t}\n\n\t\t\t// glk_fileref_create_by_prompt handler\n\t\t\tif ( event_type === 'fileref_create_by_prompt' )\n\t\t\t{\n\t\t\t\trun = this.handle_create_fileref( resumearg );\n\t\t\t}\n\t\t\t\n\t\t\tthis.glk_blocking_call = null;\n\t\t\tif ( run )\n\t\t\t{\n\t\t\t\tthis.run();\n\t\t\t}\n\t\t\t\n\t\t\t// Wait for another event\n\t\t\tif ( !this.quit )\n\t\t\t{\n\t\t\t\tthis.glk_event = new Glk.RefStruct();\n\t\t\t\tif ( !this.glk_blocking_call )\n\t\t\t\t{\n\t\t\t\t\tGlk.glk_select( this.glk_event );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.glk_event.push_field( this.glk_blocking_call );\n\t\t\t\t}\n\t\t\t}\n\t\t\tGlk.update()\n\t\t}\n\t\tcatch ( e )\n\t\t{\n\t\t\tGlk.fatal_error( e );\n\t\t\tconsole.log( e );\n\t\t}\n\t},\n\t\n\tget_signature: function()\n\t{\n\t\treturn this.signature\n\t},\n\n\t// Run\n\trun: function()\n\t{\n\t\tvar pc,\n\t\tresult;\n\n\t\t// Stop when ordered to\n\t\tthis.stop = 0;\n\t\twhile ( !this.stop )\n\t\t{\n\t\t\tpc = this.pc;\n\t\t\tif ( !this.jit[pc] )\n\t\t\t{\n\t\t\t\tthis.compile();\n\t\t\t}\n\t\t\tresult = this.jit[pc]( this );\n\n\t\t\t// Return from a VM func if the JIT function returned a result\n\t\t\tif ( !isNaN( result ) )\n\t\t\t{\n\t\t\t\tthis.ret( result );\n\t\t\t}\n\t\t}\n\t},\n\n\t// Compile a JIT routine\n\tcompile: function()\n\t{\n\t\tvar context = this.disassemble();\n\t\t\n\t\t// Compile the routine with new Function()\n\t\tthis.jit[context.pc] = new Function( 'e', '' + context );\n\n\t\tif ( context.pc < this.staticmem )\n\t\t{\n\t\t\tthis.log( 'Caching a JIT function in dynamic memory: ' + context.pc );\n\t\t}\n\t},\n\n},\n\nVM = utils.Class.subClass( utils.extend(\n\tapi,\n\trequire( './zvm/runtime.js' ),\n\trequire( './zvm/text.js' ),\n\trequire( './zvm/io.js' ),\n\trequire( './zvm/disassembler.js' )\n) );\n\nmodule.exports = VM;\n", "/*\n\nZVM Glk dispatch layer\n======================\n\nCopyright (c) 2017 The ifvms.js team\nMIT licenced\nhttps://github.com/curiousdannii/ifvms.js\n\n*/\n\nconst dummyArgInt = {\n\tserialize: () => ({}),\n}\n\nclass ZVMDispatch\n{\n\tconstructor()\n\t{\n\t\tthis.class_map = {\n\t\t\t'fileref': {},\n\t\t\t'stream': {},\n\t\t\t'window': {},\n\t\t}\n\t\tthis.last_used_id = 101\n\t}\n\n\tcheck_autosave()\n\t{\n\t\treturn !this.vm.glk_blocking_call\n\t}\n\n\tclass_obj_from_id( clas, val )\n\t{\n\t\treturn this.class_map[clas][val]\n\t}\n\n\tclass_register( clas, obj, usedisprock )\n\t{\n\t\tif ( usedisprock )\n\t\t{\n\t\t\tif ( obj.disprock !== usedisprock )\n\t\t\t{\n\t\t\t\tthrow new Error( 'class_register: object is not already registered' )\n\t\t\t}\n\t\t\tif ( this.last_used_id <= usedisprock )\n\t\t\t{\n\t\t\t\tthis.last_used_id = usedisprock + 1\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ( obj.disprock )\n\t\t\t{\n\t\t\t\tthrow new Error( 'class_register: object is already registered' )\n\t\t\t}\n\t\t\tobj.disprock = this.last_used_id++\n\t\t}\n\t\tthis.class_map[clas][obj.disprock] = obj\n\t}\n\n\tclass_unregister( clas, obj )\n\t{\n\t\tif ( !obj.disprock || this.class_map[clas][obj.disprock] == null )\n\t\t{\n\t\t\tthrow new Error( 'class_unregister: object is not registered' )\n\t\t}\n\t\tdelete this.class_map[clas][obj.disprock]\n\t\tobj.disprock = null\n\t}\n\n\tget_retained_array( arr )\n\t{\n\t\treturn {\n\t\t\targ: dummyArgInt,\n\t\t\tarr: arr.slice(),\n\t\t\tlen: arr.length,\n\t\t}\n\t}\n\n\tprepare_resume()\n\t{}\n\n\tretain_array()\n\t{}\n\n\tset_vm( vm )\n\t{\n\t\tthis.vm = vm\n\t}\n\n\tunretain_array()\n\t{}\n}\n\n// Export the class and an instance\nif ( typeof module === 'object' && module.exports )\n{\n\tmodule.exports = ZVMDispatch\n}\nif ( typeof window !== 'undefined' )\n{\n\twindow.GiDispa = new ZVMDispatch()\n}", "// Export ZVM engine\n\nimport ZVM from '../upstream/ifvms.js/src/zvm.js'\nimport ZVMDispatch from '../upstream/ifvms.js/src/zvm/dispatch.js'\n\nexport {ZVM, ZVMDispatch}"],
  "mappings": "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",
  "names": []
}

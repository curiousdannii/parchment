{
  "version": 3,
  "sources": ["../../src/upstream/emglken/build/tads.js"],
  "sourcesContent": ["\nvar Module = (() => {\n  var _scriptName = import.meta.url;\n  \n  return (\nasync function(moduleArg = {}) {\n  var moduleRtn;\n\n// include: shell.js\n// The Module object: Our interface to the outside world. We import\n// and export values on it. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(moduleArg) => Promise<Module>\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to check if Module already exists (e.g. case 3 above).\n// Substitution will be replaced with actual code on later stage of the build,\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nvar Module = moduleArg;\n\n// Set up the promise that indicates the Module is initialized\nvar readyPromiseResolve, readyPromiseReject;\n\nvar readyPromise = new Promise((resolve, reject) => {\n  readyPromiseResolve = resolve;\n  readyPromiseReject = reject;\n});\n\n// Determine the runtime environment we are in. You can customize this by\n// setting the ENVIRONMENT setting at compile time (see settings.js).\n// Attempt to auto-detect the environment\n;\n\nvar ENVIRONMENT_IS_WORKER = typeof WorkerGlobalScope != \"undefined\";\n\n// N.b. Electron.js environment is simultaneously a NODE-environment, but\n// also a web environment.\n;\n\nif (ENVIRONMENT_IS_NODE) {\n  // `require()` is no-op in an ESM module, use `createRequire()` to construct\n  // the require()` function.  This is only necessary for multi-environment\n  // builds, `-sENVIRONMENT=node` emits a static import declaration instead.\n  // TODO: Swap all `require()`'s with `import()`'s?\n  const {createRequire} = await import(\"module\");\n  let dirname = import.meta.url;\n  if (dirname.startsWith(\"data:\")) {\n    dirname = \"/\";\n  }\n  /** @suppress{duplicate} */ var require = createRequire(dirname);\n}\n\n// --pre-jses are emitted after the Module integration code, so that they can\n// refer to Module (if they choose; they can also define Module)\n// include: /src/src/preamble.js\n/*\n\nEmglken preamble\n================\n\nCopyright (c) 2024 Dannii Willis\nMIT licenced\nhttps://github.com/curiousdannii/emglken\n\n*/ // Make eslint happy\n/* eslint no-unused-vars: \"off\" */ /* global callMain, Module */ let Dialog;\n\nlet GlkOte;\n\nlet glkote_event_data;\n\n// eslint-disable-next-line prefer-const\nlet glkote_event_ready = () => {};\n\n// Our main start function\n// We depart from the Quixe standard in these ways:\n// - `options.arguments` must be set in order to play a storyfile\n// - no longer receives the storyfile - the Dialog library will handle loading it\nModule[\"start\"] = function(options) {\n  Dialog = options.Dialog;\n  if (!Dialog.async) {\n    throw new Error(\"Emglken requires an async Dialog library\");\n  }\n  GlkOte = options.GlkOte;\n  options.accept = accept;\n  callMain(options.arguments);\n  GlkOte.init(options);\n};\n\nfunction accept(data) {\n  if (glkote_event_data) {\n    console.warn(\"Already have GlkOte event when next event arrives\");\n  }\n  glkote_event_data = data;\n  glkote_event_ready();\n}\n\n// Log output\n//Module['print'] = console.log\n// In single-file mode new URL constructor won't work\nModule[\"locateFile\"] = function(filename) {\n  try {\n    return new URL(filename, import.meta.url).href;\n  } catch {\n    return filename;\n  }\n};\n\n// end include: /src/src/preamble.js\n// Sometimes an existing Module object exists with properties\n// meant to overwrite the default module functionality. Here\n// we collect those properties and reapply _after_ we configure\n// the current environment's defaults to avoid having to be so\n// defensive during initialization.\nvar moduleOverrides = Object.assign({}, Module);\n\nvar arguments_ = [];\n\nvar thisProgram = \"./this.program\";\n\nvar quit_ = (status, toThrow) => {\n  throw toThrow;\n};\n\n// `/` should be present at the end if `scriptDirectory` is not empty\nvar scriptDirectory = \"\";\n\nfunction locateFile(path) {\n  if (Module[\"locateFile\"]) {\n    return Module[\"locateFile\"](path, scriptDirectory);\n  }\n  return scriptDirectory + path;\n}\n\n// Hooks that are implemented differently in different runtime environments.\nvar readAsync, readBinary;\n\nif (ENVIRONMENT_IS_NODE) {\n  // These modules will usually be used on Node.js. Load them eagerly to avoid\n  // the complexity of lazy-loading.\n  var fs = require(\"fs\");\n  var nodePath = require(\"path\");\n  // EXPORT_ES6 + ENVIRONMENT_IS_NODE always requires use of import.meta.url,\n  // since there's no way getting the current absolute path of the module when\n  // support for that is not available.\n  if (!import.meta.url.startsWith(\"data:\")) {\n    scriptDirectory = nodePath.dirname(require(\"url\").fileURLToPath(import.meta.url)) + \"/\";\n  }\n  // include: node_shell_read.js\n  readBinary = filename => {\n    // We need to re-wrap `file://` strings to URLs.\n    filename = isFileURI(filename) ? new URL(filename) : filename;\n    var ret = fs.readFileSync(filename);\n    return ret;\n  };\n  readAsync = async (filename, binary = true) => {\n    // See the comment in the `readBinary` function.\n    filename = isFileURI(filename) ? new URL(filename) : filename;\n    var ret = fs.readFileSync(filename, binary ? undefined : \"utf8\");\n    return ret;\n  };\n  // end include: node_shell_read.js\n  if (!Module[\"thisProgram\"] && process.argv.length > 1) {\n    thisProgram = process.argv[1].replace(/\\\\/g, \"/\");\n  }\n  arguments_ = process.argv.slice(2);\n  // MODULARIZE will export the module in the proper place outside, we don't need to export here\n  quit_ = (status, toThrow) => {\n    process.exitCode = status;\n    throw toThrow;\n  };\n} else // Note that this includes Node.js workers when relevant (pthreads is enabled).\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\n// ENVIRONMENT_IS_NODE.\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n  if (ENVIRONMENT_IS_WORKER) {\n    // Check worker, not web, since window could be polyfilled\n    scriptDirectory = self.location.href;\n  } else if (typeof document != \"undefined\" && document.currentScript) {\n    // web\n    scriptDirectory = document.currentScript.src;\n  }\n  // When MODULARIZE, this JS may be executed later, after document.currentScript\n  // is gone, so we saved it, and we use it here instead of any other info.\n  if (_scriptName) {\n    scriptDirectory = _scriptName;\n  }\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\n  // otherwise, slice off the final part of the url to find the script directory.\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\n  // and scriptDirectory will correctly be replaced with an empty string.\n  // If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),\n  // they are removed because they could contain a slash.\n  if (scriptDirectory.startsWith(\"blob:\")) {\n    scriptDirectory = \"\";\n  } else {\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1);\n  }\n  {\n    // include: web_or_worker_shell_read.js\n    readAsync = async url => {\n      var response = await fetch(url, {\n        credentials: \"same-origin\"\n      });\n      if (response.ok) {\n        return response.arrayBuffer();\n      }\n      throw new Error(response.status + \" : \" + response.url);\n    };\n  }\n} else // end include: web_or_worker_shell_read.js\n{}\n\nvar out = console.log.bind(console);\n\nvar err = console.error.bind(console);\n\n// Merge back in the overrides\nObject.assign(Module, moduleOverrides);\n\n// Free the object hierarchy contained in the overrides, this lets the GC\n// reclaim data used.\nmoduleOverrides = null;\n\n// Emit code to handle expected values on the Module object. This applies Module.x\n// to the proper local x. This has two benefits: first, we only emit it if it is\n// expected to arrive, and second, by using a local everywhere else that can be\n// minified.\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\n// end include: shell.js\n// include: preamble.js\n// === Preamble library stuff ===\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\nvar wasmBinary = Module[\"wasmBinary\"];\n\n// Wasm globals\nvar wasmMemory;\n\n//========================================\n// Runtime essentials\n//========================================\n// whether we are quitting the application. no code should run after this.\n// set in exit() and abort()\nvar ABORT = false;\n\n// set by exit() and abort().  Passed to 'onExit' handler.\n// NOTE: This is also used as the process return code code in shell environments\n// but only when noExitRuntime is false.\nvar EXITSTATUS;\n\n// Memory management\nvar /** @type {!Int8Array} */ HEAP8, /** @type {!Uint8Array} */ HEAPU8, /** @type {!Int16Array} */ HEAP16, /** @type {!Uint16Array} */ HEAPU16, /** @type {!Int32Array} */ HEAP32, /** @type {!Uint32Array} */ HEAPU32, /** @type {!Float32Array} */ HEAPF32, /** @type {!Float64Array} */ HEAPF64;\n\n// include: runtime_shared.js\nfunction updateMemoryViews() {\n  var b = wasmMemory.buffer;\n  HEAP8 = new Int8Array(b);\n  HEAP16 = new Int16Array(b);\n  HEAPU8 = new Uint8Array(b);\n  HEAPU16 = new Uint16Array(b);\n  HEAP32 = new Int32Array(b);\n  HEAPU32 = new Uint32Array(b);\n  HEAPF32 = new Float32Array(b);\n  HEAPF64 = new Float64Array(b);\n}\n\n// end include: runtime_shared.js\n// include: runtime_stack_check.js\n// end include: runtime_stack_check.js\nvar __ATPRERUN__ = [];\n\n// functions called before the runtime is initialized\nvar __ATINIT__ = [];\n\n// functions called during startup\nvar __ATMAIN__ = [];\n\n// functions called when main() is to be run\nvar __ATEXIT__ = [];\n\n// functions called during shutdown\nvar __ATPOSTRUN__ = [];\n\n// functions called after the main() is called\nvar runtimeInitialized = false;\n\nvar runtimeExited = false;\n\nfunction preRun() {\n  callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n  runtimeInitialized = true;\n  callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction preMain() {\n  callRuntimeCallbacks(__ATMAIN__);\n}\n\nfunction exitRuntime() {\n  ___funcs_on_exit();\n  // Native atexit() functions\n  callRuntimeCallbacks(__ATEXIT__);\n  flush_NO_FILESYSTEM();\n  runtimeExited = true;\n}\n\nfunction postRun() {\n  callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnInit(cb) {\n  __ATINIT__.unshift(cb);\n}\n\n// include: runtime_math.js\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\n// end include: runtime_math.js\n// A counter of dependencies for calling run(). If we need to\n// do asynchronous work before running, increment this and\n// decrement it. Incrementing must happen in a place like\n// Module.preRun (used by emcc to add file preloading).\n// Note that you can add dependencies in preRun, even though\n// it happens right before run - run will be postponed until\n// the dependencies are met.\nvar runDependencies = 0;\n\nvar dependenciesFulfilled = null;\n\nfunction addRunDependency(id) {\n  runDependencies++;\n}\n\nfunction removeRunDependency(id) {\n  runDependencies--;\n  if (runDependencies == 0) {\n    if (dependenciesFulfilled) {\n      var callback = dependenciesFulfilled;\n      dependenciesFulfilled = null;\n      callback();\n    }\n  }\n}\n\n/** @param {string|number=} what */ function abort(what) {\n  what = \"Aborted(\" + what + \")\";\n  // TODO(sbc): Should we remove printing and leave it up to whoever\n  // catches the exception?\n  err(what);\n  ABORT = true;\n  what += \". Build with -sASSERTIONS for more info.\";\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\n  // exception, which means we'd run destructors on it. We need the error to\n  // simply make the program stop.\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\n  // a trap or not based on a hidden field within the object. So at the moment\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\n  // allows this in the wasm spec.\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\n  // definition for WebAssembly.RuntimeError claims it takes no arguments even\n  // though it can.\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\n  /** @suppress {checkTypes} */ var e = new WebAssembly.RuntimeError(what);\n  readyPromiseReject(e);\n  // Throw the error whether or not MODULARIZE is set because abort is used\n  // in code paths apart from instantiation where an exception is expected\n  // to be thrown when abort is called.\n  throw e;\n}\n\n// include: memoryprofiler.js\n// end include: memoryprofiler.js\n// include: URIUtils.js\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\nvar dataURIPrefix = \"data:application/octet-stream;base64,\";\n\n/**\n * Indicates whether filename is a base64 data URI.\n * @noinline\n */ var isDataURI = filename => filename.startsWith(dataURIPrefix);\n\n/**\n * Indicates whether filename is delivered via file protocol (as opposed to http/https)\n * @noinline\n */ var isFileURI = filename => filename.startsWith(\"file://\");\n\n// end include: URIUtils.js\n// include: runtime_exceptions.js\n// end include: runtime_exceptions.js\nfunction findWasmBinary() {\n  if (Module[\"locateFile\"]) {\n    var f = \"tads.wasm\";\n    if (!isDataURI(f)) {\n      return locateFile(f);\n    }\n    return f;\n  }\n  // Use bundler-friendly `new URL(..., import.meta.url)` pattern; works in browsers too.\n  return new URL(\"tads.wasm\", import.meta.url).href;\n}\n\nvar wasmBinaryFile;\n\nfunction getBinarySync(file) {\n  if (file == wasmBinaryFile && wasmBinary) {\n    return new Uint8Array(wasmBinary);\n  }\n  if (readBinary) {\n    return readBinary(file);\n  }\n  throw \"both async and sync fetching of the wasm failed\";\n}\n\nasync function getWasmBinary(binaryFile) {\n  // If we don't have the binary yet, load it asynchronously using readAsync.\n  if (!wasmBinary) {\n    // Fetch the binary using readAsync\n    try {\n      var response = await readAsync(binaryFile);\n      return new Uint8Array(response);\n    } catch {}\n  }\n  // Otherwise, getBinarySync should be able to get it synchronously\n  return getBinarySync(binaryFile);\n}\n\nasync function instantiateArrayBuffer(binaryFile, imports) {\n  try {\n    var binary = await getWasmBinary(binaryFile);\n    var instance = await WebAssembly.instantiate(binary, imports);\n    return instance;\n  } catch (reason) {\n    err(`failed to asynchronously prepare wasm: ${reason}`);\n    abort(reason);\n  }\n}\n\nasync function instantiateAsync(binary, binaryFile, imports) {\n  if (!binary && typeof WebAssembly.instantiateStreaming == \"function\" && !isDataURI(binaryFile) && // Avoid instantiateStreaming() on Node.js environment for now, as while\n  // Node.js v18.1.0 implements it, it does not have a full fetch()\n  // implementation yet.\n  // Reference:\n  //   https://github.com/emscripten-core/emscripten/pull/16917\n  !ENVIRONMENT_IS_NODE && typeof fetch == \"function\") {\n    try {\n      var response = fetch(binaryFile, {\n        credentials: \"same-origin\"\n      });\n      var instantiationResult = await WebAssembly.instantiateStreaming(response, imports);\n      return instantiationResult;\n    } catch (reason) {\n      // We expect the most common failure cause to be a bad MIME type for the binary,\n      // in which case falling back to ArrayBuffer instantiation should work.\n      err(`wasm streaming compile failed: ${reason}`);\n      err(\"falling back to ArrayBuffer instantiation\");\n    }\n  }\n  return instantiateArrayBuffer(binaryFile, imports);\n}\n\nfunction getWasmImports() {\n  // prepare imports\n  return {\n    \"a\": wasmImports\n  };\n}\n\n// Create the wasm instance.\n// Receives the wasm imports, returns the exports.\nasync function createWasm() {\n  // Load the wasm module and create an instance of using native support in the JS engine.\n  // handle a generated wasm instance, receiving its exports and\n  // performing other necessary setup\n  /** @param {WebAssembly.Module=} module*/ function receiveInstance(instance, module) {\n    wasmExports = instance.exports;\n    wasmExports = Asyncify.instrumentWasmExports(wasmExports);\n    wasmMemory = wasmExports[\"sa\"];\n    updateMemoryViews();\n    wasmTable = wasmExports[\"xa\"];\n    addOnInit(wasmExports[\"ta\"]);\n    removeRunDependency(\"wasm-instantiate\");\n    return wasmExports;\n  }\n  // wait for the pthread pool (if any)\n  addRunDependency(\"wasm-instantiate\");\n  // Prefer streaming instantiation if available.\n  function receiveInstantiationResult(result) {\n    // 'result' is a ResultObject object which has both the module and instance.\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\n    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\n    // When the regression is fixed, can restore the above PTHREADS-enabled path.\n    receiveInstance(result[\"instance\"]);\n  }\n  var info = getWasmImports();\n  wasmBinaryFile ??= findWasmBinary();\n  try {\n    var result = await instantiateAsync(wasmBinary, wasmBinaryFile, info);\n    receiveInstantiationResult(result);\n    return result;\n  } catch (e) {\n    // If instantiation fails, reject the module ready promise.\n    readyPromiseReject(e);\n    return;\n  }\n}\n\n// Globals used by JS i64 conversions (see makeSetValue)\nvar tempDouble;\n\nvar tempI64;\n\n// include: runtime_debug.js\n// end include: runtime_debug.js\n// === Body ===\n// end include: preamble.js\nclass ExitStatus {\n  name=\"ExitStatus\";\n  constructor(status) {\n    this.message = `Program terminated with exit(${status})`;\n    this.status = status;\n  }\n}\n\nvar callRuntimeCallbacks = callbacks => {\n  while (callbacks.length > 0) {\n    // Pass the module as the first argument.\n    callbacks.shift()(Module);\n  }\n};\n\nvar stackRestore = val => __emscripten_stack_restore(val);\n\nvar stackSave = () => _emscripten_stack_get_current();\n\nvar ___call_sighandler = (fp, sig) => (a1 => dynCall_vi(fp, a1))(sig);\n\nvar exceptionLast = 0;\n\nclass ExceptionInfo {\n  // excPtr - Thrown object pointer to wrap. Metadata pointer is calculated from it.\n  constructor(excPtr) {\n    this.excPtr = excPtr;\n    this.ptr = excPtr - 24;\n  }\n  set_type(type) {\n    HEAPU32[(((this.ptr) + (4)) >> 2)] = type;\n  }\n  get_type() {\n    return HEAPU32[(((this.ptr) + (4)) >> 2)];\n  }\n  set_destructor(destructor) {\n    HEAPU32[(((this.ptr) + (8)) >> 2)] = destructor;\n  }\n  get_destructor() {\n    return HEAPU32[(((this.ptr) + (8)) >> 2)];\n  }\n  set_caught(caught) {\n    caught = caught ? 1 : 0;\n    HEAP8[(this.ptr) + (12)] = caught;\n  }\n  get_caught() {\n    return HEAP8[(this.ptr) + (12)] != 0;\n  }\n  set_rethrown(rethrown) {\n    rethrown = rethrown ? 1 : 0;\n    HEAP8[(this.ptr) + (13)] = rethrown;\n  }\n  get_rethrown() {\n    return HEAP8[(this.ptr) + (13)] != 0;\n  }\n  // Initialize native structure fields. Should be called once after allocated.\n  init(type, destructor) {\n    this.set_adjusted_ptr(0);\n    this.set_type(type);\n    this.set_destructor(destructor);\n  }\n  set_adjusted_ptr(adjustedPtr) {\n    HEAPU32[(((this.ptr) + (16)) >> 2)] = adjustedPtr;\n  }\n  get_adjusted_ptr() {\n    return HEAPU32[(((this.ptr) + (16)) >> 2)];\n  }\n}\n\nvar ___resumeException = ptr => {\n  if (!exceptionLast) {\n    exceptionLast = ptr;\n  }\n  throw exceptionLast;\n};\n\nvar setTempRet0 = val => __emscripten_tempret_set(val);\n\nvar findMatchingCatch = args => {\n  var thrown = exceptionLast;\n  if (!thrown) {\n    // just pass through the null ptr\n    setTempRet0(0);\n    return 0;\n  }\n  var info = new ExceptionInfo(thrown);\n  info.set_adjusted_ptr(thrown);\n  var thrownType = info.get_type();\n  if (!thrownType) {\n    // just pass through the thrown ptr\n    setTempRet0(0);\n    return thrown;\n  }\n  // can_catch receives a **, add indirection\n  // The different catch blocks are denoted by different types.\n  // Due to inheritance, those types may not precisely match the\n  // type of the thrown object. Find one which matches, and\n  // return the type of the catch block which should be called.\n  for (var caughtType of args) {\n    if (caughtType === 0 || caughtType === thrownType) {\n      // Catch all clause matched or exactly the same type is caught\n      break;\n    }\n    var adjusted_ptr_addr = info.ptr + 16;\n    if (___cxa_can_catch(caughtType, thrownType, adjusted_ptr_addr)) {\n      setTempRet0(caughtType);\n      return thrown;\n    }\n  }\n  setTempRet0(thrownType);\n  return thrown;\n};\n\nvar ___cxa_find_matching_catch_2 = () => findMatchingCatch([]);\n\nvar uncaughtExceptionCount = 0;\n\nvar ___cxa_throw = (ptr, type, destructor) => {\n  var info = new ExceptionInfo(ptr);\n  // Initialize ExceptionInfo content after it was allocated in __cxa_allocate_exception.\n  info.init(type, destructor);\n  exceptionLast = ptr;\n  uncaughtExceptionCount++;\n  throw exceptionLast;\n};\n\nvar UTF8Decoder = new TextDecoder;\n\n/**\n     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\n     * emscripten HEAP, returns a copy of that string as a Javascript String object.\n     *\n     * @param {number} ptr\n     * @param {number=} maxBytesToRead - An optional length that specifies the\n     *   maximum number of bytes to read. You can omit this parameter to scan the\n     *   string until the first 0 byte. If maxBytesToRead is passed, and the string\n     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\n     *   string will cut short at that byte index (i.e. maxBytesToRead will not\n     *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\n     *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\n     *   JS JIT optimizations off, so it is worth to consider consistently using one\n     * @return {string}\n     */ var UTF8ToString = (ptr, maxBytesToRead) => {\n  if (!ptr) return \"\";\n  var maxPtr = ptr + maxBytesToRead;\n  for (var end = ptr; !(end >= maxPtr) && HEAPU8[end]; ) ++end;\n  return UTF8Decoder.decode(HEAPU8.subarray(ptr, end));\n};\n\nvar SYSCALLS = {\n  varargs: undefined,\n  getStr(ptr) {\n    var ret = UTF8ToString(ptr);\n    return ret;\n  }\n};\n\nfunction ___syscall_fcntl64(fd, cmd, varargs) {\n  SYSCALLS.varargs = varargs;\n  return 0;\n}\n\nvar lengthBytesUTF8 = str => {\n  var len = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n    // unit, not a Unicode code point of the character! So decode\n    // UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var c = str.charCodeAt(i);\n    // possibly a lead surrogate\n    if (c <= 127) {\n      len++;\n    } else if (c <= 2047) {\n      len += 2;\n    } else if (c >= 55296 && c <= 57343) {\n      len += 4;\n      ++i;\n    } else {\n      len += 3;\n    }\n  }\n  return len;\n};\n\nvar stringToUTF8Array = (str, heap, outIdx, maxBytesToWrite) => {\n  // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\n  // undefined and false each don't write out any bytes.\n  if (!(maxBytesToWrite > 0)) return 0;\n  var startIdx = outIdx;\n  var endIdx = outIdx + maxBytesToWrite - 1;\n  // -1 for string null terminator.\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n    // unit, not a Unicode code point of the character! So decode\n    // UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\n    // and https://www.ietf.org/rfc/rfc2279.txt\n    // and https://tools.ietf.org/html/rfc3629\n    var u = str.charCodeAt(i);\n    // possibly a lead surrogate\n    if (u >= 55296 && u <= 57343) {\n      var u1 = str.charCodeAt(++i);\n      u = 65536 + ((u & 1023) << 10) | (u1 & 1023);\n    }\n    if (u <= 127) {\n      if (outIdx >= endIdx) break;\n      heap[outIdx++] = u;\n    } else if (u <= 2047) {\n      if (outIdx + 1 >= endIdx) break;\n      heap[outIdx++] = 192 | (u >> 6);\n      heap[outIdx++] = 128 | (u & 63);\n    } else if (u <= 65535) {\n      if (outIdx + 2 >= endIdx) break;\n      heap[outIdx++] = 224 | (u >> 12);\n      heap[outIdx++] = 128 | ((u >> 6) & 63);\n      heap[outIdx++] = 128 | (u & 63);\n    } else {\n      if (outIdx + 3 >= endIdx) break;\n      heap[outIdx++] = 240 | (u >> 18);\n      heap[outIdx++] = 128 | ((u >> 12) & 63);\n      heap[outIdx++] = 128 | ((u >> 6) & 63);\n      heap[outIdx++] = 128 | (u & 63);\n    }\n  }\n  // Null-terminate the pointer to the buffer.\n  heap[outIdx] = 0;\n  return outIdx - startIdx;\n};\n\nvar stringToUTF8 = (str, outPtr, maxBytesToWrite) => stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n\nvar ___syscall_getcwd = (buf, size) => {};\n\nvar ___syscall_getdents64 = (fd, dirp, count) => {};\n\nfunction ___syscall_ioctl(fd, op, varargs) {\n  SYSCALLS.varargs = varargs;\n  return 0;\n}\n\nvar ___syscall_lstat64 = (path, buf) => {};\n\nvar ___syscall_mkdirat = (dirfd, path, mode) => {};\n\nvar ___syscall_newfstatat = (dirfd, path, buf, flags) => {};\n\nfunction ___syscall_openat(dirfd, path, flags, varargs) {\n  SYSCALLS.varargs = varargs;\n}\n\nvar ___syscall_readlinkat = (dirfd, path, buf, bufsize) => {};\n\nvar ___syscall_rmdir = path => {};\n\nvar ___syscall_stat64 = (path, buf) => {};\n\nvar __abort_js = () => abort(\"\");\n\nvar __emscripten_memcpy_js = (dest, src, num) => HEAPU8.copyWithin(dest, src, src + num);\n\nvar runtimeKeepaliveCounter = 0;\n\nvar __emscripten_runtime_keepalive_clear = () => {\n  runtimeKeepaliveCounter = 0;\n};\n\nvar __emscripten_throw_longjmp = () => {\n  throw Infinity;\n};\n\nvar convertI32PairToI53Checked = (lo, hi) => ((hi + 2097152) >>> 0 < 4194305 - !!lo) ? (lo >>> 0) + hi * 4294967296 : NaN;\n\nfunction __gmtime_js(time_low, time_high, tmPtr) {\n  var time = convertI32PairToI53Checked(time_low, time_high);\n  var date = new Date(time * 1e3);\n  HEAP32[((tmPtr) >> 2)] = date.getUTCSeconds();\n  HEAP32[(((tmPtr) + (4)) >> 2)] = date.getUTCMinutes();\n  HEAP32[(((tmPtr) + (8)) >> 2)] = date.getUTCHours();\n  HEAP32[(((tmPtr) + (12)) >> 2)] = date.getUTCDate();\n  HEAP32[(((tmPtr) + (16)) >> 2)] = date.getUTCMonth();\n  HEAP32[(((tmPtr) + (20)) >> 2)] = date.getUTCFullYear() - 1900;\n  HEAP32[(((tmPtr) + (24)) >> 2)] = date.getUTCDay();\n  var start = Date.UTC(date.getUTCFullYear(), 0, 1, 0, 0, 0, 0);\n  var yday = ((date.getTime() - start) / (1e3 * 60 * 60 * 24)) | 0;\n  HEAP32[(((tmPtr) + (28)) >> 2)] = yday;\n}\n\nvar isLeapYear = year => year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n\nvar MONTH_DAYS_LEAP_CUMULATIVE = [ 0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335 ];\n\nvar MONTH_DAYS_REGULAR_CUMULATIVE = [ 0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334 ];\n\nvar ydayFromDate = date => {\n  var leap = isLeapYear(date.getFullYear());\n  var monthDaysCumulative = (leap ? MONTH_DAYS_LEAP_CUMULATIVE : MONTH_DAYS_REGULAR_CUMULATIVE);\n  var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1;\n  // -1 since it's days since Jan 1\n  return yday;\n};\n\nfunction __localtime_js(time_low, time_high, tmPtr) {\n  var time = convertI32PairToI53Checked(time_low, time_high);\n  var date = new Date(time * 1e3);\n  HEAP32[((tmPtr) >> 2)] = date.getSeconds();\n  HEAP32[(((tmPtr) + (4)) >> 2)] = date.getMinutes();\n  HEAP32[(((tmPtr) + (8)) >> 2)] = date.getHours();\n  HEAP32[(((tmPtr) + (12)) >> 2)] = date.getDate();\n  HEAP32[(((tmPtr) + (16)) >> 2)] = date.getMonth();\n  HEAP32[(((tmPtr) + (20)) >> 2)] = date.getFullYear() - 1900;\n  HEAP32[(((tmPtr) + (24)) >> 2)] = date.getDay();\n  var yday = ydayFromDate(date) | 0;\n  HEAP32[(((tmPtr) + (28)) >> 2)] = yday;\n  HEAP32[(((tmPtr) + (36)) >> 2)] = -(date.getTimezoneOffset() * 60);\n  // Attention: DST is in December in South, and some regions don't have DST at all.\n  var start = new Date(date.getFullYear(), 0, 1);\n  var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n  var winterOffset = start.getTimezoneOffset();\n  var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset)) | 0;\n  HEAP32[(((tmPtr) + (32)) >> 2)] = dst;\n}\n\nvar timers = {};\n\nvar handleException = e => {\n  // Certain exception types we do not treat as errors since they are used for\n  // internal control flow.\n  // 1. ExitStatus, which is thrown by exit()\n  // 2. \"unwind\", which is thrown by emscripten_unwind_to_js_event_loop() and others\n  //    that wish to return to JS event loop.\n  if (e instanceof ExitStatus || e == \"unwind\") {\n    return EXITSTATUS;\n  }\n  quit_(1, e);\n};\n\nvar keepRuntimeAlive = () => runtimeKeepaliveCounter > 0;\n\nvar _proc_exit = code => {\n  EXITSTATUS = code;\n  if (!keepRuntimeAlive()) {\n    ABORT = true;\n  }\n  quit_(code, new ExitStatus(code));\n};\n\n/** @suppress {duplicate } */ /** @param {boolean|number=} implicit */ var exitJS = (status, implicit) => {\n  EXITSTATUS = status;\n  if (!keepRuntimeAlive()) {\n    exitRuntime();\n  }\n  _proc_exit(status);\n};\n\nvar _exit = exitJS;\n\nvar maybeExit = () => {\n  if (runtimeExited) {\n    return;\n  }\n  if (!keepRuntimeAlive()) {\n    try {\n      _exit(EXITSTATUS);\n    } catch (e) {\n      handleException(e);\n    }\n  }\n};\n\nvar callUserCallback = func => {\n  if (runtimeExited || ABORT) {\n    return;\n  }\n  try {\n    func();\n    maybeExit();\n  } catch (e) {\n    handleException(e);\n  }\n};\n\nvar _emscripten_get_now = () => performance.now();\n\nvar __setitimer_js = (which, timeout_ms) => {\n  // First, clear any existing timer.\n  if (timers[which]) {\n    clearTimeout(timers[which].id);\n    delete timers[which];\n  }\n  // A timeout of zero simply cancels the current timeout so we have nothing\n  // more to do.\n  if (!timeout_ms) return 0;\n  var id = setTimeout(() => {\n    delete timers[which];\n    callUserCallback(() => __emscripten_timeout(which, _emscripten_get_now()));\n  }, timeout_ms);\n  timers[which] = {\n    id,\n    timeout_ms\n  };\n  return 0;\n};\n\nvar __tzset_js = (timezone, daylight, std_name, dst_name) => {\n  // TODO: Use (malleable) environment variables instead of system settings.\n  var currentYear = (new Date).getFullYear();\n  var winter = new Date(currentYear, 0, 1);\n  var summer = new Date(currentYear, 6, 1);\n  var winterOffset = winter.getTimezoneOffset();\n  var summerOffset = summer.getTimezoneOffset();\n  // Local standard timezone offset. Local standard time is not adjusted for\n  // daylight savings.  This code uses the fact that getTimezoneOffset returns\n  // a greater value during Standard Time versus Daylight Saving Time (DST).\n  // Thus it determines the expected output during Standard Time, and it\n  // compares whether the output of the given date the same (Standard) or less\n  // (DST).\n  var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\n  // timezone is specified as seconds west of UTC (\"The external variable\n  // `timezone` shall be set to the difference, in seconds, between\n  // Coordinated Universal Time (UTC) and local standard time.\"), the same\n  // as returned by stdTimezoneOffset.\n  // See http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html\n  HEAPU32[((timezone) >> 2)] = stdTimezoneOffset * 60;\n  HEAP32[((daylight) >> 2)] = Number(winterOffset != summerOffset);\n  var extractZone = timezoneOffset => {\n    // Why inverse sign?\n    // Read here https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getTimezoneOffset\n    var sign = timezoneOffset >= 0 ? \"-\" : \"+\";\n    var absOffset = Math.abs(timezoneOffset);\n    var hours = String(Math.floor(absOffset / 60)).padStart(2, \"0\");\n    var minutes = String(absOffset % 60).padStart(2, \"0\");\n    return `UTC${sign}${hours}${minutes}`;\n  };\n  var winterName = extractZone(winterOffset);\n  var summerName = extractZone(summerOffset);\n  if (summerOffset < winterOffset) {\n    // Northern hemisphere\n    stringToUTF8(winterName, std_name, 17);\n    stringToUTF8(summerName, dst_name, 17);\n  } else {\n    stringToUTF8(winterName, dst_name, 17);\n    stringToUTF8(summerName, std_name, 17);\n  }\n};\n\nvar _emscripten_date_now = () => Date.now();\n\nvar nowIsMonotonic = 1;\n\nvar checkWasiClock = clock_id => clock_id >= 0 && clock_id <= 3;\n\nfunction _clock_time_get(clk_id, ignored_precision_low, ignored_precision_high, ptime) {\n  var ignored_precision = convertI32PairToI53Checked(ignored_precision_low, ignored_precision_high);\n  if (!checkWasiClock(clk_id)) {\n    return 28;\n  }\n  var now;\n  // all wasi clocks but realtime are monotonic\n  if (clk_id === 0) {\n    now = _emscripten_date_now();\n  } else if (nowIsMonotonic) {\n    now = _emscripten_get_now();\n  } else {\n    return 52;\n  }\n  // \"now\" is in ms, and wasi times are in ns.\n  var nsec = Math.round(now * 1e3 * 1e3);\n  (tempI64 = [ nsec >>> 0, (tempDouble = nsec, (+(Math.abs(tempDouble))) >= 1 ? (tempDouble > 0 ? (+(Math.floor((tempDouble) / 4294967296))) >>> 0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble))) >>> 0)) / 4294967296))))) >>> 0) : 0) ], \n  HEAP32[((ptime) >> 2)] = tempI64[0], HEAP32[(((ptime) + (4)) >> 2)] = tempI64[1]);\n  return 0;\n}\n\nfunction writeBuffer(buffer, data) {\n  const ptr = _malloc(data.length);\n  HEAP8.set(data, ptr);\n  HEAP32[((buffer) >> 2)] = ptr;\n  HEAP32[(((buffer) + (4)) >> 2)] = data.length;\n}\n\nfunction writeBufferJSON(buffer, data) {\n  const json = JSON.stringify(data);\n  writeBuffer(buffer, encoder.encode(json));\n}\n\nvar _emglken_file_delete = function emglken_file_delete(path_ptr, path_len) {\n  return Asyncify.handleAsync(async () => {\n    const path = UTF8ToString(path_ptr, path_len);\n    await Dialog.delete(path);\n  });\n};\n\n_emglken_file_delete.isAsync = true;\n\nvar _emglken_file_exists = function emglken_file_exists(path_ptr, path_len) {\n  return Asyncify.handleAsync(async () => {\n    const path = UTF8ToString(path_ptr, path_len);\n    return Dialog.exists(path);\n  });\n};\n\n_emglken_file_exists.isAsync = true;\n\nvar _emglken_file_flush = function emglken_file_flush() {\n  return Asyncify.handleAsync(async () => {\n    await Dialog.write(emglken_files);\n    emglken_files = {};\n  });\n};\n\n_emglken_file_flush.isAsync = true;\n\nvar _emglken_file_read = function emglken_file_read(path_ptr, path_len, buffer) {\n  return Asyncify.handleAsync(async () => {\n    const path = UTF8ToString(path_ptr, path_len);\n    const data = await Dialog.read(path);\n    if (data) {\n      writeBuffer(buffer, data);\n      return true;\n    }\n    return false;\n  });\n};\n\n_emglken_file_read.isAsync = true;\n\nfunction _emglken_file_write_buffer(path_ptr, path_len, buf_ptr, buf_len) {\n  const path = UTF8ToString(path_ptr, path_len);\n  const data = HEAP8.subarray(buf_ptr, buf_ptr + buf_len);\n  emglken_files[path] = data;\n}\n\nfunction _emglken_get_dirs(buffer) {\n  const dirs = Dialog.get_dirs();\n  writeBufferJSON(buffer, dirs);\n}\n\nvar _emglken_get_glkote_event = function emglken_get_glkote_event(buffer) {\n  return Asyncify.handleAsync(async () => {\n    if (!glkote_event_data) {\n      await new Promise(resolve => {\n        glkote_event_ready = resolve;\n      });\n    }\n    writeBufferJSON(buffer, glkote_event_data);\n    glkote_event_data = null;\n  });\n};\n\n_emglken_get_glkote_event.isAsync = true;\n\nfunction _emglken_send_glkote_update(update_ptr, update_len) {\n  const obj = JSON.parse(UTF8ToString(update_ptr, update_len));\n  GlkOte.update(obj);\n}\n\nvar getHeapMax = () => // Stay one Wasm page short of 4GB: while e.g. Chrome is able to allocate\n// full 4GB Wasm memories, the size will wrap back to 0 bytes in Wasm side\n// for any code that deals with heap sizes, which would require special\n// casing all heap size related code to treat 0 specially.\n2147483648;\n\nvar alignMemory = (size, alignment) => Math.ceil(size / alignment) * alignment;\n\nvar growMemory = size => {\n  var b = wasmMemory.buffer;\n  var pages = ((size - b.byteLength + 65535) / 65536) | 0;\n  try {\n    // round size grow request up to wasm page size (fixed 64KB per spec)\n    wasmMemory.grow(pages);\n    // .grow() takes a delta compared to the previous size\n    updateMemoryViews();\n    return 1;\n  } /*success*/ catch (e) {}\n};\n\n// implicit 0 return to save code size (caller will cast \"undefined\" into 0\n// anyhow)\nvar _emscripten_resize_heap = requestedSize => {\n  var oldSize = HEAPU8.length;\n  // With CAN_ADDRESS_2GB or MEMORY64, pointers are already unsigned.\n  requestedSize >>>= 0;\n  // With multithreaded builds, races can happen (another thread might increase the size\n  // in between), so return a failure, and let the caller retry.\n  // Memory resize rules:\n  // 1.  Always increase heap size to at least the requested size, rounded up\n  //     to next page multiple.\n  // 2a. If MEMORY_GROWTH_LINEAR_STEP == -1, excessively resize the heap\n  //     geometrically: increase the heap size according to\n  //     MEMORY_GROWTH_GEOMETRIC_STEP factor (default +20%), At most\n  //     overreserve by MEMORY_GROWTH_GEOMETRIC_CAP bytes (default 96MB).\n  // 2b. If MEMORY_GROWTH_LINEAR_STEP != -1, excessively resize the heap\n  //     linearly: increase the heap size by at least\n  //     MEMORY_GROWTH_LINEAR_STEP bytes.\n  // 3.  Max size for the heap is capped at 2048MB-WASM_PAGE_SIZE, or by\n  //     MAXIMUM_MEMORY, or by ASAN limit, depending on which is smallest\n  // 4.  If we were unable to allocate as much memory, it may be due to\n  //     over-eager decision to excessively reserve due to (3) above.\n  //     Hence if an allocation fails, cut down on the amount of excess\n  //     growth, in an attempt to succeed to perform a smaller allocation.\n  // A limit is set for how much we can grow. We should not exceed that\n  // (the wasm binary specifies it, so if we tried, we'd fail anyhow).\n  var maxHeapSize = getHeapMax();\n  if (requestedSize > maxHeapSize) {\n    return false;\n  }\n  // Loop through potential heap size increases. If we attempt a too eager\n  // reservation that fails, cut down on the attempted size and reserve a\n  // smaller bump instead. (max 3 times, chosen somewhat arbitrarily)\n  for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n    var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\n    // ensure geometric growth\n    // but limit overreserving (default to capping at +96MB overgrowth at most)\n    overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n    var newSize = Math.min(maxHeapSize, alignMemory(Math.max(requestedSize, overGrownHeapSize), 65536));\n    var replacement = growMemory(newSize);\n    if (replacement) {\n      return true;\n    }\n  }\n  return false;\n};\n\nvar ENV = {};\n\nvar getExecutableName = () => thisProgram || \"./this.program\";\n\nvar getEnvStrings = () => {\n  if (!getEnvStrings.strings) {\n    // Default values.\n    // Browser language detection #8751\n    var lang = ((typeof navigator == \"object\" && navigator.languages && navigator.languages[0]) || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\n    var env = {\n      \"USER\": \"web_user\",\n      \"LOGNAME\": \"web_user\",\n      \"PATH\": \"/\",\n      \"PWD\": \"/\",\n      \"HOME\": \"/home/web_user\",\n      \"LANG\": lang,\n      \"_\": getExecutableName()\n    };\n    // Apply the user-provided values, if any.\n    for (var x in ENV) {\n      // x is a key in ENV; if ENV[x] is undefined, that means it was\n      // explicitly set to be so. We allow user code to do that to\n      // force variables with default values to remain unset.\n      if (ENV[x] === undefined) delete env[x]; else env[x] = ENV[x];\n    }\n    var strings = [];\n    for (var x in env) {\n      strings.push(`${x}=${env[x]}`);\n    }\n    getEnvStrings.strings = strings;\n  }\n  return getEnvStrings.strings;\n};\n\nvar stringToAscii = (str, buffer) => {\n  for (var i = 0; i < str.length; ++i) {\n    HEAP8[buffer++] = str.charCodeAt(i);\n  }\n  // Null-terminate the string\n  HEAP8[buffer] = 0;\n};\n\nvar _environ_get = (__environ, environ_buf) => {\n  var bufSize = 0;\n  getEnvStrings().forEach((string, i) => {\n    var ptr = environ_buf + bufSize;\n    HEAPU32[(((__environ) + (i * 4)) >> 2)] = ptr;\n    stringToAscii(string, ptr);\n    bufSize += string.length + 1;\n  });\n  return 0;\n};\n\nvar _environ_sizes_get = (penviron_count, penviron_buf_size) => {\n  var strings = getEnvStrings();\n  HEAPU32[((penviron_count) >> 2)] = strings.length;\n  var bufSize = 0;\n  strings.forEach(string => bufSize += string.length + 1);\n  HEAPU32[((penviron_buf_size) >> 2)] = bufSize;\n  return 0;\n};\n\nvar _fd_close = fd => 52;\n\nvar _fd_read = (fd, iov, iovcnt, pnum) => 52;\n\nfunction _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n  var offset = convertI32PairToI53Checked(offset_low, offset_high);\n  return 70;\n}\n\nvar printCharBuffers = [ null, [], [] ];\n\n/**\n     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\n     * array that contains uint8 values, returns a copy of that string as a\n     * Javascript String object.\n     * heapOrArray is either a regular array, or a JavaScript typed array view.\n     * @param {number=} idx\n     * @param {number=} maxBytesToRead\n     * @return {string}\n     */ var UTF8ArrayToString = (heapOrArray, idx = 0, maxBytesToRead = NaN) => {\n  var endIdx = idx + maxBytesToRead;\n  var endPtr = idx;\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on\n  // null terminator by itself.  Also, use the length info to avoid running tiny\n  // strings through TextDecoder, since .subarray() allocates garbage.\n  // (As a tiny code save trick, compare endPtr against endIdx using a negation,\n  // so that undefined/NaN means Infinity)\n  while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n  return UTF8Decoder.decode(heapOrArray.buffer ? heapOrArray.subarray(idx, endPtr) : new Uint8Array(heapOrArray.slice(idx, endPtr)));\n};\n\nvar printChar = (stream, curr) => {\n  var buffer = printCharBuffers[stream];\n  if (curr === 0 || curr === 10) {\n    (stream === 1 ? out : err)(UTF8ArrayToString(buffer));\n    buffer.length = 0;\n  } else {\n    buffer.push(curr);\n  }\n};\n\nvar flush_NO_FILESYSTEM = () => {\n  // flush anything remaining in the buffers during shutdown\n  _fflush(0);\n  if (printCharBuffers[1].length) printChar(1, 10);\n  if (printCharBuffers[2].length) printChar(2, 10);\n};\n\nvar _fd_write = (fd, iov, iovcnt, pnum) => {\n  // hack to support printf in SYSCALLS_REQUIRE_FILESYSTEM=0\n  var num = 0;\n  for (var i = 0; i < iovcnt; i++) {\n    var ptr = HEAPU32[((iov) >> 2)];\n    var len = HEAPU32[(((iov) + (4)) >> 2)];\n    iov += 8;\n    for (var j = 0; j < len; j++) {\n      printChar(fd, HEAPU8[ptr + j]);\n    }\n    num += len;\n  }\n  HEAPU32[((pnum) >> 2)] = num;\n  return 0;\n};\n\nvar initRandomFill = () => {\n  if (typeof crypto == \"object\" && typeof crypto[\"getRandomValues\"] == \"function\") {\n    // for modern web browsers\n    return view => crypto.getRandomValues(view);\n  } else if (ENVIRONMENT_IS_NODE) {\n    // for nodejs with or without crypto support included\n    try {\n      var crypto_module = require(\"crypto\");\n      var randomFillSync = crypto_module[\"randomFillSync\"];\n      if (randomFillSync) {\n        // nodejs with LTS crypto support\n        return view => crypto_module[\"randomFillSync\"](view);\n      }\n      // very old nodejs with the original crypto API\n      var randomBytes = crypto_module[\"randomBytes\"];\n      return view => (view.set(randomBytes(view.byteLength)), // Return the original view to match modern native implementations.\n      view);\n    } catch (e) {}\n  }\n  // we couldn't find a proper implementation, as Math.random() is not suitable for /dev/random, see emscripten-core/emscripten/pull/7096\n  abort(\"initRandomDevice\");\n};\n\nvar randomFill = view => (randomFill = initRandomFill())(view);\n\nvar _random_get = (buffer, size) => {\n  randomFill(HEAPU8.subarray(buffer, buffer + size));\n  return 0;\n};\n\nvar stackAlloc = sz => __emscripten_stack_alloc(sz);\n\nvar stringToUTF8OnStack = str => {\n  var size = lengthBytesUTF8(str) + 1;\n  var ret = stackAlloc(size);\n  stringToUTF8(str, ret, size);\n  return ret;\n};\n\n/** @type {WebAssembly.Table} */ var wasmTable;\n\nvar runAndAbortIfError = func => {\n  try {\n    return func();\n  } catch (e) {\n    abort(e);\n  }\n};\n\nvar runtimeKeepalivePush = () => {\n  runtimeKeepaliveCounter += 1;\n};\n\nvar runtimeKeepalivePop = () => {\n  runtimeKeepaliveCounter -= 1;\n};\n\nvar Asyncify = {\n  instrumentWasmImports(imports) {\n    var importPattern = /^(invoke_.*|__asyncjs__.*)$/;\n    for (let [x, original] of Object.entries(imports)) {\n      if (typeof original == \"function\") {\n        let isAsyncifyImport = original.isAsync || importPattern.test(x);\n      }\n    }\n  },\n  instrumentWasmExports(exports) {\n    var ret = {};\n    for (let [x, original] of Object.entries(exports)) {\n      if (typeof original == \"function\") {\n        ret[x] = (...args) => {\n          Asyncify.exportCallStack.push(x);\n          try {\n            return original(...args);\n          } finally {\n            if (!ABORT) {\n              var y = Asyncify.exportCallStack.pop();\n              Asyncify.maybeStopUnwind();\n            }\n          }\n        };\n      } else {\n        ret[x] = original;\n      }\n    }\n    return ret;\n  },\n  State: {\n    Normal: 0,\n    Unwinding: 1,\n    Rewinding: 2,\n    Disabled: 3\n  },\n  state: 0,\n  StackSize: 8192,\n  currData: null,\n  handleSleepReturnValue: 0,\n  exportCallStack: [],\n  callStackNameToId: {},\n  callStackIdToName: {},\n  callStackId: 0,\n  asyncPromiseHandlers: null,\n  sleepCallbacks: [],\n  getCallStackId(funcName) {\n    var id = Asyncify.callStackNameToId[funcName];\n    if (id === undefined) {\n      id = Asyncify.callStackId++;\n      Asyncify.callStackNameToId[funcName] = id;\n      Asyncify.callStackIdToName[id] = funcName;\n    }\n    return id;\n  },\n  maybeStopUnwind() {\n    if (Asyncify.currData && Asyncify.state === Asyncify.State.Unwinding && Asyncify.exportCallStack.length === 0) {\n      // We just finished unwinding.\n      // Be sure to set the state before calling any other functions to avoid\n      // possible infinite recursion here (For example in debug pthread builds\n      // the dbg() function itself can call back into WebAssembly to get the\n      // current pthread_self() pointer).\n      Asyncify.state = Asyncify.State.Normal;\n      runtimeKeepalivePush();\n      // Keep the runtime alive so that a re-wind can be done later.\n      runAndAbortIfError(_asyncify_stop_unwind);\n      if (typeof Fibers != \"undefined\") {\n        Fibers.trampoline();\n      }\n    }\n  },\n  whenDone() {\n    return new Promise((resolve, reject) => {\n      Asyncify.asyncPromiseHandlers = {\n        resolve,\n        reject\n      };\n    });\n  },\n  allocateData() {\n    // An asyncify data structure has three fields:\n    //  0  current stack pos\n    //  4  max stack pos\n    //  8  id of function at bottom of the call stack (callStackIdToName[id] == name of js function)\n    // The Asyncify ABI only interprets the first two fields, the rest is for the runtime.\n    // We also embed a stack in the same memory region here, right next to the structure.\n    // This struct is also defined as asyncify_data_t in emscripten/fiber.h\n    var ptr = _malloc(12 + Asyncify.StackSize);\n    Asyncify.setDataHeader(ptr, ptr + 12, Asyncify.StackSize);\n    Asyncify.setDataRewindFunc(ptr);\n    return ptr;\n  },\n  setDataHeader(ptr, stack, stackSize) {\n    HEAPU32[((ptr) >> 2)] = stack;\n    HEAPU32[(((ptr) + (4)) >> 2)] = stack + stackSize;\n  },\n  setDataRewindFunc(ptr) {\n    var bottomOfCallStack = Asyncify.exportCallStack[0];\n    var rewindId = Asyncify.getCallStackId(bottomOfCallStack);\n    HEAP32[(((ptr) + (8)) >> 2)] = rewindId;\n  },\n  getDataRewindFuncName(ptr) {\n    var id = HEAP32[(((ptr) + (8)) >> 2)];\n    var name = Asyncify.callStackIdToName[id];\n    return name;\n  },\n  getDataRewindFunc(name) {\n    var func = wasmExports[name];\n    return func;\n  },\n  doRewind(ptr) {\n    var name = Asyncify.getDataRewindFuncName(ptr);\n    var func = Asyncify.getDataRewindFunc(name);\n    // Once we have rewound and the stack we no longer need to artificially\n    // keep the runtime alive.\n    runtimeKeepalivePop();\n    return func();\n  },\n  handleSleep(startAsync) {\n    if (ABORT) return;\n    if (Asyncify.state === Asyncify.State.Normal) {\n      // Prepare to sleep. Call startAsync, and see what happens:\n      // if the code decided to call our callback synchronously,\n      // then no async operation was in fact begun, and we don't\n      // need to do anything.\n      var reachedCallback = false;\n      var reachedAfterCallback = false;\n      startAsync((handleSleepReturnValue = 0) => {\n        if (ABORT) return;\n        Asyncify.handleSleepReturnValue = handleSleepReturnValue;\n        reachedCallback = true;\n        if (!reachedAfterCallback) {\n          // We are happening synchronously, so no need for async.\n          return;\n        }\n        Asyncify.state = Asyncify.State.Rewinding;\n        runAndAbortIfError(() => _asyncify_start_rewind(Asyncify.currData));\n        if (typeof MainLoop != \"undefined\" && MainLoop.func) {\n          MainLoop.resume();\n        }\n        var asyncWasmReturnValue, isError = false;\n        try {\n          asyncWasmReturnValue = Asyncify.doRewind(Asyncify.currData);\n        } catch (err) {\n          asyncWasmReturnValue = err;\n          isError = true;\n        }\n        // Track whether the return value was handled by any promise handlers.\n        var handled = false;\n        if (!Asyncify.currData) {\n          // All asynchronous execution has finished.\n          // `asyncWasmReturnValue` now contains the final\n          // return value of the exported async WASM function.\n          // Note: `asyncWasmReturnValue` is distinct from\n          // `Asyncify.handleSleepReturnValue`.\n          // `Asyncify.handleSleepReturnValue` contains the return\n          // value of the last C function to have executed\n          // `Asyncify.handleSleep()`, where as `asyncWasmReturnValue`\n          // contains the return value of the exported WASM function\n          // that may have called C functions that\n          // call `Asyncify.handleSleep()`.\n          var asyncPromiseHandlers = Asyncify.asyncPromiseHandlers;\n          if (asyncPromiseHandlers) {\n            Asyncify.asyncPromiseHandlers = null;\n            (isError ? asyncPromiseHandlers.reject : asyncPromiseHandlers.resolve)(asyncWasmReturnValue);\n            handled = true;\n          }\n        }\n        if (isError && !handled) {\n          // If there was an error and it was not handled by now, we have no choice but to\n          // rethrow that error into the global scope where it can be caught only by\n          // `onerror` or `onunhandledpromiserejection`.\n          throw asyncWasmReturnValue;\n        }\n      });\n      reachedAfterCallback = true;\n      if (!reachedCallback) {\n        // A true async operation was begun; start a sleep.\n        Asyncify.state = Asyncify.State.Unwinding;\n        // TODO: reuse, don't alloc/free every sleep\n        Asyncify.currData = Asyncify.allocateData();\n        if (typeof MainLoop != \"undefined\" && MainLoop.func) {\n          MainLoop.pause();\n        }\n        runAndAbortIfError(() => _asyncify_start_unwind(Asyncify.currData));\n      }\n    } else if (Asyncify.state === Asyncify.State.Rewinding) {\n      // Stop a resume.\n      Asyncify.state = Asyncify.State.Normal;\n      runAndAbortIfError(_asyncify_stop_rewind);\n      _free(Asyncify.currData);\n      Asyncify.currData = null;\n      // Call all sleep callbacks now that the sleep-resume is all done.\n      Asyncify.sleepCallbacks.forEach(callUserCallback);\n    } else {\n      abort(`invalid state: ${Asyncify.state}`);\n    }\n    return Asyncify.handleSleepReturnValue;\n  },\n  handleAsync(startAsync) {\n    return Asyncify.handleSleep(wakeUp => {\n      // TODO: add error handling as a second param when handleSleep implements it.\n      startAsync().then(wakeUp);\n    });\n  }\n};\n\nlet emglken_files = {};\n\nconst encoder = new TextEncoder;\n\nvar wasmImports = {\n  /** @export */ ra: ___call_sighandler,\n  /** @export */ b: ___cxa_find_matching_catch_2,\n  /** @export */ qa: ___cxa_throw,\n  /** @export */ g: ___resumeException,\n  /** @export */ G: ___syscall_fcntl64,\n  /** @export */ pa: ___syscall_getcwd,\n  /** @export */ oa: ___syscall_getdents64,\n  /** @export */ na: ___syscall_ioctl,\n  /** @export */ ma: ___syscall_lstat64,\n  /** @export */ la: ___syscall_mkdirat,\n  /** @export */ ka: ___syscall_newfstatat,\n  /** @export */ F: ___syscall_openat,\n  /** @export */ ja: ___syscall_readlinkat,\n  /** @export */ ia: ___syscall_rmdir,\n  /** @export */ ha: ___syscall_stat64,\n  /** @export */ ba: __abort_js,\n  /** @export */ aa: __emscripten_memcpy_js,\n  /** @export */ $: __emscripten_runtime_keepalive_clear,\n  /** @export */ _: __emscripten_throw_longjmp,\n  /** @export */ J: __gmtime_js,\n  /** @export */ I: __localtime_js,\n  /** @export */ Z: __setitimer_js,\n  /** @export */ Y: __tzset_js,\n  /** @export */ L: _clock_time_get,\n  /** @export */ X: _emglken_file_delete,\n  /** @export */ W: _emglken_file_exists,\n  /** @export */ V: _emglken_file_flush,\n  /** @export */ U: _emglken_file_read,\n  /** @export */ T: _emglken_file_write_buffer,\n  /** @export */ S: _emglken_get_dirs,\n  /** @export */ R: _emglken_get_glkote_event,\n  /** @export */ Q: _emglken_send_glkote_update,\n  /** @export */ P: _emscripten_date_now,\n  /** @export */ B: _emscripten_get_now,\n  /** @export */ O: _emscripten_resize_heap,\n  /** @export */ ga: _environ_get,\n  /** @export */ fa: _environ_sizes_get,\n  /** @export */ N: _exit,\n  /** @export */ z: _fd_close,\n  /** @export */ ea: _fd_read,\n  /** @export */ K: _fd_seek,\n  /** @export */ C: _fd_write,\n  /** @export */ w: invoke_i,\n  /** @export */ e: invoke_ii,\n  /** @export */ j: invoke_iii,\n  /** @export */ f: invoke_iiii,\n  /** @export */ l: invoke_iiiii,\n  /** @export */ m: invoke_iiiiii,\n  /** @export */ o: invoke_iiiiiii,\n  /** @export */ p: invoke_iiiiiiii,\n  /** @export */ u: invoke_iiiiiiiii,\n  /** @export */ v: invoke_iiiiiiiiii,\n  /** @export */ r: invoke_iiiiiiiiiii,\n  /** @export */ A: invoke_iiiiiiiiiiii,\n  /** @export */ s: invoke_iiiiiiiiiiiiii,\n  /** @export */ E: invoke_iiiiiiiiiiiiiiii,\n  /** @export */ y: invoke_iiiiiiiiiiiiiiiiii,\n  /** @export */ H: invoke_iijj,\n  /** @export */ i: invoke_v,\n  /** @export */ c: invoke_vi,\n  /** @export */ d: invoke_vii,\n  /** @export */ a: invoke_viii,\n  /** @export */ k: invoke_viiii,\n  /** @export */ h: invoke_viiiii,\n  /** @export */ q: invoke_viiiiii,\n  /** @export */ D: invoke_viiiiiii,\n  /** @export */ t: invoke_viiiiiiii,\n  /** @export */ n: invoke_viiiiiiiii,\n  /** @export */ x: invoke_viiiiiiiiiii,\n  /** @export */ M: invoke_viiiiiiiiiiiiiii,\n  /** @export */ da: _proc_exit,\n  /** @export */ ca: _random_get\n};\n\nvar wasmExports;\n\ncreateWasm();\n\nvar ___wasm_call_ctors = () => (___wasm_call_ctors = wasmExports[\"ta\"])();\n\nvar _malloc = a0 => (_malloc = wasmExports[\"ua\"])(a0);\n\nvar _free = a0 => (_free = wasmExports[\"va\"])(a0);\n\nvar _main = Module[\"_main\"] = (a0, a1) => (_main = Module[\"_main\"] = wasmExports[\"wa\"])(a0, a1);\n\nvar ___funcs_on_exit = () => (___funcs_on_exit = wasmExports[\"ya\"])();\n\nvar _fflush = a0 => (_fflush = wasmExports[\"za\"])(a0);\n\nvar __emscripten_timeout = (a0, a1) => (__emscripten_timeout = wasmExports[\"Aa\"])(a0, a1);\n\nvar _setThrew = Module[\"_setThrew\"] = (a0, a1) => (_setThrew = Module[\"_setThrew\"] = wasmExports[\"Ba\"])(a0, a1);\n\nvar __emscripten_tempret_set = a0 => (__emscripten_tempret_set = wasmExports[\"Ca\"])(a0);\n\nvar __emscripten_stack_restore = a0 => (__emscripten_stack_restore = wasmExports[\"Da\"])(a0);\n\nvar __emscripten_stack_alloc = a0 => (__emscripten_stack_alloc = wasmExports[\"Ea\"])(a0);\n\nvar _emscripten_stack_get_current = () => (_emscripten_stack_get_current = wasmExports[\"Fa\"])();\n\nvar ___cxa_can_catch = (a0, a1, a2) => (___cxa_can_catch = wasmExports[\"Ga\"])(a0, a1, a2);\n\nvar dynCall_vi = Module[\"dynCall_vi\"] = (a0, a1) => (dynCall_vi = Module[\"dynCall_vi\"] = wasmExports[\"Ha\"])(a0, a1);\n\nvar dynCall_iii = Module[\"dynCall_iii\"] = (a0, a1, a2) => (dynCall_iii = Module[\"dynCall_iii\"] = wasmExports[\"Ia\"])(a0, a1, a2);\n\nvar dynCall_vii = Module[\"dynCall_vii\"] = (a0, a1, a2) => (dynCall_vii = Module[\"dynCall_vii\"] = wasmExports[\"Ja\"])(a0, a1, a2);\n\nvar dynCall_ii = Module[\"dynCall_ii\"] = (a0, a1) => (dynCall_ii = Module[\"dynCall_ii\"] = wasmExports[\"Ka\"])(a0, a1);\n\nvar dynCall_viiii = Module[\"dynCall_viiii\"] = (a0, a1, a2, a3, a4) => (dynCall_viiii = Module[\"dynCall_viiii\"] = wasmExports[\"La\"])(a0, a1, a2, a3, a4);\n\nvar dynCall_viiiii = Module[\"dynCall_viiiii\"] = (a0, a1, a2, a3, a4, a5) => (dynCall_viiiii = Module[\"dynCall_viiiii\"] = wasmExports[\"Ma\"])(a0, a1, a2, a3, a4, a5);\n\nvar dynCall_viiiiii = Module[\"dynCall_viiiiii\"] = (a0, a1, a2, a3, a4, a5, a6) => (dynCall_viiiiii = Module[\"dynCall_viiiiii\"] = wasmExports[\"Na\"])(a0, a1, a2, a3, a4, a5, a6);\n\nvar dynCall_viii = Module[\"dynCall_viii\"] = (a0, a1, a2, a3) => (dynCall_viii = Module[\"dynCall_viii\"] = wasmExports[\"Oa\"])(a0, a1, a2, a3);\n\nvar dynCall_v = Module[\"dynCall_v\"] = a0 => (dynCall_v = Module[\"dynCall_v\"] = wasmExports[\"Pa\"])(a0);\n\nvar dynCall_iiii = Module[\"dynCall_iiii\"] = (a0, a1, a2, a3) => (dynCall_iiii = Module[\"dynCall_iiii\"] = wasmExports[\"Qa\"])(a0, a1, a2, a3);\n\nvar dynCall_iijj = Module[\"dynCall_iijj\"] = (a0, a1, a2, a3, a4, a5) => (dynCall_iijj = Module[\"dynCall_iijj\"] = wasmExports[\"Ra\"])(a0, a1, a2, a3, a4, a5);\n\nvar dynCall_viiiiiii = Module[\"dynCall_viiiiiii\"] = (a0, a1, a2, a3, a4, a5, a6, a7) => (dynCall_viiiiiii = Module[\"dynCall_viiiiiii\"] = wasmExports[\"Sa\"])(a0, a1, a2, a3, a4, a5, a6, a7);\n\nvar dynCall_iiiiii = Module[\"dynCall_iiiiii\"] = (a0, a1, a2, a3, a4, a5) => (dynCall_iiiiii = Module[\"dynCall_iiiiii\"] = wasmExports[\"Ta\"])(a0, a1, a2, a3, a4, a5);\n\nvar dynCall_iiiii = Module[\"dynCall_iiiii\"] = (a0, a1, a2, a3, a4) => (dynCall_iiiii = Module[\"dynCall_iiiii\"] = wasmExports[\"Ua\"])(a0, a1, a2, a3, a4);\n\nvar dynCall_i = Module[\"dynCall_i\"] = a0 => (dynCall_i = Module[\"dynCall_i\"] = wasmExports[\"Va\"])(a0);\n\nvar dynCall_viiiiiiii = Module[\"dynCall_viiiiiiii\"] = (a0, a1, a2, a3, a4, a5, a6, a7, a8) => (dynCall_viiiiiiii = Module[\"dynCall_viiiiiiii\"] = wasmExports[\"Wa\"])(a0, a1, a2, a3, a4, a5, a6, a7, a8);\n\nvar dynCall_iiiiiiiii = Module[\"dynCall_iiiiiiiii\"] = (a0, a1, a2, a3, a4, a5, a6, a7, a8) => (dynCall_iiiiiiiii = Module[\"dynCall_iiiiiiiii\"] = wasmExports[\"Xa\"])(a0, a1, a2, a3, a4, a5, a6, a7, a8);\n\nvar dynCall_viiiiiiiii = Module[\"dynCall_viiiiiiiii\"] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) => (dynCall_viiiiiiiii = Module[\"dynCall_viiiiiiiii\"] = wasmExports[\"Ya\"])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n\nvar dynCall_iiiiiii = Module[\"dynCall_iiiiiii\"] = (a0, a1, a2, a3, a4, a5, a6) => (dynCall_iiiiiii = Module[\"dynCall_iiiiiii\"] = wasmExports[\"Za\"])(a0, a1, a2, a3, a4, a5, a6);\n\nvar dynCall_viiiiiiiiiii = Module[\"dynCall_viiiiiiiiiii\"] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) => (dynCall_viiiiiiiiiii = Module[\"dynCall_viiiiiiiiiii\"] = wasmExports[\"_a\"])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n\nvar dynCall_iiiiiiiiii = Module[\"dynCall_iiiiiiiiii\"] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) => (dynCall_iiiiiiiiii = Module[\"dynCall_iiiiiiiiii\"] = wasmExports[\"$a\"])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n\nvar dynCall_iiiiiiii = Module[\"dynCall_iiiiiiii\"] = (a0, a1, a2, a3, a4, a5, a6, a7) => (dynCall_iiiiiiii = Module[\"dynCall_iiiiiiii\"] = wasmExports[\"ab\"])(a0, a1, a2, a3, a4, a5, a6, a7);\n\nvar dynCall_iiiiiiiiiii = Module[\"dynCall_iiiiiiiiiii\"] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) => (dynCall_iiiiiiiiiii = Module[\"dynCall_iiiiiiiiiii\"] = wasmExports[\"bb\"])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n\nvar dynCall_iiiiiiiiiiiiii = Module[\"dynCall_iiiiiiiiiiiiii\"] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) => (dynCall_iiiiiiiiiiiiii = Module[\"dynCall_iiiiiiiiiiiiii\"] = wasmExports[\"cb\"])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);\n\nvar dynCall_iiiiiiiiiiiiiiiiii = Module[\"dynCall_iiiiiiiiiiiiiiiiii\"] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17) => (dynCall_iiiiiiiiiiiiiiiiii = Module[\"dynCall_iiiiiiiiiiiiiiiiii\"] = wasmExports[\"db\"])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);\n\nvar dynCall_viiiiiiiiiiiiiii = Module[\"dynCall_viiiiiiiiiiiiiii\"] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) => (dynCall_viiiiiiiiiiiiiii = Module[\"dynCall_viiiiiiiiiiiiiii\"] = wasmExports[\"eb\"])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);\n\nvar dynCall_iiiiiiiiiiii = Module[\"dynCall_iiiiiiiiiiii\"] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) => (dynCall_iiiiiiiiiiii = Module[\"dynCall_iiiiiiiiiiii\"] = wasmExports[\"fb\"])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n\nvar dynCall_iiiiiiiiiiiiiiii = Module[\"dynCall_iiiiiiiiiiiiiiii\"] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) => (dynCall_iiiiiiiiiiiiiiii = Module[\"dynCall_iiiiiiiiiiiiiiii\"] = wasmExports[\"gb\"])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);\n\nvar _asyncify_start_unwind = a0 => (_asyncify_start_unwind = wasmExports[\"hb\"])(a0);\n\nvar _asyncify_stop_unwind = () => (_asyncify_stop_unwind = wasmExports[\"ib\"])();\n\nvar _asyncify_start_rewind = a0 => (_asyncify_start_rewind = wasmExports[\"jb\"])(a0);\n\nvar _asyncify_stop_rewind = () => (_asyncify_stop_rewind = wasmExports[\"kb\"])();\n\nfunction invoke_vi(index, a1) {\n  var sp = stackSave();\n  try {\n    dynCall_vi(index, a1);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiiii(index, a1, a2, a3, a4, a5) {\n  var sp = stackSave();\n  try {\n    dynCall_viiiii(index, a1, a2, a3, a4, a5);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viii(index, a1, a2, a3) {\n  var sp = stackSave();\n  try {\n    dynCall_viii(index, a1, a2, a3);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_vii(index, a1, a2) {\n  var sp = stackSave();\n  try {\n    dynCall_vii(index, a1, a2);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iii(index, a1, a2) {\n  var sp = stackSave();\n  try {\n    return dynCall_iii(index, a1, a2);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_ii(index, a1) {\n  var sp = stackSave();\n  try {\n    return dynCall_ii(index, a1);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiii(index, a1, a2, a3, a4) {\n  var sp = stackSave();\n  try {\n    dynCall_viiii(index, a1, a2, a3, a4);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiiiii(index, a1, a2, a3, a4, a5, a6) {\n  var sp = stackSave();\n  try {\n    dynCall_viiiiii(index, a1, a2, a3, a4, a5, a6);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_v(index) {\n  var sp = stackSave();\n  try {\n    dynCall_v(index);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiii(index, a1, a2, a3) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiii(index, a1, a2, a3);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {\n  var sp = stackSave();\n  try {\n    dynCall_viiiiiii(index, a1, a2, a3, a4, a5, a6, a7);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_i(index) {\n  var sp = stackSave();\n  try {\n    return dynCall_i(index);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiii(index, a1, a2, a3, a4, a5) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiiiii(index, a1, a2, a3, a4, a5);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiii(index, a1, a2, a3, a4) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiiii(index, a1, a2, a3, a4);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiiii(index, a1, a2, a3, a4, a5, a6) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiiiiii(index, a1, a2, a3, a4, a5, a6);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n  var sp = stackSave();\n  try {\n    dynCall_viiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n  var sp = stackSave();\n  try {\n    dynCall_viiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiiiiiii(index, a1, a2, a3, a4, a5, a6, a7);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiiiiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n  var sp = stackSave();\n  try {\n    dynCall_viiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) {\n  var sp = stackSave();\n  try {\n    dynCall_viiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iijj(index, a1, a2, a3, a4, a5) {\n  var sp = stackSave();\n  try {\n    return dynCall_iijj(index, a1, a2, a3, a4, a5);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\n// include: postamble.js\n// === Auto-generated postamble setup entry stuff ===\nvar calledRun;\n\ndependenciesFulfilled = function runCaller() {\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\n  if (!calledRun) run();\n  if (!calledRun) dependenciesFulfilled = runCaller;\n};\n\n// try this again later, after new deps are fulfilled\nfunction callMain(args = []) {\n  var entryFunction = _main;\n  args.unshift(thisProgram);\n  var argc = args.length;\n  var argv = stackAlloc((argc + 1) * 4);\n  var argv_ptr = argv;\n  args.forEach(arg => {\n    HEAPU32[((argv_ptr) >> 2)] = stringToUTF8OnStack(arg);\n    argv_ptr += 4;\n  });\n  HEAPU32[((argv_ptr) >> 2)] = 0;\n  try {\n    var ret = entryFunction(argc, argv);\n    // if we're not running an evented main loop, it's time to exit\n    exitJS(ret, /* implicit = */ true);\n    return ret;\n  } catch (e) {\n    return handleException(e);\n  }\n}\n\nfunction run(args = arguments_) {\n  if (runDependencies > 0) {\n    return;\n  }\n  preRun();\n  // a preRun added a dependency, run will be called later\n  if (runDependencies > 0) {\n    return;\n  }\n  function doRun() {\n    // run may have just been called through dependencies being fulfilled just in this very frame,\n    // or while the async setStatus time below was happening\n    if (calledRun) return;\n    calledRun = true;\n    Module[\"calledRun\"] = true;\n    if (ABORT) return;\n    initRuntime();\n    preMain();\n    readyPromiseResolve(Module);\n    if (shouldRunNow) callMain(args);\n    postRun();\n  }\n  {\n    doRun();\n  }\n}\n\n// shouldRunNow refers to calling main(), not run().\nvar shouldRunNow = false;\n\nrun();\n\n// end include: postamble.js\n// include: postamble_modularize.js\n// In MODULARIZE mode we wrap the generated code in a factory function\n// and return either the Module itself, or a promise of the module.\n// We assign to the `moduleRtn` global here and configure closure to see\n// this as and extern so it won't get minified.\nmoduleRtn = readyPromise;\n\n\n  return moduleRtn;\n}\n);\n})();\nexport default Module;\n"],
  "mappings": "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",
  "names": ["Module", "_scriptName", "moduleArg", "moduleRtn", "readyPromiseResolve", "readyPromiseReject", "readyPromise", "resolve", "reject", "ENVIRONMENT_IS_WORKER", "require", "Dialog", "GlkOte", "glkote_event_data", "glkote_event_ready", "options", "accept", "callMain", "data", "filename", "moduleOverrides", "arguments_", "thisProgram", "quit_", "status", "toThrow", "scriptDirectory", "locateFile", "path", "readAsync", "readBinary", "fs", "nodePath", "url", "response", "out", "err", "wasmBinary", "wasmMemory", "ABORT", "EXITSTATUS", "HEAP8", "HEAPU8", "HEAP16", "HEAPU16", "HEAP32", "HEAPU32", "HEAPF32", "HEAPF64", "updateMemoryViews", "b", "__ATPRERUN__", "__ATINIT__", "__ATMAIN__", "__ATEXIT__", "__ATPOSTRUN__", "runtimeInitialized", "runtimeExited", "preRun", "callRuntimeCallbacks", "initRuntime", "preMain", "exitRuntime", "___funcs_on_exit", "flush_NO_FILESYSTEM", "postRun", "addOnInit", "cb", "runDependencies", "dependenciesFulfilled", "addRunDependency", "id", "removeRunDependency", "callback", "abort", "what", "dataURIPrefix", "isDataURI", "isFileURI", "findWasmBinary", "f", "wasmBinaryFile", "getBinarySync", "file", "getWasmBinary", "binaryFile", "instantiateArrayBuffer", "imports", "binary", "instance", "reason", "instantiateAsync", "instantiationResult", "getWasmImports", "wasmImports", "createWasm", "receiveInstance", "module", "wasmExports", "Asyncify", "wasmTable", "receiveInstantiationResult", "result", "info", "e", "tempDouble", "tempI64", "ExitStatus", "callbacks", "stackRestore", "val", "__emscripten_stack_restore", "stackSave", "_emscripten_stack_get_current", "___call_sighandler", "fp", "sig", "a1", "dynCall_vi", "exceptionLast", "ExceptionInfo", "excPtr", "type", "destructor", "caught", "rethrown", "adjustedPtr", "___resumeException", "ptr", "setTempRet0", "__emscripten_tempret_set", "findMatchingCatch", "args", "thrown", "thrownType", "caughtType", "adjusted_ptr_addr", "___cxa_can_catch", "___cxa_find_matching_catch_2", "uncaughtExceptionCount", "___cxa_throw", "UTF8Decoder", "UTF8ToString", "maxBytesToRead", "maxPtr", "end", "SYSCALLS", "ret", "___syscall_fcntl64", "fd", "cmd", "varargs", "lengthBytesUTF8", "str", "len", "i", "c", "stringToUTF8Array", "heap", "outIdx", "maxBytesToWrite", "startIdx", "endIdx", "u", "u1", "stringToUTF8", "outPtr", "___syscall_getcwd", "buf", "size", "___syscall_getdents64", "dirp", "count", "___syscall_ioctl", "op", "___syscall_lstat64", "___syscall_mkdirat", "dirfd", "mode", "___syscall_newfstatat", "flags", "___syscall_openat", "___syscall_readlinkat", "bufsize", "___syscall_rmdir", "___syscall_stat64", "__abort_js", "__emscripten_memcpy_js", "dest", "src", "num", "runtimeKeepaliveCounter", "__emscripten_runtime_keepalive_clear", "__emscripten_throw_longjmp", "convertI32PairToI53Checked", "lo", "hi", "__gmtime_js", "time_low", "time_high", "tmPtr", "time", "date", "start", "yday", "isLeapYear", "year", "MONTH_DAYS_LEAP_CUMULATIVE", "MONTH_DAYS_REGULAR_CUMULATIVE", "ydayFromDate", "leap", "monthDaysCumulative", "__localtime_js", "summerOffset", "winterOffset", "dst", "timers", "handleException", "keepRuntimeAlive", "_proc_exit", "code", "exitJS", "implicit", "_exit", "maybeExit", "callUserCallback", "func", "_emscripten_get_now", "__setitimer_js", "which", "timeout_ms", "__emscripten_timeout", "__tzset_js", "timezone", "daylight", "std_name", "dst_name", "currentYear", "winter", "summer", "stdTimezoneOffset", "extractZone", "timezoneOffset", "sign", "absOffset", "hours", "minutes", "winterName", "summerName", "_emscripten_date_now", "nowIsMonotonic", "checkWasiClock", "clock_id", "_clock_time_get", "clk_id", "ignored_precision_low", "ignored_precision_high", "ptime", "ignored_precision", "now", "nsec", "writeBuffer", "buffer", "_malloc", "writeBufferJSON", "json", "encoder", "_emglken_file_delete", "path_ptr", "path_len", "_emglken_file_exists", "_emglken_file_flush", "emglken_files", "_emglken_file_read", "_emglken_file_write_buffer", "buf_ptr", "buf_len", "_emglken_get_dirs", "dirs", "_emglken_get_glkote_event", "_emglken_send_glkote_update", "update_ptr", "update_len", "obj", "getHeapMax", "alignMemory", "alignment", "growMemory", "pages", "_emscripten_resize_heap", "requestedSize", "oldSize", "maxHeapSize", "cutDown", "overGrownHeapSize", "newSize", "replacement", "ENV", "getExecutableName", "getEnvStrings", "lang", "env", "x", "strings", "stringToAscii", "_environ_get", "__environ", "environ_buf", "bufSize", "string", "_environ_sizes_get", "penviron_count", "penviron_buf_size", "_fd_close", "_fd_read", "iov", "iovcnt", "pnum", "_fd_seek", "offset_low", "offset_high", "whence", "newOffset", "offset", "printCharBuffers", "UTF8ArrayToString", "heapOrArray", "idx", "endPtr", "printChar", "stream", "curr", "_fflush", "_fd_write", "j", "initRandomFill", "view", "crypto_module", "randomFillSync", "randomBytes", "randomFill", "_random_get", "stackAlloc", "sz", "__emscripten_stack_alloc", "stringToUTF8OnStack", "runAndAbortIfError", "runtimeKeepalivePush", "runtimeKeepalivePop", "importPattern", "original", "isAsyncifyImport", "exports", "y", "funcName", "_asyncify_stop_unwind", "stack", "stackSize", "bottomOfCallStack", "rewindId", "name", "startAsync", "reachedCallback", "reachedAfterCallback", "handleSleepReturnValue", "_asyncify_start_rewind", "asyncWasmReturnValue", "isError", "handled", "asyncPromiseHandlers", "_asyncify_start_unwind", "_asyncify_stop_rewind", "_free", "wakeUp", "invoke_i", "invoke_ii", "invoke_iii", "invoke_iiii", "invoke_iiiii", "invoke_iiiiii", "invoke_iiiiiii", "invoke_iiiiiiii", "invoke_iiiiiiiii", "invoke_iiiiiiiiii", "invoke_iiiiiiiiiii", "invoke_iiiiiiiiiiii", "invoke_iiiiiiiiiiiiii", "invoke_iiiiiiiiiiiiiiii", "invoke_iiiiiiiiiiiiiiiiii", "invoke_iijj", "invoke_v", "invoke_vi", "invoke_vii", "invoke_viii", "invoke_viiii", "invoke_viiiii", "invoke_viiiiii", "invoke_viiiiiii", "invoke_viiiiiiii", "invoke_viiiiiiiii", "invoke_viiiiiiiiiii", "invoke_viiiiiiiiiiiiiii", "___wasm_call_ctors", "a0", "_main", "_setThrew", "a2", "dynCall_iii", "dynCall_vii", "dynCall_ii", "dynCall_viiii", "a3", "a4", "dynCall_viiiii", "a5", "dynCall_viiiiii", "a6", "dynCall_viii", "dynCall_v", "dynCall_iiii", "dynCall_iijj", "dynCall_viiiiiii", "a7", "dynCall_iiiiii", "dynCall_iiiii", "dynCall_i", "dynCall_viiiiiiii", "a8", "dynCall_iiiiiiiii", "dynCall_viiiiiiiii", "a9", "dynCall_iiiiiii", "dynCall_viiiiiiiiiii", "a10", "a11", "dynCall_iiiiiiiiii", "dynCall_iiiiiiii", "dynCall_iiiiiiiiiii", "dynCall_iiiiiiiiiiiiii", "a12", "a13", "dynCall_iiiiiiiiiiiiiiiiii", "a14", "a15", "a16", "a17", "dynCall_viiiiiiiiiiiiiii", "dynCall_iiiiiiiiiiii", "dynCall_iiiiiiiiiiiiiiii", "index", "sp", "calledRun", "runCaller", "run", "entryFunction", "argc", "argv", "argv_ptr", "arg", "doRun", "shouldRunNow", "tads_default"]
}

{
  "version": 3,
  "sources": ["../../src/upstream/emglken/build/tads.js"],
  "sourcesContent": ["// This code implements the `-sMODULARIZE` settings by taking the generated\n// JS program code (INNER_JS_CODE) and wrapping it in a factory function.\n\n// When targetting node and ES6 we use `await import ..` in the generated code\n// so the outer function needs to be marked as async.\nasync function Module(moduleArg = {}) {\n  var moduleRtn;\n\n// include: shell.js\n// include: minimum_runtime_check.js\n// end include: minimum_runtime_check.js\n// The Module object: Our interface to the outside world. We import\n// and export values on it. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(moduleArg) => Promise<Module>\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to check if Module already exists (e.g. case 3 above).\n// Substitution will be replaced with actual code on later stage of the build,\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nvar Module = moduleArg;\n\n// Determine the runtime environment we are in. You can customize this by\n// setting the ENVIRONMENT setting at compile time (see settings.js).\n// Attempt to auto-detect the environment\n;\n\n;\n\n// N.b. Electron.js environment is simultaneously a NODE-environment, but\n// also a web environment.\n;\n\nif (ENVIRONMENT_IS_NODE) {\n  // When building an ES module `require` is not normally available.\n  // We need to use `createRequire()` to construct the require()` function.\n  const {createRequire} = await import(\"module\");\n  /** @suppress{duplicate} */ var require = createRequire(import.meta.url);\n}\n\n// --pre-jses are emitted after the Module integration code, so that they can\n// refer to Module (if they choose; they can also define Module)\n// include: /src/src/preamble.js\n/*\n\nEmglken preamble\n================\n\nCopyright (c) 2024 Dannii Willis\nMIT licenced\nhttps://github.com/curiousdannii/emglken\n\n*/ // Make eslint happy\n/* eslint no-unused-vars: \"off\" */ /* global callMain, Module */ let Dialog;\n\nlet GlkOte;\n\nlet glkote_event_data;\n\n// eslint-disable-next-line prefer-const\nlet glkote_event_ready = () => {};\n\n// Our main start function\n// We depart from the Quixe standard in these ways:\n// - `options.arguments` must be set in order to play a storyfile\n// - no longer receives the storyfile - the Dialog library will handle loading it\nModule[\"start\"] = function(options) {\n  Dialog = options.Dialog;\n  if (!Dialog.async) {\n    throw new Error(\"Emglken requires an async Dialog library\");\n  }\n  GlkOte = options.GlkOte;\n  options.accept = accept;\n  callMain(options.arguments);\n  GlkOte.init(options);\n};\n\nfunction accept(data) {\n  if (glkote_event_data) {\n    console.warn(\"Already have GlkOte event when next event arrives\");\n  }\n  glkote_event_data = data;\n  glkote_event_ready();\n}\n\n// Log output\n//Module['print'] = console.log\n// In single-file mode new URL constructor won't work\nModule[\"locateFile\"] = function(filename) {\n  try {\n    return new URL(filename, import.meta.url).href;\n  } catch {\n    return filename;\n  }\n};\n\n// end include: /src/src/preamble.js\nvar arguments_ = [];\n\nvar thisProgram = \"./this.program\";\n\nvar quit_ = (status, toThrow) => {\n  throw toThrow;\n};\n\nvar _scriptName = import.meta.url;\n\n// `/` should be present at the end if `scriptDirectory` is not empty\nvar scriptDirectory = \"\";\n\nfunction locateFile(path) {\n  if (Module[\"locateFile\"]) {\n    return Module[\"locateFile\"](path, scriptDirectory);\n  }\n  return scriptDirectory + path;\n}\n\n// Hooks that are implemented differently in different runtime environments.\nvar readAsync, readBinary;\n\nif (ENVIRONMENT_IS_NODE) {\n  // These modules will usually be used on Node.js. Load them eagerly to avoid\n  // the complexity of lazy-loading.\n  var fs = require(\"fs\");\n  if (_scriptName.startsWith(\"file:\")) {\n    scriptDirectory = require(\"path\").dirname(require(\"url\").fileURLToPath(_scriptName)) + \"/\";\n  }\n  // include: node_shell_read.js\n  readBinary = filename => {\n    // We need to re-wrap `file://` strings to URLs.\n    filename = isFileURI(filename) ? new URL(filename) : filename;\n    var ret = fs.readFileSync(filename);\n    return ret;\n  };\n  readAsync = async (filename, binary = true) => {\n    // See the comment in the `readBinary` function.\n    filename = isFileURI(filename) ? new URL(filename) : filename;\n    var ret = fs.readFileSync(filename, binary ? undefined : \"utf8\");\n    return ret;\n  };\n  // end include: node_shell_read.js\n  if (process.argv.length > 1) {\n    thisProgram = process.argv[1].replace(/\\\\/g, \"/\");\n  }\n  arguments_ = process.argv.slice(2);\n  quit_ = (status, toThrow) => {\n    process.exitCode = status;\n    throw toThrow;\n  };\n} else // Note that this includes Node.js workers when relevant (pthreads is enabled).\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\n// ENVIRONMENT_IS_NODE.\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n  try {\n    scriptDirectory = new URL(\".\", _scriptName).href;\n  } catch {}\n  {\n    // include: web_or_worker_shell_read.js\n    readAsync = async url => {\n      var response = await fetch(url, {\n        credentials: \"same-origin\"\n      });\n      if (response.ok) {\n        return response.arrayBuffer();\n      }\n      throw new Error(response.status + \" : \" + response.url);\n    };\n  }\n} else {}\n\nvar out = console.log.bind(console);\n\nvar err = console.error.bind(console);\n\n// end include: shell.js\n// include: preamble.js\n// === Preamble library stuff ===\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\nvar wasmBinary;\n\n// Wasm globals\n//========================================\n// Runtime essentials\n//========================================\n// whether we are quitting the application. no code should run after this.\n// set in exit() and abort()\nvar ABORT = false;\n\n// set by exit() and abort().  Passed to 'onExit' handler.\n// NOTE: This is also used as the process return code code in shell environments\n// but only when noExitRuntime is false.\nvar EXITSTATUS;\n\n/**\n * Indicates whether filename is delivered via file protocol (as opposed to http/https)\n * @noinline\n */ var isFileURI = filename => filename.startsWith(\"file://\");\n\n// include: runtime_common.js\n// include: runtime_stack_check.js\n// end include: runtime_stack_check.js\n// include: runtime_exceptions.js\n// end include: runtime_exceptions.js\n// include: runtime_debug.js\n// end include: runtime_debug.js\nvar readyPromiseResolve, readyPromiseReject;\n\n// Memory management\nvar /** @type {!Int8Array} */ HEAP8, /** @type {!Uint8Array} */ HEAPU8, /** @type {!Int16Array} */ HEAP16, /** @type {!Uint16Array} */ HEAPU16, /** @type {!Int32Array} */ HEAP32, /** @type {!Uint32Array} */ HEAPU32, /** @type {!Float32Array} */ HEAPF32, /** @type {!Float64Array} */ HEAPF64;\n\n// BigInt64Array type is not correctly defined in closure\nvar /** not-@type {!BigInt64Array} */ HEAP64, /* BigUint64Array type is not correctly defined in closure\n/** not-@type {!BigUint64Array} */ HEAPU64;\n\nvar runtimeInitialized = false;\n\nvar runtimeExited = false;\n\nfunction updateMemoryViews() {\n  var b = wasmMemory.buffer;\n  HEAP8 = new Int8Array(b);\n  HEAP16 = new Int16Array(b);\n  HEAPU8 = new Uint8Array(b);\n  HEAPU16 = new Uint16Array(b);\n  HEAP32 = new Int32Array(b);\n  HEAPU32 = new Uint32Array(b);\n  HEAPF32 = new Float32Array(b);\n  HEAPF64 = new Float64Array(b);\n  HEAP64 = new BigInt64Array(b);\n  HEAPU64 = new BigUint64Array(b);\n}\n\n// include: memoryprofiler.js\n// end include: memoryprofiler.js\n// end include: runtime_common.js\nfunction preRun() {}\n\nfunction initRuntime() {\n  runtimeInitialized = true;\n  // No ATINITS hooks\n  wasmExports[\"ua\"]();\n}\n\nfunction preMain() {}\n\nfunction exitRuntime() {\n  // PThreads reuse the runtime from the main thread.\n  ___funcs_on_exit();\n  // Native atexit() functions\n  // Begin ATEXITS hooks\n  flush_NO_FILESYSTEM();\n  // End ATEXITS hooks\n  runtimeExited = true;\n}\n\nfunction postRun() {}\n\n/** @param {string|number=} what */ function abort(what) {\n  what = \"Aborted(\" + what + \")\";\n  // TODO(sbc): Should we remove printing and leave it up to whoever\n  // catches the exception?\n  err(what);\n  ABORT = true;\n  what += \". Build with -sASSERTIONS for more info.\";\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\n  // exception, which means we'd run destructors on it. We need the error to\n  // simply make the program stop.\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\n  // a trap or not based on a hidden field within the object. So at the moment\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\n  // allows this in the wasm spec.\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\n  // definition for WebAssembly.RuntimeError claims it takes no arguments even\n  // though it can.\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\n  /** @suppress {checkTypes} */ var e = new WebAssembly.RuntimeError(what);\n  readyPromiseReject?.(e);\n  // Throw the error whether or not MODULARIZE is set because abort is used\n  // in code paths apart from instantiation where an exception is expected\n  // to be thrown when abort is called.\n  throw e;\n}\n\nvar wasmBinaryFile;\n\nfunction findWasmBinary() {\n  if (Module[\"locateFile\"]) {\n    return locateFile(\"tads.wasm\");\n  }\n  // Use bundler-friendly `new URL(..., import.meta.url)` pattern; works in browsers too.\n  return new URL(\"tads.wasm\", import.meta.url).href;\n}\n\nfunction getBinarySync(file) {\n  if (file == wasmBinaryFile && wasmBinary) {\n    return new Uint8Array(wasmBinary);\n  }\n  if (readBinary) {\n    return readBinary(file);\n  }\n  // Throwing a plain string here, even though it not normally adviables since\n  // this gets turning into an `abort` in instantiateArrayBuffer.\n  throw \"both async and sync fetching of the wasm failed\";\n}\n\nasync function getWasmBinary(binaryFile) {\n  // If we don't have the binary yet, load it asynchronously using readAsync.\n  if (!wasmBinary) {\n    // Fetch the binary using readAsync\n    try {\n      var response = await readAsync(binaryFile);\n      return new Uint8Array(response);\n    } catch {}\n  }\n  // Otherwise, getBinarySync should be able to get it synchronously\n  return getBinarySync(binaryFile);\n}\n\nasync function instantiateArrayBuffer(binaryFile, imports) {\n  try {\n    var binary = await getWasmBinary(binaryFile);\n    var instance = await WebAssembly.instantiate(binary, imports);\n    return instance;\n  } catch (reason) {\n    err(`failed to asynchronously prepare wasm: ${reason}`);\n    abort(reason);\n  }\n}\n\nasync function instantiateAsync(binary, binaryFile, imports) {\n  if (!binary && !ENVIRONMENT_IS_NODE) {\n    try {\n      var response = fetch(binaryFile, {\n        credentials: \"same-origin\"\n      });\n      var instantiationResult = await WebAssembly.instantiateStreaming(response, imports);\n      return instantiationResult;\n    } catch (reason) {\n      // We expect the most common failure cause to be a bad MIME type for the binary,\n      // in which case falling back to ArrayBuffer instantiation should work.\n      err(`wasm streaming compile failed: ${reason}`);\n      err(\"falling back to ArrayBuffer instantiation\");\n    }\n  }\n  return instantiateArrayBuffer(binaryFile, imports);\n}\n\nfunction getWasmImports() {\n  // prepare imports\n  return {\n    \"a\": wasmImports\n  };\n}\n\n// Create the wasm instance.\n// Receives the wasm imports, returns the exports.\nasync function createWasm() {\n  // Load the wasm module and create an instance of using native support in the JS engine.\n  // handle a generated wasm instance, receiving its exports and\n  // performing other necessary setup\n  /** @param {WebAssembly.Module=} module*/ function receiveInstance(instance, module) {\n    wasmExports = instance.exports;\n    wasmExports = Asyncify.instrumentWasmExports(wasmExports);\n    assignWasmExports(wasmExports);\n    updateMemoryViews();\n    return wasmExports;\n  }\n  // Prefer streaming instantiation if available.\n  function receiveInstantiationResult(result) {\n    // 'result' is a ResultObject object which has both the module and instance.\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\n    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\n    // When the regression is fixed, can restore the above PTHREADS-enabled path.\n    return receiveInstance(result[\"instance\"]);\n  }\n  var info = getWasmImports();\n  wasmBinaryFile ??= findWasmBinary();\n  var result = await instantiateAsync(wasmBinary, wasmBinaryFile, info);\n  var exports = receiveInstantiationResult(result);\n  return exports;\n}\n\n// end include: preamble.js\n// Begin JS library code\nclass ExitStatus {\n  name=\"ExitStatus\";\n  constructor(status) {\n    this.message = `Program terminated with exit(${status})`;\n    this.status = status;\n  }\n}\n\nvar dynCalls = {};\n\nvar stackRestore = val => __emscripten_stack_restore(val);\n\nvar stackSave = () => _emscripten_stack_get_current();\n\nvar ___call_sighandler = (fp, sig) => (a1 => dynCall_vi(fp, a1))(sig);\n\nvar exceptionLast = 0;\n\nclass ExceptionInfo {\n  // excPtr - Thrown object pointer to wrap. Metadata pointer is calculated from it.\n  constructor(excPtr) {\n    this.excPtr = excPtr;\n    this.ptr = excPtr - 24;\n  }\n  set_type(type) {\n    HEAPU32[(((this.ptr) + (4)) >> 2)] = type;\n  }\n  get_type() {\n    return HEAPU32[(((this.ptr) + (4)) >> 2)];\n  }\n  set_destructor(destructor) {\n    HEAPU32[(((this.ptr) + (8)) >> 2)] = destructor;\n  }\n  get_destructor() {\n    return HEAPU32[(((this.ptr) + (8)) >> 2)];\n  }\n  set_caught(caught) {\n    caught = caught ? 1 : 0;\n    HEAP8[(this.ptr) + (12)] = caught;\n  }\n  get_caught() {\n    return HEAP8[(this.ptr) + (12)] != 0;\n  }\n  set_rethrown(rethrown) {\n    rethrown = rethrown ? 1 : 0;\n    HEAP8[(this.ptr) + (13)] = rethrown;\n  }\n  get_rethrown() {\n    return HEAP8[(this.ptr) + (13)] != 0;\n  }\n  // Initialize native structure fields. Should be called once after allocated.\n  init(type, destructor) {\n    this.set_adjusted_ptr(0);\n    this.set_type(type);\n    this.set_destructor(destructor);\n  }\n  set_adjusted_ptr(adjustedPtr) {\n    HEAPU32[(((this.ptr) + (16)) >> 2)] = adjustedPtr;\n  }\n  get_adjusted_ptr() {\n    return HEAPU32[(((this.ptr) + (16)) >> 2)];\n  }\n}\n\nvar setTempRet0 = val => __emscripten_tempret_set(val);\n\nvar findMatchingCatch = args => {\n  var thrown = exceptionLast;\n  if (!thrown) {\n    // just pass through the null ptr\n    setTempRet0(0);\n    return 0;\n  }\n  var info = new ExceptionInfo(thrown);\n  info.set_adjusted_ptr(thrown);\n  var thrownType = info.get_type();\n  if (!thrownType) {\n    // just pass through the thrown ptr\n    setTempRet0(0);\n    return thrown;\n  }\n  // can_catch receives a **, add indirection\n  // The different catch blocks are denoted by different types.\n  // Due to inheritance, those types may not precisely match the\n  // type of the thrown object. Find one which matches, and\n  // return the type of the catch block which should be called.\n  for (var caughtType of args) {\n    if (caughtType === 0 || caughtType === thrownType) {\n      // Catch all clause matched or exactly the same type is caught\n      break;\n    }\n    var adjusted_ptr_addr = info.ptr + 16;\n    if (___cxa_can_catch(caughtType, thrownType, adjusted_ptr_addr)) {\n      setTempRet0(caughtType);\n      return thrown;\n    }\n  }\n  setTempRet0(thrownType);\n  return thrown;\n};\n\nvar ___cxa_find_matching_catch_2 = () => findMatchingCatch([]);\n\nvar uncaughtExceptionCount = 0;\n\nvar ___cxa_throw = (ptr, type, destructor) => {\n  var info = new ExceptionInfo(ptr);\n  // Initialize ExceptionInfo content after it was allocated in __cxa_allocate_exception.\n  info.init(type, destructor);\n  exceptionLast = ptr;\n  uncaughtExceptionCount++;\n  throw exceptionLast;\n};\n\nvar ___resumeException = ptr => {\n  if (!exceptionLast) {\n    exceptionLast = ptr;\n  }\n  throw exceptionLast;\n};\n\nvar UTF8Decoder = new TextDecoder;\n\nvar findStringEnd = (heapOrArray, idx, maxBytesToRead, ignoreNul) => {\n  var maxIdx = idx + maxBytesToRead;\n  if (ignoreNul) return maxIdx;\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on\n  // null terminator by itself.\n  // As a tiny code save trick, compare idx against maxIdx using a negation,\n  // so that maxBytesToRead=undefined/NaN means Infinity.\n  while (heapOrArray[idx] && !(idx >= maxIdx)) ++idx;\n  return idx;\n};\n\n/**\n     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\n     * emscripten HEAP, returns a copy of that string as a Javascript String object.\n     *\n     * @param {number} ptr\n     * @param {number=} maxBytesToRead - An optional length that specifies the\n     *   maximum number of bytes to read. You can omit this parameter to scan the\n     *   string until the first 0 byte. If maxBytesToRead is passed, and the string\n     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\n     *   string will cut short at that byte index.\n     * @param {boolean=} ignoreNul - If true, the function will not stop on a NUL character.\n     * @return {string}\n     */ var UTF8ToString = (ptr, maxBytesToRead, ignoreNul) => {\n  if (!ptr) return \"\";\n  var end = findStringEnd(HEAPU8, ptr, maxBytesToRead, ignoreNul);\n  return UTF8Decoder.decode(HEAPU8.subarray(ptr, end));\n};\n\nvar SYSCALLS = {\n  varargs: undefined,\n  getStr(ptr) {\n    var ret = UTF8ToString(ptr);\n    return ret;\n  }\n};\n\nfunction ___syscall_fcntl64(fd, cmd, varargs) {\n  SYSCALLS.varargs = varargs;\n  return 0;\n}\n\nvar ___syscall_getcwd = (buf, size) => {};\n\nvar ___syscall_getdents64 = (fd, dirp, count) => {};\n\nfunction ___syscall_ioctl(fd, op, varargs) {\n  SYSCALLS.varargs = varargs;\n  return 0;\n}\n\nvar ___syscall_lstat64 = (path, buf) => {};\n\nvar ___syscall_mkdirat = (dirfd, path, mode) => {};\n\nvar ___syscall_newfstatat = (dirfd, path, buf, flags) => {};\n\nfunction ___syscall_openat(dirfd, path, flags, varargs) {\n  SYSCALLS.varargs = varargs;\n}\n\nvar ___syscall_readlinkat = (dirfd, path, buf, bufsize) => {};\n\nvar ___syscall_rmdir = path => {};\n\nvar ___syscall_stat64 = (path, buf) => {};\n\nvar __abort_js = () => abort(\"\");\n\nvar runtimeKeepaliveCounter = 0;\n\nvar __emscripten_runtime_keepalive_clear = () => {\n  runtimeKeepaliveCounter = 0;\n};\n\nvar __emscripten_throw_longjmp = () => {\n  throw Infinity;\n};\n\nvar INT53_MAX = 9007199254740992;\n\nvar INT53_MIN = -9007199254740992;\n\nvar bigintToI53Checked = num => (num < INT53_MIN || num > INT53_MAX) ? NaN : Number(num);\n\nfunction __gmtime_js(time, tmPtr) {\n  time = bigintToI53Checked(time);\n  var date = new Date(time * 1e3);\n  HEAP32[((tmPtr) >> 2)] = date.getUTCSeconds();\n  HEAP32[(((tmPtr) + (4)) >> 2)] = date.getUTCMinutes();\n  HEAP32[(((tmPtr) + (8)) >> 2)] = date.getUTCHours();\n  HEAP32[(((tmPtr) + (12)) >> 2)] = date.getUTCDate();\n  HEAP32[(((tmPtr) + (16)) >> 2)] = date.getUTCMonth();\n  HEAP32[(((tmPtr) + (20)) >> 2)] = date.getUTCFullYear() - 1900;\n  HEAP32[(((tmPtr) + (24)) >> 2)] = date.getUTCDay();\n  var start = Date.UTC(date.getUTCFullYear(), 0, 1, 0, 0, 0, 0);\n  var yday = ((date.getTime() - start) / (1e3 * 60 * 60 * 24)) | 0;\n  HEAP32[(((tmPtr) + (28)) >> 2)] = yday;\n}\n\nvar isLeapYear = year => year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n\nvar MONTH_DAYS_LEAP_CUMULATIVE = [ 0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335 ];\n\nvar MONTH_DAYS_REGULAR_CUMULATIVE = [ 0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334 ];\n\nvar ydayFromDate = date => {\n  var leap = isLeapYear(date.getFullYear());\n  var monthDaysCumulative = (leap ? MONTH_DAYS_LEAP_CUMULATIVE : MONTH_DAYS_REGULAR_CUMULATIVE);\n  var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1;\n  // -1 since it's days since Jan 1\n  return yday;\n};\n\nfunction __localtime_js(time, tmPtr) {\n  time = bigintToI53Checked(time);\n  var date = new Date(time * 1e3);\n  HEAP32[((tmPtr) >> 2)] = date.getSeconds();\n  HEAP32[(((tmPtr) + (4)) >> 2)] = date.getMinutes();\n  HEAP32[(((tmPtr) + (8)) >> 2)] = date.getHours();\n  HEAP32[(((tmPtr) + (12)) >> 2)] = date.getDate();\n  HEAP32[(((tmPtr) + (16)) >> 2)] = date.getMonth();\n  HEAP32[(((tmPtr) + (20)) >> 2)] = date.getFullYear() - 1900;\n  HEAP32[(((tmPtr) + (24)) >> 2)] = date.getDay();\n  var yday = ydayFromDate(date) | 0;\n  HEAP32[(((tmPtr) + (28)) >> 2)] = yday;\n  HEAP32[(((tmPtr) + (36)) >> 2)] = -(date.getTimezoneOffset() * 60);\n  // Attention: DST is in December in South, and some regions don't have DST at all.\n  var start = new Date(date.getFullYear(), 0, 1);\n  var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n  var winterOffset = start.getTimezoneOffset();\n  var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset)) | 0;\n  HEAP32[(((tmPtr) + (32)) >> 2)] = dst;\n}\n\nvar timers = {};\n\nvar handleException = e => {\n  // Certain exception types we do not treat as errors since they are used for\n  // internal control flow.\n  // 1. ExitStatus, which is thrown by exit()\n  // 2. \"unwind\", which is thrown by emscripten_unwind_to_js_event_loop() and others\n  //    that wish to return to JS event loop.\n  if (e instanceof ExitStatus || e == \"unwind\") {\n    return EXITSTATUS;\n  }\n  quit_(1, e);\n};\n\nvar keepRuntimeAlive = () => runtimeKeepaliveCounter > 0;\n\nvar _proc_exit = code => {\n  EXITSTATUS = code;\n  if (!keepRuntimeAlive()) {\n    ABORT = true;\n  }\n  quit_(code, new ExitStatus(code));\n};\n\n/** @suppress {duplicate } */ /** @param {boolean|number=} implicit */ var exitJS = (status, implicit) => {\n  EXITSTATUS = status;\n  if (!keepRuntimeAlive()) {\n    exitRuntime();\n  }\n  _proc_exit(status);\n};\n\nvar _exit = exitJS;\n\nvar maybeExit = () => {\n  if (runtimeExited) {\n    return;\n  }\n  if (!keepRuntimeAlive()) {\n    try {\n      _exit(EXITSTATUS);\n    } catch (e) {\n      handleException(e);\n    }\n  }\n};\n\nvar callUserCallback = func => {\n  if (runtimeExited || ABORT) {\n    return;\n  }\n  try {\n    func();\n    maybeExit();\n  } catch (e) {\n    handleException(e);\n  }\n};\n\nvar _emscripten_get_now = () => performance.now();\n\nvar __setitimer_js = (which, timeout_ms) => {\n  // First, clear any existing timer.\n  if (timers[which]) {\n    clearTimeout(timers[which].id);\n    delete timers[which];\n  }\n  // A timeout of zero simply cancels the current timeout so we have nothing\n  // more to do.\n  if (!timeout_ms) return 0;\n  var id = setTimeout(() => {\n    delete timers[which];\n    callUserCallback(() => __emscripten_timeout(which, _emscripten_get_now()));\n  }, timeout_ms);\n  timers[which] = {\n    id,\n    timeout_ms\n  };\n  return 0;\n};\n\nvar stringToUTF8Array = (str, heap, outIdx, maxBytesToWrite) => {\n  // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\n  // undefined and false each don't write out any bytes.\n  if (!(maxBytesToWrite > 0)) return 0;\n  var startIdx = outIdx;\n  var endIdx = outIdx + maxBytesToWrite - 1;\n  // -1 for string null terminator.\n  for (var i = 0; i < str.length; ++i) {\n    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\n    // and https://www.ietf.org/rfc/rfc2279.txt\n    // and https://tools.ietf.org/html/rfc3629\n    var u = str.codePointAt(i);\n    if (u <= 127) {\n      if (outIdx >= endIdx) break;\n      heap[outIdx++] = u;\n    } else if (u <= 2047) {\n      if (outIdx + 1 >= endIdx) break;\n      heap[outIdx++] = 192 | (u >> 6);\n      heap[outIdx++] = 128 | (u & 63);\n    } else if (u <= 65535) {\n      if (outIdx + 2 >= endIdx) break;\n      heap[outIdx++] = 224 | (u >> 12);\n      heap[outIdx++] = 128 | ((u >> 6) & 63);\n      heap[outIdx++] = 128 | (u & 63);\n    } else {\n      if (outIdx + 3 >= endIdx) break;\n      heap[outIdx++] = 240 | (u >> 18);\n      heap[outIdx++] = 128 | ((u >> 12) & 63);\n      heap[outIdx++] = 128 | ((u >> 6) & 63);\n      heap[outIdx++] = 128 | (u & 63);\n      // Gotcha: if codePoint is over 0xFFFF, it is represented as a surrogate pair in UTF-16.\n      // We need to manually skip over the second code unit for correct iteration.\n      i++;\n    }\n  }\n  // Null-terminate the pointer to the buffer.\n  heap[outIdx] = 0;\n  return outIdx - startIdx;\n};\n\nvar stringToUTF8 = (str, outPtr, maxBytesToWrite) => stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n\nvar __tzset_js = (timezone, daylight, std_name, dst_name) => {\n  // TODO: Use (malleable) environment variables instead of system settings.\n  var currentYear = (new Date).getFullYear();\n  var winter = new Date(currentYear, 0, 1);\n  var summer = new Date(currentYear, 6, 1);\n  var winterOffset = winter.getTimezoneOffset();\n  var summerOffset = summer.getTimezoneOffset();\n  // Local standard timezone offset. Local standard time is not adjusted for\n  // daylight savings.  This code uses the fact that getTimezoneOffset returns\n  // a greater value during Standard Time versus Daylight Saving Time (DST).\n  // Thus it determines the expected output during Standard Time, and it\n  // compares whether the output of the given date the same (Standard) or less\n  // (DST).\n  var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\n  // timezone is specified as seconds west of UTC (\"The external variable\n  // `timezone` shall be set to the difference, in seconds, between\n  // Coordinated Universal Time (UTC) and local standard time.\"), the same\n  // as returned by stdTimezoneOffset.\n  // See http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html\n  HEAPU32[((timezone) >> 2)] = stdTimezoneOffset * 60;\n  HEAP32[((daylight) >> 2)] = Number(winterOffset != summerOffset);\n  var extractZone = timezoneOffset => {\n    // Why inverse sign?\n    // Read here https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getTimezoneOffset\n    var sign = timezoneOffset >= 0 ? \"-\" : \"+\";\n    var absOffset = Math.abs(timezoneOffset);\n    var hours = String(Math.floor(absOffset / 60)).padStart(2, \"0\");\n    var minutes = String(absOffset % 60).padStart(2, \"0\");\n    return `UTC${sign}${hours}${minutes}`;\n  };\n  var winterName = extractZone(winterOffset);\n  var summerName = extractZone(summerOffset);\n  if (summerOffset < winterOffset) {\n    // Northern hemisphere\n    stringToUTF8(winterName, std_name, 17);\n    stringToUTF8(summerName, dst_name, 17);\n  } else {\n    stringToUTF8(winterName, dst_name, 17);\n    stringToUTF8(summerName, std_name, 17);\n  }\n};\n\nvar _emscripten_date_now = () => Date.now();\n\nvar nowIsMonotonic = 1;\n\nvar checkWasiClock = clock_id => clock_id >= 0 && clock_id <= 3;\n\nfunction _clock_time_get(clk_id, ignored_precision, ptime) {\n  ignored_precision = bigintToI53Checked(ignored_precision);\n  if (!checkWasiClock(clk_id)) {\n    return 28;\n  }\n  var now;\n  // all wasi clocks but realtime are monotonic\n  if (clk_id === 0) {\n    now = _emscripten_date_now();\n  } else if (nowIsMonotonic) {\n    now = _emscripten_get_now();\n  } else {\n    return 52;\n  }\n  // \"now\" is in ms, and wasi times are in ns.\n  var nsec = Math.round(now * 1e3 * 1e3);\n  HEAP64[((ptime) >> 3)] = BigInt(nsec);\n  return 0;\n}\n\nfunction writeBuffer(buffer, data) {\n  const ptr = _malloc(data.length);\n  HEAP8.set(data, ptr);\n  HEAP32[((buffer) >> 2)] = ptr;\n  HEAP32[(((buffer) + (4)) >> 2)] = data.length;\n}\n\nfunction writeBufferJSON(buffer, data) {\n  const json = JSON.stringify(data);\n  writeBuffer(buffer, encoder.encode(json));\n}\n\nvar _emglken_file_delete = function emglken_file_delete(path_ptr, path_len) {\n  return Asyncify.handleAsync(async () => {\n    const path = UTF8ToString(path_ptr, path_len);\n    await Dialog.delete(path);\n  });\n};\n\n_emglken_file_delete.isAsync = true;\n\nvar _emglken_file_exists = function emglken_file_exists(path_ptr, path_len) {\n  return Asyncify.handleAsync(async () => {\n    const path = UTF8ToString(path_ptr, path_len);\n    return Dialog.exists(path);\n  });\n};\n\n_emglken_file_exists.isAsync = true;\n\nvar _emglken_file_flush = function emglken_file_flush() {\n  return Asyncify.handleAsync(async () => {\n    await Dialog.write(emglken_files);\n    emglken_files = {};\n  });\n};\n\n_emglken_file_flush.isAsync = true;\n\nvar _emglken_file_read = function emglken_file_read(path_ptr, path_len, buffer) {\n  return Asyncify.handleAsync(async () => {\n    const path = UTF8ToString(path_ptr, path_len);\n    const data = await Dialog.read(path);\n    if (data) {\n      writeBuffer(buffer, data);\n      return true;\n    }\n    return false;\n  });\n};\n\n_emglken_file_read.isAsync = true;\n\nfunction _emglken_file_write_buffer(path_ptr, path_len, buf_ptr, buf_len) {\n  const path = UTF8ToString(path_ptr, path_len);\n  const data = HEAP8.subarray(buf_ptr, buf_ptr + buf_len);\n  emglken_files[path] = data;\n}\n\nfunction _emglken_get_dirs(buffer) {\n  const dirs = Dialog.get_dirs();\n  writeBufferJSON(buffer, dirs);\n}\n\nvar _emglken_get_glkote_event = function emglken_get_glkote_event(buffer) {\n  return Asyncify.handleAsync(async () => {\n    if (!glkote_event_data) {\n      await new Promise(resolve => {\n        glkote_event_ready = resolve;\n      });\n    }\n    writeBufferJSON(buffer, glkote_event_data);\n    glkote_event_data = null;\n  });\n};\n\n_emglken_get_glkote_event.isAsync = true;\n\nfunction _emglken_send_glkote_update(update_ptr, update_len) {\n  const obj = JSON.parse(UTF8ToString(update_ptr, update_len));\n  GlkOte.update(obj);\n}\n\nvar getHeapMax = () => // Stay one Wasm page short of 4GB: while e.g. Chrome is able to allocate\n// full 4GB Wasm memories, the size will wrap back to 0 bytes in Wasm side\n// for any code that deals with heap sizes, which would require special\n// casing all heap size related code to treat 0 specially.\n2147483648;\n\nvar alignMemory = (size, alignment) => Math.ceil(size / alignment) * alignment;\n\nvar growMemory = size => {\n  var oldHeapSize = wasmMemory.buffer.byteLength;\n  var pages = ((size - oldHeapSize + 65535) / 65536) | 0;\n  try {\n    // round size grow request up to wasm page size (fixed 64KB per spec)\n    wasmMemory.grow(pages);\n    // .grow() takes a delta compared to the previous size\n    updateMemoryViews();\n    return 1;\n  } catch (e) {}\n};\n\nvar _emscripten_resize_heap = requestedSize => {\n  var oldSize = HEAPU8.length;\n  // With CAN_ADDRESS_2GB or MEMORY64, pointers are already unsigned.\n  requestedSize >>>= 0;\n  // With multithreaded builds, races can happen (another thread might increase the size\n  // in between), so return a failure, and let the caller retry.\n  // Memory resize rules:\n  // 1.  Always increase heap size to at least the requested size, rounded up\n  //     to next page multiple.\n  // 2a. If MEMORY_GROWTH_LINEAR_STEP == -1, excessively resize the heap\n  //     geometrically: increase the heap size according to\n  //     MEMORY_GROWTH_GEOMETRIC_STEP factor (default +20%), At most\n  //     overreserve by MEMORY_GROWTH_GEOMETRIC_CAP bytes (default 96MB).\n  // 2b. If MEMORY_GROWTH_LINEAR_STEP != -1, excessively resize the heap\n  //     linearly: increase the heap size by at least\n  //     MEMORY_GROWTH_LINEAR_STEP bytes.\n  // 3.  Max size for the heap is capped at 2048MB-WASM_PAGE_SIZE, or by\n  //     MAXIMUM_MEMORY, or by ASAN limit, depending on which is smallest\n  // 4.  If we were unable to allocate as much memory, it may be due to\n  //     over-eager decision to excessively reserve due to (3) above.\n  //     Hence if an allocation fails, cut down on the amount of excess\n  //     growth, in an attempt to succeed to perform a smaller allocation.\n  // A limit is set for how much we can grow. We should not exceed that\n  // (the wasm binary specifies it, so if we tried, we'd fail anyhow).\n  var maxHeapSize = getHeapMax();\n  if (requestedSize > maxHeapSize) {\n    return false;\n  }\n  // Loop through potential heap size increases. If we attempt a too eager\n  // reservation that fails, cut down on the attempted size and reserve a\n  // smaller bump instead. (max 3 times, chosen somewhat arbitrarily)\n  for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n    var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\n    // ensure geometric growth\n    // but limit overreserving (default to capping at +96MB overgrowth at most)\n    overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n    var newSize = Math.min(maxHeapSize, alignMemory(Math.max(requestedSize, overGrownHeapSize), 65536));\n    var replacement = growMemory(newSize);\n    if (replacement) {\n      return true;\n    }\n  }\n  return false;\n};\n\nvar ENV = {};\n\nvar getExecutableName = () => thisProgram || \"./this.program\";\n\nvar getEnvStrings = () => {\n  if (!getEnvStrings.strings) {\n    // Default values.\n    // Browser language detection #8751\n    var lang = ((typeof navigator == \"object\" && navigator.language) || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\n    var env = {\n      \"USER\": \"web_user\",\n      \"LOGNAME\": \"web_user\",\n      \"PATH\": \"/\",\n      \"PWD\": \"/\",\n      \"HOME\": \"/home/web_user\",\n      \"LANG\": lang,\n      \"_\": getExecutableName()\n    };\n    // Apply the user-provided values, if any.\n    for (var x in ENV) {\n      // x is a key in ENV; if ENV[x] is undefined, that means it was\n      // explicitly set to be so. We allow user code to do that to\n      // force variables with default values to remain unset.\n      if (ENV[x] === undefined) delete env[x]; else env[x] = ENV[x];\n    }\n    var strings = [];\n    for (var x in env) {\n      strings.push(`${x}=${env[x]}`);\n    }\n    getEnvStrings.strings = strings;\n  }\n  return getEnvStrings.strings;\n};\n\nvar _environ_get = (__environ, environ_buf) => {\n  var bufSize = 0;\n  var envp = 0;\n  for (var string of getEnvStrings()) {\n    var ptr = environ_buf + bufSize;\n    HEAPU32[(((__environ) + (envp)) >> 2)] = ptr;\n    bufSize += stringToUTF8(string, ptr, Infinity) + 1;\n    envp += 4;\n  }\n  return 0;\n};\n\nvar lengthBytesUTF8 = str => {\n  var len = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n    // unit, not a Unicode code point of the character! So decode\n    // UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var c = str.charCodeAt(i);\n    // possibly a lead surrogate\n    if (c <= 127) {\n      len++;\n    } else if (c <= 2047) {\n      len += 2;\n    } else if (c >= 55296 && c <= 57343) {\n      len += 4;\n      ++i;\n    } else {\n      len += 3;\n    }\n  }\n  return len;\n};\n\nvar _environ_sizes_get = (penviron_count, penviron_buf_size) => {\n  var strings = getEnvStrings();\n  HEAPU32[((penviron_count) >> 2)] = strings.length;\n  var bufSize = 0;\n  for (var string of strings) {\n    bufSize += lengthBytesUTF8(string) + 1;\n  }\n  HEAPU32[((penviron_buf_size) >> 2)] = bufSize;\n  return 0;\n};\n\nvar _fd_close = fd => 52;\n\nvar _fd_read = (fd, iov, iovcnt, pnum) => 52;\n\nfunction _fd_seek(fd, offset, whence, newOffset) {\n  offset = bigintToI53Checked(offset);\n  return 70;\n}\n\nvar printCharBuffers = [ null, [], [] ];\n\n/**\n     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\n     * array that contains uint8 values, returns a copy of that string as a\n     * Javascript String object.\n     * heapOrArray is either a regular array, or a JavaScript typed array view.\n     * @param {number=} idx\n     * @param {number=} maxBytesToRead\n     * @param {boolean=} ignoreNul - If true, the function will not stop on a NUL character.\n     * @return {string}\n     */ var UTF8ArrayToString = (heapOrArray, idx = 0, maxBytesToRead, ignoreNul) => {\n  var endPtr = findStringEnd(heapOrArray, idx, maxBytesToRead, ignoreNul);\n  return UTF8Decoder.decode(heapOrArray.buffer ? heapOrArray.subarray(idx, endPtr) : new Uint8Array(heapOrArray.slice(idx, endPtr)));\n};\n\nvar printChar = (stream, curr) => {\n  var buffer = printCharBuffers[stream];\n  if (curr === 0 || curr === 10) {\n    (stream === 1 ? out : err)(UTF8ArrayToString(buffer));\n    buffer.length = 0;\n  } else {\n    buffer.push(curr);\n  }\n};\n\nvar flush_NO_FILESYSTEM = () => {\n  // flush anything remaining in the buffers during shutdown\n  _fflush(0);\n  if (printCharBuffers[1].length) printChar(1, 10);\n  if (printCharBuffers[2].length) printChar(2, 10);\n};\n\nvar _fd_write = (fd, iov, iovcnt, pnum) => {\n  // hack to support printf in SYSCALLS_REQUIRE_FILESYSTEM=0\n  var num = 0;\n  for (var i = 0; i < iovcnt; i++) {\n    var ptr = HEAPU32[((iov) >> 2)];\n    var len = HEAPU32[(((iov) + (4)) >> 2)];\n    iov += 8;\n    for (var j = 0; j < len; j++) {\n      printChar(fd, HEAPU8[ptr + j]);\n    }\n    num += len;\n  }\n  HEAPU32[((pnum) >> 2)] = num;\n  return 0;\n};\n\nvar initRandomFill = () => {\n  // This block is not needed on v19+ since crypto.getRandomValues is builtin\n  if (ENVIRONMENT_IS_NODE) {\n    var nodeCrypto = require(\"crypto\");\n    return view => nodeCrypto.randomFillSync(view);\n  }\n  return view => crypto.getRandomValues(view);\n};\n\nvar randomFill = view => {\n  // Lazily init on the first invocation.\n  (randomFill = initRandomFill())(view);\n};\n\nvar _random_get = (buffer, size) => {\n  randomFill(HEAPU8.subarray(buffer, buffer + size));\n  return 0;\n};\n\nvar stackAlloc = sz => __emscripten_stack_alloc(sz);\n\nvar stringToUTF8OnStack = str => {\n  var size = lengthBytesUTF8(str) + 1;\n  var ret = stackAlloc(size);\n  stringToUTF8(str, ret, size);\n  return ret;\n};\n\nvar runAndAbortIfError = func => {\n  try {\n    return func();\n  } catch (e) {\n    abort(e);\n  }\n};\n\nvar runtimeKeepalivePush = () => {\n  runtimeKeepaliveCounter += 1;\n};\n\nvar runtimeKeepalivePop = () => {\n  runtimeKeepaliveCounter -= 1;\n};\n\nvar Asyncify = {\n  instrumentWasmImports(imports) {\n    var importPattern = /^(invoke_.*|__asyncjs__.*)$/;\n    for (let [x, original] of Object.entries(imports)) {\n      if (typeof original == \"function\") {\n        let isAsyncifyImport = original.isAsync || importPattern.test(x);\n      }\n    }\n  },\n  instrumentFunction(original) {\n    var wrapper = (...args) => {\n      Asyncify.exportCallStack.push(original);\n      try {\n        return original(...args);\n      } finally {\n        if (!ABORT) {\n          var top = Asyncify.exportCallStack.pop();\n          Asyncify.maybeStopUnwind();\n        }\n      }\n    };\n    Asyncify.funcWrappers.set(original, wrapper);\n    return wrapper;\n  },\n  instrumentWasmExports(exports) {\n    var ret = {};\n    for (let [x, original] of Object.entries(exports)) {\n      if (typeof original == \"function\") {\n        var wrapper = Asyncify.instrumentFunction(original);\n        ret[x] = wrapper;\n      } else {\n        ret[x] = original;\n      }\n    }\n    return ret;\n  },\n  State: {\n    Normal: 0,\n    Unwinding: 1,\n    Rewinding: 2,\n    Disabled: 3\n  },\n  state: 0,\n  StackSize: 8192,\n  currData: null,\n  handleSleepReturnValue: 0,\n  exportCallStack: [],\n  callstackFuncToId: new Map,\n  callStackIdToFunc: new Map,\n  funcWrappers: new Map,\n  callStackId: 0,\n  asyncPromiseHandlers: null,\n  sleepCallbacks: [],\n  getCallStackId(func) {\n    if (!Asyncify.callstackFuncToId.has(func)) {\n      var id = Asyncify.callStackId++;\n      Asyncify.callstackFuncToId.set(func, id);\n      Asyncify.callStackIdToFunc.set(id, func);\n    }\n    return Asyncify.callstackFuncToId.get(func);\n  },\n  maybeStopUnwind() {\n    if (Asyncify.currData && Asyncify.state === Asyncify.State.Unwinding && Asyncify.exportCallStack.length === 0) {\n      // We just finished unwinding.\n      // Be sure to set the state before calling any other functions to avoid\n      // possible infinite recursion here (For example in debug pthread builds\n      // the dbg() function itself can call back into WebAssembly to get the\n      // current pthread_self() pointer).\n      Asyncify.state = Asyncify.State.Normal;\n      runtimeKeepalivePush();\n      // Keep the runtime alive so that a re-wind can be done later.\n      runAndAbortIfError(_asyncify_stop_unwind);\n      if (typeof Fibers != \"undefined\") {\n        Fibers.trampoline();\n      }\n    }\n  },\n  whenDone() {\n    return new Promise((resolve, reject) => {\n      Asyncify.asyncPromiseHandlers = {\n        resolve,\n        reject\n      };\n    });\n  },\n  allocateData() {\n    // An asyncify data structure has three fields:\n    //  0  current stack pos\n    //  4  max stack pos\n    //  8  id of function at bottom of the call stack (callStackIdToFunc[id] == wasm func)\n    // The Asyncify ABI only interprets the first two fields, the rest is for the runtime.\n    // We also embed a stack in the same memory region here, right next to the structure.\n    // This struct is also defined as asyncify_data_t in emscripten/fiber.h\n    var ptr = _malloc(12 + Asyncify.StackSize);\n    Asyncify.setDataHeader(ptr, ptr + 12, Asyncify.StackSize);\n    Asyncify.setDataRewindFunc(ptr);\n    return ptr;\n  },\n  setDataHeader(ptr, stack, stackSize) {\n    HEAPU32[((ptr) >> 2)] = stack;\n    HEAPU32[(((ptr) + (4)) >> 2)] = stack + stackSize;\n  },\n  setDataRewindFunc(ptr) {\n    var bottomOfCallStack = Asyncify.exportCallStack[0];\n    var rewindId = Asyncify.getCallStackId(bottomOfCallStack);\n    HEAP32[(((ptr) + (8)) >> 2)] = rewindId;\n  },\n  getDataRewindFunc(ptr) {\n    var id = HEAP32[(((ptr) + (8)) >> 2)];\n    var func = Asyncify.callStackIdToFunc.get(id);\n    return func;\n  },\n  doRewind(ptr) {\n    var original = Asyncify.getDataRewindFunc(ptr);\n    var func = Asyncify.funcWrappers.get(original);\n    // Once we have rewound and the stack we no longer need to artificially\n    // keep the runtime alive.\n    runtimeKeepalivePop();\n    return func();\n  },\n  handleSleep(startAsync) {\n    if (ABORT) return;\n    if (Asyncify.state === Asyncify.State.Normal) {\n      // Prepare to sleep. Call startAsync, and see what happens:\n      // if the code decided to call our callback synchronously,\n      // then no async operation was in fact begun, and we don't\n      // need to do anything.\n      var reachedCallback = false;\n      var reachedAfterCallback = false;\n      startAsync((handleSleepReturnValue = 0) => {\n        if (ABORT) return;\n        Asyncify.handleSleepReturnValue = handleSleepReturnValue;\n        reachedCallback = true;\n        if (!reachedAfterCallback) {\n          // We are happening synchronously, so no need for async.\n          return;\n        }\n        Asyncify.state = Asyncify.State.Rewinding;\n        runAndAbortIfError(() => _asyncify_start_rewind(Asyncify.currData));\n        if (typeof MainLoop != \"undefined\" && MainLoop.func) {\n          MainLoop.resume();\n        }\n        var asyncWasmReturnValue, isError = false;\n        try {\n          asyncWasmReturnValue = Asyncify.doRewind(Asyncify.currData);\n        } catch (err) {\n          asyncWasmReturnValue = err;\n          isError = true;\n        }\n        // Track whether the return value was handled by any promise handlers.\n        var handled = false;\n        if (!Asyncify.currData) {\n          // All asynchronous execution has finished.\n          // `asyncWasmReturnValue` now contains the final\n          // return value of the exported async WASM function.\n          // Note: `asyncWasmReturnValue` is distinct from\n          // `Asyncify.handleSleepReturnValue`.\n          // `Asyncify.handleSleepReturnValue` contains the return\n          // value of the last C function to have executed\n          // `Asyncify.handleSleep()`, where as `asyncWasmReturnValue`\n          // contains the return value of the exported WASM function\n          // that may have called C functions that\n          // call `Asyncify.handleSleep()`.\n          var asyncPromiseHandlers = Asyncify.asyncPromiseHandlers;\n          if (asyncPromiseHandlers) {\n            Asyncify.asyncPromiseHandlers = null;\n            (isError ? asyncPromiseHandlers.reject : asyncPromiseHandlers.resolve)(asyncWasmReturnValue);\n            handled = true;\n          }\n        }\n        if (isError && !handled) {\n          // If there was an error and it was not handled by now, we have no choice but to\n          // rethrow that error into the global scope where it can be caught only by\n          // `onerror` or `onunhandledpromiserejection`.\n          throw asyncWasmReturnValue;\n        }\n      });\n      reachedAfterCallback = true;\n      if (!reachedCallback) {\n        // A true async operation was begun; start a sleep.\n        Asyncify.state = Asyncify.State.Unwinding;\n        // TODO: reuse, don't alloc/free every sleep\n        Asyncify.currData = Asyncify.allocateData();\n        if (typeof MainLoop != \"undefined\" && MainLoop.func) {\n          MainLoop.pause();\n        }\n        runAndAbortIfError(() => _asyncify_start_unwind(Asyncify.currData));\n      }\n    } else if (Asyncify.state === Asyncify.State.Rewinding) {\n      // Stop a resume.\n      Asyncify.state = Asyncify.State.Normal;\n      runAndAbortIfError(_asyncify_stop_rewind);\n      _free(Asyncify.currData);\n      Asyncify.currData = null;\n      // Call all sleep callbacks now that the sleep-resume is all done.\n      Asyncify.sleepCallbacks.forEach(callUserCallback);\n    } else {\n      abort(`invalid state: ${Asyncify.state}`);\n    }\n    return Asyncify.handleSleepReturnValue;\n  },\n  handleAsync: startAsync => Asyncify.handleSleep(wakeUp => {\n    // TODO: add error handling as a second param when handleSleep implements it.\n    startAsync().then(wakeUp);\n  })\n};\n\nlet emglken_files = {};\n\nconst encoder = new TextEncoder;\n\n// End JS library code\n// include: postlibrary.js\n// This file is included after the automatically-generated JS library code\n// but before the wasm module is created.\n{\n  // Begin ATMODULES hooks\n  if (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n}\n\n// Begin runtime exports\n// End runtime exports\n// Begin JS library exports\n// End JS library exports\n// end include: postlibrary.js\n// Imports from the Wasm binary.\nvar _malloc, _free, _main, ___funcs_on_exit, _fflush, __emscripten_timeout, _setThrew, __emscripten_tempret_set, __emscripten_stack_restore, __emscripten_stack_alloc, _emscripten_stack_get_current, ___cxa_can_catch, dynCall_vi, dynCall_vii, dynCall_iii, dynCall_iiii, dynCall_ii, dynCall_viiii, dynCall_viiiii, dynCall_viiiiii, dynCall_viii, dynCall_iijj, dynCall_jiii, dynCall_viiiiiii, dynCall_iiiiii, dynCall_ij, dynCall_iiiii, dynCall_v, dynCall_viiiiiiii, dynCall_iiiiiiiii, dynCall_viiiiiiiii, dynCall_iiiiiii, dynCall_viiiiiiiiiii, dynCall_iiiiiiiiii, dynCall_iiiiiiii, dynCall_iiiiiiiiiii, dynCall_iiiiiiiiiiiiii, dynCall_iiiiiiiiiiiiiiiiii, dynCall_viiiiiiiiiiiiiii, dynCall_i, dynCall_iiiiiiiiiiii, dynCall_iiiiiiiiiiiiiiii, dynCall_iiiiiiiiiiiii, dynCall_jiji, dynCall_iidiiii, _asyncify_start_unwind, _asyncify_stop_unwind, _asyncify_start_rewind, _asyncify_stop_rewind, wasmMemory, wasmTable;\n\nfunction assignWasmExports(wasmExports) {\n  _malloc = wasmExports[\"va\"];\n  _free = wasmExports[\"wa\"];\n  _main = Module[\"_main\"] = wasmExports[\"xa\"];\n  ___funcs_on_exit = wasmExports[\"ya\"];\n  _fflush = wasmExports[\"za\"];\n  __emscripten_timeout = wasmExports[\"Aa\"];\n  _setThrew = Module[\"_setThrew\"] = wasmExports[\"Ba\"];\n  __emscripten_tempret_set = wasmExports[\"Ca\"];\n  __emscripten_stack_restore = wasmExports[\"Da\"];\n  __emscripten_stack_alloc = wasmExports[\"Ea\"];\n  _emscripten_stack_get_current = wasmExports[\"Fa\"];\n  ___cxa_can_catch = wasmExports[\"Ga\"];\n  dynCall_vi = dynCalls[\"vi\"] = wasmExports[\"Ha\"];\n  dynCall_vii = dynCalls[\"vii\"] = wasmExports[\"Ia\"];\n  dynCall_iii = dynCalls[\"iii\"] = wasmExports[\"Ja\"];\n  dynCall_iiii = dynCalls[\"iiii\"] = wasmExports[\"Ka\"];\n  dynCall_ii = dynCalls[\"ii\"] = wasmExports[\"La\"];\n  dynCall_viiii = dynCalls[\"viiii\"] = wasmExports[\"Ma\"];\n  dynCall_viiiii = dynCalls[\"viiiii\"] = wasmExports[\"Na\"];\n  dynCall_viiiiii = dynCalls[\"viiiiii\"] = wasmExports[\"Oa\"];\n  dynCall_viii = dynCalls[\"viii\"] = wasmExports[\"Pa\"];\n  dynCall_iijj = dynCalls[\"iijj\"] = wasmExports[\"Qa\"];\n  dynCall_jiii = dynCalls[\"jiii\"] = wasmExports[\"Ra\"];\n  dynCall_viiiiiii = dynCalls[\"viiiiiii\"] = wasmExports[\"Sa\"];\n  dynCall_iiiiii = dynCalls[\"iiiiii\"] = wasmExports[\"Ta\"];\n  dynCall_ij = dynCalls[\"ij\"] = wasmExports[\"Ua\"];\n  dynCall_iiiii = dynCalls[\"iiiii\"] = wasmExports[\"Va\"];\n  dynCall_v = dynCalls[\"v\"] = wasmExports[\"Wa\"];\n  dynCall_viiiiiiii = dynCalls[\"viiiiiiii\"] = wasmExports[\"Xa\"];\n  dynCall_iiiiiiiii = dynCalls[\"iiiiiiiii\"] = wasmExports[\"Ya\"];\n  dynCall_viiiiiiiii = dynCalls[\"viiiiiiiii\"] = wasmExports[\"Za\"];\n  dynCall_iiiiiii = dynCalls[\"iiiiiii\"] = wasmExports[\"_a\"];\n  dynCall_viiiiiiiiiii = dynCalls[\"viiiiiiiiiii\"] = wasmExports[\"$a\"];\n  dynCall_iiiiiiiiii = dynCalls[\"iiiiiiiiii\"] = wasmExports[\"ab\"];\n  dynCall_iiiiiiii = dynCalls[\"iiiiiiii\"] = wasmExports[\"bb\"];\n  dynCall_iiiiiiiiiii = dynCalls[\"iiiiiiiiiii\"] = wasmExports[\"cb\"];\n  dynCall_iiiiiiiiiiiiii = dynCalls[\"iiiiiiiiiiiiii\"] = wasmExports[\"db\"];\n  dynCall_iiiiiiiiiiiiiiiiii = dynCalls[\"iiiiiiiiiiiiiiiiii\"] = wasmExports[\"eb\"];\n  dynCall_viiiiiiiiiiiiiii = dynCalls[\"viiiiiiiiiiiiiii\"] = wasmExports[\"fb\"];\n  dynCall_i = dynCalls[\"i\"] = wasmExports[\"gb\"];\n  dynCall_iiiiiiiiiiii = dynCalls[\"iiiiiiiiiiii\"] = wasmExports[\"hb\"];\n  dynCall_iiiiiiiiiiiiiiii = dynCalls[\"iiiiiiiiiiiiiiii\"] = wasmExports[\"ib\"];\n  dynCall_iiiiiiiiiiiii = dynCalls[\"iiiiiiiiiiiii\"] = wasmExports[\"jb\"];\n  dynCall_jiji = dynCalls[\"jiji\"] = wasmExports[\"kb\"];\n  dynCall_iidiiii = dynCalls[\"iidiiii\"] = wasmExports[\"lb\"];\n  _asyncify_start_unwind = wasmExports[\"mb\"];\n  _asyncify_stop_unwind = wasmExports[\"nb\"];\n  _asyncify_start_rewind = wasmExports[\"ob\"];\n  _asyncify_stop_rewind = wasmExports[\"pb\"];\n  wasmMemory = wasmExports[\"ta\"];\n  wasmTable = wasmExports[\"__indirect_function_table\"];\n}\n\nvar wasmImports = {\n  /** @export */ sa: ___call_sighandler,\n  /** @export */ a: ___cxa_find_matching_catch_2,\n  /** @export */ ra: ___cxa_throw,\n  /** @export */ h: ___resumeException,\n  /** @export */ F: ___syscall_fcntl64,\n  /** @export */ qa: ___syscall_getcwd,\n  /** @export */ pa: ___syscall_getdents64,\n  /** @export */ oa: ___syscall_ioctl,\n  /** @export */ na: ___syscall_lstat64,\n  /** @export */ ma: ___syscall_mkdirat,\n  /** @export */ la: ___syscall_newfstatat,\n  /** @export */ E: ___syscall_openat,\n  /** @export */ ka: ___syscall_readlinkat,\n  /** @export */ ja: ___syscall_rmdir,\n  /** @export */ ia: ___syscall_stat64,\n  /** @export */ aa: __abort_js,\n  /** @export */ $: __emscripten_runtime_keepalive_clear,\n  /** @export */ _: __emscripten_throw_longjmp,\n  /** @export */ Z: __gmtime_js,\n  /** @export */ Y: __localtime_js,\n  /** @export */ X: __setitimer_js,\n  /** @export */ W: __tzset_js,\n  /** @export */ ha: _clock_time_get,\n  /** @export */ V: _emglken_file_delete,\n  /** @export */ U: _emglken_file_exists,\n  /** @export */ T: _emglken_file_flush,\n  /** @export */ S: _emglken_file_read,\n  /** @export */ R: _emglken_file_write_buffer,\n  /** @export */ Q: _emglken_get_dirs,\n  /** @export */ P: _emglken_get_glkote_event,\n  /** @export */ O: _emglken_send_glkote_update,\n  /** @export */ N: _emscripten_date_now,\n  /** @export */ A: _emscripten_get_now,\n  /** @export */ M: _emscripten_resize_heap,\n  /** @export */ ga: _environ_get,\n  /** @export */ fa: _environ_sizes_get,\n  /** @export */ L: _exit,\n  /** @export */ y: _fd_close,\n  /** @export */ ea: _fd_read,\n  /** @export */ da: _fd_seek,\n  /** @export */ B: _fd_write,\n  /** @export */ K: invoke_i,\n  /** @export */ e: invoke_ii,\n  /** @export */ i: invoke_iii,\n  /** @export */ f: invoke_iiii,\n  /** @export */ k: invoke_iiiii,\n  /** @export */ m: invoke_iiiiii,\n  /** @export */ o: invoke_iiiiiii,\n  /** @export */ p: invoke_iiiiiiii,\n  /** @export */ u: invoke_iiiiiiiii,\n  /** @export */ v: invoke_iiiiiiiiii,\n  /** @export */ r: invoke_iiiiiiiiiii,\n  /** @export */ z: invoke_iiiiiiiiiiii,\n  /** @export */ s: invoke_iiiiiiiiiiiiii,\n  /** @export */ D: invoke_iiiiiiiiiiiiiiii,\n  /** @export */ x: invoke_iiiiiiiiiiiiiiiiii,\n  /** @export */ J: invoke_iijj,\n  /** @export */ I: invoke_ij,\n  /** @export */ H: invoke_jiii,\n  /** @export */ l: invoke_v,\n  /** @export */ c: invoke_vi,\n  /** @export */ d: invoke_vii,\n  /** @export */ b: invoke_viii,\n  /** @export */ j: invoke_viiii,\n  /** @export */ g: invoke_viiiii,\n  /** @export */ q: invoke_viiiiii,\n  /** @export */ C: invoke_viiiiiii,\n  /** @export */ t: invoke_viiiiiiii,\n  /** @export */ n: invoke_viiiiiiiii,\n  /** @export */ w: invoke_viiiiiiiiiii,\n  /** @export */ G: invoke_viiiiiiiiiiiiiii,\n  /** @export */ ca: _proc_exit,\n  /** @export */ ba: _random_get\n};\n\nfunction invoke_vi(index, a1) {\n  var sp = stackSave();\n  try {\n    dynCall_vi(index, a1);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiiii(index, a1, a2, a3, a4, a5) {\n  var sp = stackSave();\n  try {\n    dynCall_viiiii(index, a1, a2, a3, a4, a5);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viii(index, a1, a2, a3) {\n  var sp = stackSave();\n  try {\n    dynCall_viii(index, a1, a2, a3);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_vii(index, a1, a2) {\n  var sp = stackSave();\n  try {\n    dynCall_vii(index, a1, a2);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiii(index, a1, a2, a3) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiii(index, a1, a2, a3);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_ii(index, a1) {\n  var sp = stackSave();\n  try {\n    return dynCall_ii(index, a1);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiii(index, a1, a2, a3, a4) {\n  var sp = stackSave();\n  try {\n    dynCall_viiii(index, a1, a2, a3, a4);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiiiii(index, a1, a2, a3, a4, a5, a6) {\n  var sp = stackSave();\n  try {\n    dynCall_viiiiii(index, a1, a2, a3, a4, a5, a6);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iii(index, a1, a2) {\n  var sp = stackSave();\n  try {\n    return dynCall_iii(index, a1, a2);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iijj(index, a1, a2, a3) {\n  var sp = stackSave();\n  try {\n    return dynCall_iijj(index, a1, a2, a3);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {\n  var sp = stackSave();\n  try {\n    dynCall_viiiiiii(index, a1, a2, a3, a4, a5, a6, a7);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiii(index, a1, a2, a3, a4) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiiii(index, a1, a2, a3, a4);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_jiii(index, a1, a2, a3) {\n  var sp = stackSave();\n  try {\n    return dynCall_jiii(index, a1, a2, a3);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n    return 0n;\n  }\n}\n\nfunction invoke_i(index) {\n  var sp = stackSave();\n  try {\n    return dynCall_i(index);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiiii(index, a1, a2, a3, a4, a5, a6) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiiiiii(index, a1, a2, a3, a4, a5, a6);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiii(index, a1, a2, a3, a4, a5) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiiiii(index, a1, a2, a3, a4, a5);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_ij(index, a1) {\n  var sp = stackSave();\n  try {\n    return dynCall_ij(index, a1);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_v(index) {\n  var sp = stackSave();\n  try {\n    dynCall_v(index);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n  var sp = stackSave();\n  try {\n    dynCall_viiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n  var sp = stackSave();\n  try {\n    dynCall_viiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiiiiiii(index, a1, a2, a3, a4, a5, a6, a7);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiiiiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {\n  var sp = stackSave();\n  try {\n    dynCall_viiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) {\n  var sp = stackSave();\n  try {\n    dynCall_viiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);\n  } catch (e) {\n    stackRestore(sp);\n    if (e !== e + 0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\n// include: postamble.js\n// === Auto-generated postamble setup entry stuff ===\nfunction callMain(args = []) {\n  var entryFunction = _main;\n  args.unshift(thisProgram);\n  var argc = args.length;\n  var argv = stackAlloc((argc + 1) * 4);\n  var argv_ptr = argv;\n  args.forEach(arg => {\n    HEAPU32[((argv_ptr) >> 2)] = stringToUTF8OnStack(arg);\n    argv_ptr += 4;\n  });\n  HEAPU32[((argv_ptr) >> 2)] = 0;\n  try {\n    var ret = entryFunction(argc, argv);\n    // if we're not running an evented main loop, it's time to exit\n    exitJS(ret, /* implicit = */ true);\n    return ret;\n  } catch (e) {\n    return handleException(e);\n  }\n}\n\nfunction run(args = arguments_) {\n  preRun();\n  function doRun() {\n    // run may have just been called through dependencies being fulfilled just in this very frame,\n    // or while the async setStatus time below was happening\n    Module[\"calledRun\"] = true;\n    if (ABORT) return;\n    initRuntime();\n    preMain();\n    readyPromiseResolve?.(Module);\n    var noInitialRun = true;\n    if (!noInitialRun) callMain(args);\n    postRun();\n  }\n  {\n    doRun();\n  }\n}\n\nvar wasmExports;\n\n// In modularize mode the generated code is within a factory function so we\n// can use await here (since it's not top-level-await).\nwasmExports = await (createWasm());\n\nrun();\n\n// end include: postamble.js\n// include: postamble_modularize.js\n// In MODULARIZE mode we wrap the generated code in a factory function\n// and return either the Module itself, or a promise of the module.\n// We assign to the `moduleRtn` global here and configure closure to see\n// this as and extern so it won't get minified.\nif (runtimeInitialized) {\n  moduleRtn = Module;\n} else {\n  // Set up the promise that indicates the Module is initialized\n  moduleRtn = new Promise((resolve, reject) => {\n    readyPromiseResolve = resolve;\n    readyPromiseReject = reject;\n  });\n}\n\n\n  return moduleRtn;\n}\n\n// Export using a UMD style export, or ES6 exports if selected\nexport default Module;\n\n"],
  "mappings": "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",
  "names": ["Module", "moduleArg", "moduleRtn", "require", "Dialog", "GlkOte", "glkote_event_data", "glkote_event_ready", "options", "accept", "callMain", "data", "filename", "arguments_", "thisProgram", "quit_", "status", "toThrow", "_scriptName", "scriptDirectory", "locateFile", "path", "readAsync", "readBinary", "fs", "url", "response", "out", "err", "wasmBinary", "ABORT", "EXITSTATUS", "isFileURI", "readyPromiseResolve", "readyPromiseReject", "HEAP8", "HEAPU8", "HEAP16", "HEAPU16", "HEAP32", "HEAPU32", "HEAPF32", "HEAPF64", "HEAP64", "HEAPU64", "runtimeInitialized", "runtimeExited", "updateMemoryViews", "b", "wasmMemory", "preRun", "initRuntime", "wasmExports", "preMain", "exitRuntime", "___funcs_on_exit", "flush_NO_FILESYSTEM", "postRun", "abort", "what", "wasmBinaryFile", "findWasmBinary", "getBinarySync", "file", "getWasmBinary", "binaryFile", "instantiateArrayBuffer", "imports", "binary", "instance", "reason", "instantiateAsync", "instantiationResult", "getWasmImports", "wasmImports", "createWasm", "receiveInstance", "module", "Asyncify", "assignWasmExports", "receiveInstantiationResult", "result", "info", "exports", "ExitStatus", "dynCalls", "stackRestore", "val", "__emscripten_stack_restore", "stackSave", "_emscripten_stack_get_current", "___call_sighandler", "fp", "sig", "a1", "dynCall_vi", "exceptionLast", "ExceptionInfo", "excPtr", "type", "destructor", "caught", "rethrown", "adjustedPtr", "setTempRet0", "__emscripten_tempret_set", "findMatchingCatch", "args", "thrown", "thrownType", "caughtType", "adjusted_ptr_addr", "___cxa_can_catch", "___cxa_find_matching_catch_2", "uncaughtExceptionCount", "___cxa_throw", "ptr", "___resumeException", "UTF8Decoder", "findStringEnd", "heapOrArray", "idx", "maxBytesToRead", "ignoreNul", "maxIdx", "UTF8ToString", "end", "SYSCALLS", "ret", "___syscall_fcntl64", "fd", "cmd", "varargs", "___syscall_getcwd", "buf", "size", "___syscall_getdents64", "dirp", "count", "___syscall_ioctl", "op", "___syscall_lstat64", "___syscall_mkdirat", "dirfd", "mode", "___syscall_newfstatat", "flags", "___syscall_openat", "___syscall_readlinkat", "bufsize", "___syscall_rmdir", "___syscall_stat64", "__abort_js", "runtimeKeepaliveCounter", "__emscripten_runtime_keepalive_clear", "__emscripten_throw_longjmp", "INT53_MAX", "INT53_MIN", "bigintToI53Checked", "num", "__gmtime_js", "time", "tmPtr", "date", "start", "yday", "isLeapYear", "year", "MONTH_DAYS_LEAP_CUMULATIVE", "MONTH_DAYS_REGULAR_CUMULATIVE", "ydayFromDate", "leap", "monthDaysCumulative", "__localtime_js", "summerOffset", "winterOffset", "dst", "timers", "handleException", "e", "keepRuntimeAlive", "_proc_exit", "code", "exitJS", "implicit", "_exit", "maybeExit", "callUserCallback", "func", "_emscripten_get_now", "__setitimer_js", "which", "timeout_ms", "id", "__emscripten_timeout", "stringToUTF8Array", "str", "heap", "outIdx", "maxBytesToWrite", "startIdx", "endIdx", "i", "u", "stringToUTF8", "outPtr", "__tzset_js", "timezone", "daylight", "std_name", "dst_name", "currentYear", "winter", "summer", "stdTimezoneOffset", "extractZone", "timezoneOffset", "sign", "absOffset", "hours", "minutes", "winterName", "summerName", "_emscripten_date_now", "nowIsMonotonic", "checkWasiClock", "clock_id", "_clock_time_get", "clk_id", "ignored_precision", "ptime", "now", "nsec", "writeBuffer", "buffer", "_malloc", "writeBufferJSON", "json", "encoder", "_emglken_file_delete", "path_ptr", "path_len", "_emglken_file_exists", "_emglken_file_flush", "emglken_files", "_emglken_file_read", "_emglken_file_write_buffer", "buf_ptr", "buf_len", "_emglken_get_dirs", "dirs", "_emglken_get_glkote_event", "resolve", "_emglken_send_glkote_update", "update_ptr", "update_len", "obj", "getHeapMax", "alignMemory", "alignment", "growMemory", "oldHeapSize", "pages", "_emscripten_resize_heap", "requestedSize", "oldSize", "maxHeapSize", "cutDown", "overGrownHeapSize", "newSize", "replacement", "ENV", "getExecutableName", "getEnvStrings", "lang", "env", "x", "strings", "_environ_get", "__environ", "environ_buf", "bufSize", "envp", "string", "lengthBytesUTF8", "len", "c", "_environ_sizes_get", "penviron_count", "penviron_buf_size", "_fd_close", "_fd_read", "iov", "iovcnt", "pnum", "_fd_seek", "offset", "whence", "newOffset", "printCharBuffers", "UTF8ArrayToString", "endPtr", "printChar", "stream", "curr", "_fflush", "_fd_write", "j", "initRandomFill", "nodeCrypto", "view", "randomFill", "_random_get", "stackAlloc", "sz", "__emscripten_stack_alloc", "stringToUTF8OnStack", "runAndAbortIfError", "runtimeKeepalivePush", "runtimeKeepalivePop", "importPattern", "original", "isAsyncifyImport", "wrapper", "top", "_asyncify_stop_unwind", "reject", "stack", "stackSize", "bottomOfCallStack", "rewindId", "startAsync", "reachedCallback", "reachedAfterCallback", "handleSleepReturnValue", "_asyncify_start_rewind", "asyncWasmReturnValue", "isError", "handled", "asyncPromiseHandlers", "_asyncify_start_unwind", "_asyncify_stop_rewind", "_free", "wakeUp", "_main", "_setThrew", "dynCall_vii", "dynCall_iii", "dynCall_iiii", "dynCall_ii", "dynCall_viiii", "dynCall_viiiii", "dynCall_viiiiii", "dynCall_viii", "dynCall_iijj", "dynCall_jiii", "dynCall_viiiiiii", "dynCall_iiiiii", "dynCall_ij", "dynCall_iiiii", "dynCall_v", "dynCall_viiiiiiii", "dynCall_iiiiiiiii", "dynCall_viiiiiiiii", "dynCall_iiiiiii", "dynCall_viiiiiiiiiii", "dynCall_iiiiiiiiii", "dynCall_iiiiiiii", "dynCall_iiiiiiiiiii", "dynCall_iiiiiiiiiiiiii", "dynCall_iiiiiiiiiiiiiiiiii", "dynCall_viiiiiiiiiiiiiii", "dynCall_i", "dynCall_iiiiiiiiiiii", "dynCall_iiiiiiiiiiiiiiii", "dynCall_iiiiiiiiiiiii", "dynCall_jiji", "dynCall_iidiiii", "wasmTable", "invoke_i", "invoke_ii", "invoke_iii", "invoke_iiii", "invoke_iiiii", "invoke_iiiiii", "invoke_iiiiiii", "invoke_iiiiiiii", "invoke_iiiiiiiii", "invoke_iiiiiiiiii", "invoke_iiiiiiiiiii", "invoke_iiiiiiiiiiii", "invoke_iiiiiiiiiiiiii", "invoke_iiiiiiiiiiiiiiii", "invoke_iiiiiiiiiiiiiiiiii", "invoke_iijj", "invoke_ij", "invoke_jiii", "invoke_v", "invoke_vi", "invoke_vii", "invoke_viii", "invoke_viiii", "invoke_viiiii", "invoke_viiiiii", "invoke_viiiiiii", "invoke_viiiiiiii", "invoke_viiiiiiiii", "invoke_viiiiiiiiiii", "invoke_viiiiiiiiiiiiiii", "index", "sp", "a2", "a3", "a4", "a5", "a6", "a7", "a8", "a9", "a10", "a11", "a12", "a13", "a14", "a15", "a16", "a17", "entryFunction", "argc", "argv", "argv_ptr", "arg", "run", "doRun", "noInitialRun", "tads_default"]
}
